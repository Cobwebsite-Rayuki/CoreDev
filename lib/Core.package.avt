// Core@Main:1.0.0
//#region js def //
declare global {

namespace Core{
namespace State {
type Fields<T> = (keyof T)[];
}

namespace Lib {
class Validator {
    static email(txt: string): boolean;
    static phone(txt: string): boolean;
}
}

namespace Lib {
class Time {
    private static cbEachMinute;
    private static cbEachMinuteFirst;
    static runEachMinute(cb: Function, runOnCall?: boolean): void;
    static stopRunEachMinute(cb: Function): void;
}
}

const Colors: {
    readonly green: "green";
    readonly success: "success";
    readonly red: "red";
    readonly error: "error";
    readonly orange: "orange";
    readonly warning: "warning";
    readonly blue: "blue";
    readonly information: "information";
    readonly primary: "primary";
    readonly secondary: "secondary";
};

namespace Lib {
class StringTools {
    static removeAccents(value: string): string;
    static contains(src: string | undefined, search: string): boolean;
    static firstLetterUpper(txt: string): string;
}
}

namespace Lib {
class NumberTools {
    static pretty(nb: number): string;
}
}

namespace Websocket.Events {
class ApplicationTestEvent2 extends AventusSharp.WebSocket.WsEvent<string> {
    /**
     * @inheritdoc
     */
    protected path(): string;
}
}

namespace Errors {
enum PdfErrorCode {
    UnknowError = 0,
    NoNameProvided = 1
}
}

namespace Errors {
enum ImageFileErrorCode {
    UnknowError = 0,
    NotValidImage = 1,
    FileNotSvg = 2,
    NoSize = 3
}
}

namespace Errors {
enum StorageErrorCode {
    UnknowError = 0,
    NotAllowed = 1,
    NotFound = 2
}
}

namespace Logic.FileSystem {
enum IsAllowedAction {
    Read = 0,
    Write = 1,
    Delete = 2
}
}

namespace Logic.FileSystem {
@Convertible()
class FileDetails extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    Name: string;
    Size: number;
    LastEdit: Date;
    Extension: string;
    IsDirectory: boolean;
}
}

namespace Errors {
enum DesktopErrorCode {
    NoDefaultDesktop = 0
}
}

namespace Data {
@Convertible()
class SystemInfo extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    TimeZone: string;
    Version: string;
    CompilationDate: string;
}
}

namespace Data {
@Convertible()
class Settings extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Key: string;
    Value: string;
    UserId?: number;
}
}

namespace Data {
@Convertible()
class ManifestIcon extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    src: string;
    type: string;
    sizes: string;
    purpose?: string;
}
}

namespace App {
enum AppErrorCode {
    AppFileNotFound = 0,
    MoreThanOneAppFileFound = 1,
    NoAppFileFound = 2,
    NoIconFileFound = 3,
    WrongVersionFormat = 4,
    NoName = 5,
    UnknowError = 6,
    NotZipFile = 7,
    NotInManagement = 8
}
}

namespace Components {
class UserProfilPicture extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	uri?: string;
    private __4c9a0566bd04f8ca158657ccaa880d94method1;
    private __4c9a0566bd04f8ca158657ccaa880d94method0;
}
}

namespace Components {
class Tab extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	label: string;
    get headerContent(): HTMLElement[];
}
}

namespace Components {
type SortColumns = {
    [key: string]: 'asc' | 'desc';
};
}

namespace Components {
type FilterDataAction<T> = (value: T) => boolean;
}

namespace Components {
type Key<T> = keyof T;
}

namespace Components {
type TableSchemaCellContent<T> = (data: T, cell: Components.TableCell<any, T>) => (void | string | undefined) | Promise<(void | string | undefined)>;
}

namespace Components {
type TableSchemaCellCst<T> = new () => Components.TableCell<any, T>;
}

namespace Components {
type TableCellType = 'number' | 'string' | 'date' | 'boolean' | 'custom' | 'picture';
}

namespace Components {
class Separator extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Components {
class Row extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Components {
class MenuSeparator extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Components {
class MenuItem extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	icon: string;
    private __d02c0c7e8b84b9fd639369f589dd9b6fmethod0;
}
}

namespace Components {
enum MenuState {
    Opening = 0,
    Open = 1,
    Closing = 2,
    Close = 3
}
}

namespace Components {
class Col extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	size: number;
    @Attribute()
	size_xs: number;
    @Attribute()
	size_sm: number;
    @Attribute()
	size_md: number;
    @Attribute()
	size_lg: number;
    @Attribute()
	size_xl: number;
    @Attribute()
	offset: number;
    @Attribute()
	offset_xs: number;
    @Attribute()
	offset_sm: number;
    @Attribute()
	offset_md: number;
    @Attribute()
	offset_lg: number;
    @Attribute()
	offset_xl: number;
    @Attribute()
	offset_right: number;
    @Attribute()
	offset_right_xs: number;
    @Attribute()
	offset_right_sm: number;
    @Attribute()
	offset_right_md: number;
    @Attribute()
	offset_right_lg: number;
    @Attribute()
	offset_right_xl: number;
    @Attribute()
	center: boolean;
}
}

namespace Components {
class CardTitle extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Components {
class Card extends Aventus.WebComponent implements Aventus.DefaultComponent {
    protected postCreation(): void;
}
}

namespace Components {
type ExtractTypeTwoColumnsOptions<X extends Components.TwoColumnsOption<U>, U> = X extends Components.TwoColumnsOption<infer U> ? U : never;
}

namespace Components {
class BoxContainer extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: BoxContainer) => {
            target.style.setProperty("--item-box-margin", target.space + 'px');
        })
	space: number;
}
}

namespace Components {
class ItemBox extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Components {
class OptionsContainer extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	private open;
    private select;
    onOpen: Aventus.Callback<(open: boolean) => void>;
    isAnimating: boolean;
    init(select: Components.GenericSelect<any>): void;
    show(container?: HTMLElement): any;
    hide(): void;
    protected addAnimationEnd(): void;
    protected postCreation(): void;
}
}

namespace Components {
type ExtractTypeOption<X extends Components.GenericOption<U>, U> = X extends Components.GenericOption<infer U> ? U : never;
}

namespace Components {
class InputFile extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Components {
@Storybook({
        export: 'public',
    })
class Img extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	cache: boolean;
    @Property((target: Img) => {
            target.onSrcChanged();
        })
	@StoryValue("/logo.svg")
	src?: string;
    @Property((target: Img) => {
            if(target.src != "") {
                target.calculateSize();
            }
        })
	mode: 'stretch' | 'contains' | 'cover';
    @ViewElement()
	protected imgEl: HTMLImageElement;
    @ViewElement()
	protected svgEl: HTMLDivElement;
    @ViewElement()
	protected iconEl: MaterialIcon.Icon;
    private isCalculing?;
    private maxCalculateSize;
    private ratio;
    private resizeObserver?;
    private calculateSize;
    private onSrcChanged;
    protected postDestruction(): void;
    protected postCreation(): void;
}
}

namespace Lib {
type HSVAColor = {
    h: number;
    s: number;
    v: number;
    a: number;
};
}

namespace Lib {
type HSVColor = {
    h: number;
    s: number;
    v: number;
};
}

namespace Lib {
type HSLAColor = {
    h: number;
    s: number;
    l: number;
    a: number;
};
}

namespace Lib {
type HSLColor = {
    h: number;
    s: number;
    l: number;
};
}

namespace Lib {
type RGBColor = {
    r: number;
    g: number;
    b: number;
};
}

namespace Lib {
type RGBAColor = {
    r: number;
    g: number;
    b: number;
    a: number;
};
}

namespace Lib {
class Colors {
    static get BLACK(): Lib.Color;
    static get SILVER(): Lib.Color;
    static get GRAY(): Lib.Color;
    static get WHITE(): Lib.Color;
    static get MAROON(): Lib.Color;
    static get RED(): Lib.Color;
    static get PURPLE(): Lib.Color;
    static get GREEN(): Lib.Color;
    static get LIME(): Lib.Color;
    static get OLIVE(): Lib.Color;
    static get YELLOW(): Lib.Color;
    static get NAVY(): Lib.Color;
    static get BLUE(): Lib.Color;
    static get TEAL(): Lib.Color;
    static get AQUA(): Lib.Color;
    static get ORANGE(): Lib.Color;
    static get ALICEBLUE(): Lib.Color;
    static get ANTIQUEWHITE(): Lib.Color;
    static get AQUAMARINE(): Lib.Color;
    static get AZURE(): Lib.Color;
    static get BEIGE(): Lib.Color;
    static get BISQUE(): Lib.Color;
    static get BLANCHEDALMOND(): Lib.Color;
    static get BLUEVIOLET(): Lib.Color;
    static get BROWN(): Lib.Color;
    static get BURLYWOOD(): Lib.Color;
    static get CADETBLUE(): Lib.Color;
    static get CHARTREUSE(): Lib.Color;
    static get CHOCOLATE(): Lib.Color;
    static get CORAL(): Lib.Color;
    static get CORNFLOWERBLUE(): Lib.Color;
    static get CORNSILK(): Lib.Color;
    static get CRIMSON(): Lib.Color;
    static get CYAN(): Lib.Color;
    static get DARKBLUE(): Lib.Color;
    static get DARKCYAN(): Lib.Color;
    static get DARKGOLDENROD(): Lib.Color;
    static get DARKGRAY(): Lib.Color;
    static get DARKGREEN(): Lib.Color;
    static get DARKGREY(): Lib.Color;
    static get DARKKHAKI(): Lib.Color;
    static get DARKMAGENTA(): Lib.Color;
    static get DARKOLIVEGREEN(): Lib.Color;
    static get DARKORANGE(): Lib.Color;
    static get DARKORCHID(): Lib.Color;
    static get DARKRED(): Lib.Color;
    static get DARKSALMON(): Lib.Color;
    static get DARKSEAGREEN(): Lib.Color;
    static get DARKSLATEBLUE(): Lib.Color;
    static get DARKSLATEGRAY(): Lib.Color;
    static get DARKSLATEGREY(): Lib.Color;
    static get DARKTURQUOISE(): Lib.Color;
    static get DARKVIOLET(): Lib.Color;
    static get DEEPPINK(): Lib.Color;
    static get DEEPSKYBLUE(): Lib.Color;
    static get DIMGRAY(): Lib.Color;
    static get DIMGREY(): Lib.Color;
    static get DODGERBLUE(): Lib.Color;
    static get FIREBRICK(): Lib.Color;
    static get FLORALWHITE(): Lib.Color;
    static get FORESTGREEN(): Lib.Color;
    static get GAINSBORO(): Lib.Color;
    static get GHOSTWHITE(): Lib.Color;
    static get GOLD(): Lib.Color;
    static get GOLDENROD(): Lib.Color;
    static get GREENYELLOW(): Lib.Color;
    static get GREY(): Lib.Color;
    static get HONEYDEW(): Lib.Color;
    static get HOTPINK(): Lib.Color;
    static get INDIANRED(): Lib.Color;
    static get INDIGO(): Lib.Color;
    static get IVORY(): Lib.Color;
    static get KHAKI(): Lib.Color;
    static get LAVENDER(): Lib.Color;
    static get LAVENDERBLUSH(): Lib.Color;
    static get LAWNGREEN(): Lib.Color;
    static get LEMONCHIFFON(): Lib.Color;
    static get LIGHTBLUE(): Lib.Color;
    static get LIGHTCORAL(): Lib.Color;
    static get LIGHTCYAN(): Lib.Color;
    static get LIGHTGOLDENRODYELLOW(): Lib.Color;
    static get LIGHTGRAY(): Lib.Color;
    static get LIGHTGREEN(): Lib.Color;
    static get LIGHTGREY(): Lib.Color;
    static get LIGHTPINK(): Lib.Color;
    static get LIGHTSALMON(): Lib.Color;
    static get LIGHTSEAGREEN(): Lib.Color;
    static get LIGHTSKYBLUE(): Lib.Color;
    static get LIGHTSLATEGRAY(): Lib.Color;
    static get LIGHTSLATEGREY(): Lib.Color;
    static get LIGHTSTEELBLUE(): Lib.Color;
    static get LIGHTYELLOW(): Lib.Color;
    static get LIMEGREEN(): Lib.Color;
    static get LINEN(): Lib.Color;
    static get MAGENTA(): Lib.Color;
    static get FUCHSIA(): Lib.Color;
    static get MEDIUMAQUAMARINE(): Lib.Color;
    static get MEDIUMBLUE(): Lib.Color;
    static get MEDIUMORCHID(): Lib.Color;
    static get MEDIUMPURPLE(): Lib.Color;
    static get MEDIUMSEAGREEN(): Lib.Color;
    static get MEDIUMSLATEBLUE(): Lib.Color;
    static get MEDIUMSPRINGGREEN(): Lib.Color;
    static get MEDIUMTURQUOISE(): Lib.Color;
    static get MEDIUMVIOLETRED(): Lib.Color;
    static get MIDNIGHTBLUE(): Lib.Color;
    static get MINTCREAM(): Lib.Color;
    static get MISTYROSE(): Lib.Color;
    static get MOCCASIN(): Lib.Color;
    static get NAVAJOWHITE(): Lib.Color;
    static get OLDLACE(): Lib.Color;
    static get OLIVEDRAB(): Lib.Color;
    static get ORANGERED(): Lib.Color;
    static get ORCHID(): Lib.Color;
    static get PALEGOLDENROD(): Lib.Color;
    static get PALEGREEN(): Lib.Color;
    static get PALETURQUOISE(): Lib.Color;
    static get PALEVIOLETRED(): Lib.Color;
    static get PAPAYAWHIP(): Lib.Color;
    static get PEACHPUFF(): Lib.Color;
    static get PERU(): Lib.Color;
    static get PINK(): Lib.Color;
    static get PLUM(): Lib.Color;
    static get POWDERBLUE(): Lib.Color;
    static get ROSYBROWN(): Lib.Color;
    static get ROYALBLUE(): Lib.Color;
    static get SADDLEBROWN(): Lib.Color;
    static get SALMON(): Lib.Color;
    static get SANDYBROWN(): Lib.Color;
    static get SEAGREEN(): Lib.Color;
    static get SEASHELL(): Lib.Color;
    static get SIENNA(): Lib.Color;
    static get SKYBLUE(): Lib.Color;
    static get SLATEBLUE(): Lib.Color;
    static get SLATEGRAY(): Lib.Color;
    static get SLATEGREY(): Lib.Color;
    static get SNOW(): Lib.Color;
    static get SPRINGGREEN(): Lib.Color;
    static get STEELBLUE(): Lib.Color;
    static get TAN(): Lib.Color;
    static get THISTLE(): Lib.Color;
    static get TOMATO(): Lib.Color;
    static get TURQUOISE(): Lib.Color;
    static get VIOLET(): Lib.Color;
    static get WHEAT(): Lib.Color;
    static get WHITESMOKE(): Lib.Color;
    static get YELLOWGREEN(): Lib.Color;
    static get REBECCAPURPLE(): Lib.Color;
}
}

namespace Components {
type FormValidateResult = Aventus.Asyncable<string | string[] | boolean | undefined>;
}

namespace Components {
type FormValidate = (field: string, value: unknown) => Components.FormValidateResult;
}

namespace Components {
type VirtualFormConfig = {
    validate?: Components.FormValidate;
    validateOnChange?: boolean;
    handleValidateNoInputError?: (errors: {
        [key: string]: string[];
    }) => any;
    handleExecuteNoInputError?: (errors: Aventus.GenericError[]) => any;
};
}

namespace Data.DataTypes {
@Convertible()
class Pdf extends AventusSharp.Data.AventusFile {
    static get Fullname(): string;
    Name: string;
    Html: string;
    Debug: boolean;
}
}

namespace Lib {
type FileSaverOption = {
    /**
    * Automatically provide Unicode text encoding hints
    * @default false
    */
    autoBom: boolean;
};
}

namespace Lib {
class FontManager {
    static loadedFonts(): unknown;
    private static urlToBase64;
    static getFontRulesBase64(): unknown;
    private static loadedStyles;
    private static findFontInsideStylesheet;
}
}

namespace Components {
class SheetSplitter extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	copy?: string;
    @Attribute()
	name?: string;
}
}

namespace Components {
type ISheetElement = {
    getHtml(): string;
    getCSS(): string;
};
}

namespace Components {
type SheetOrientation = "portrait" | "landscape";
}

namespace Components {
type SheetFormat = "A3" | "A4" | "A5" | "letter" | "legal";
}

namespace Components {
type SheetSettings = {
    format: Components.SheetFormat;
    orientation: Components.SheetOrientation;
    padding: string;
    calculateOnDisplay: boolean;
};
}

namespace Lib {
class DomTools {
    static clearElement(element: HTMLElement | ShadowRoot): void;
}
}

namespace Lib {
class DateTools {
    static isSameDate(date1?: Date, date2?: Date): boolean;
    static isSameDateTime(date1?: Date, date2?: Date): boolean;
    static print(date: Date, options?: Intl.DateTimeFormatOptions | undefined, locale?: string): string;
    private static _localMonths;
    static getMonthsName(): string[];
    static getStartMonth(date: Date): Date;
    static getEndMonth(date: Date): Date;
    static getStartWeek(date: Date): Date;
    static getEndWeek(date: Date): Date;
    static getStartDay(date: Date): Date;
    static getEndDay(date: Date): Date;
    static diffMinutes(d1: Date, d2: Date): number;
    static diffHours(d1: Date, d2: Date): number;
    static diffDays(d1: Date, d2: Date): number;
}
}

namespace System {
type SizeList = "xs" | "sm" | "md" | "lg" | "xl";
}

namespace System {
type GetArgs<X> = X extends (...args: infer P) => infer R ? P : never;
}

namespace System {
type GetPromiseResult<X extends (...args: any) => any> = ReturnType<X> extends Promise<infer Y> ? Y : never;
}

namespace System {
type GetErrorValue<X> = X extends Aventus.ResultWithError<infer B> ? B : undefined;
}

namespace System {
type ApplicationQueryResult<X extends (...args: {}) => any> = System.GetErrorValue<System.GetPromiseResult<X>>;
}

namespace System {
class ApplicationBreakPoint {
    static xs: number;
    static sm: number;
    static md: number;
    static lg: number;
    static xl: number;
}
}

namespace Components {
class PwaPromptIos extends Aventus.WebComponent implements Aventus.DefaultComponent {
    static get isStandalone(): boolean;
    static get isiOS(): boolean;
    static get isAvailable(): boolean;
    @ViewElement()
	protected overlay: HTMLDivElement;
    @ViewElement()
	protected prompt: HTMLDivElement;
    @Attribute()
	visible: boolean;
    close(): void;
    protected postCreation(): void;
}
}

namespace Libs {
class DateConverter extends Aventus.DateConverter {
    isStringDate(txt: string): boolean;
    fromString(txt: string): Date | null;
    toString(date: Date): string;
}
}

namespace Lib {
class Pointer {
    static isTouch(e: Event): boolean;
}
}

namespace Permissions {
enum ApplicationPermission {
    AllowAccess = 0
}
}

namespace Components {
interface PopupInfo {
    title: string;
    max_width?: string;
    min_width?: string;
    max_height?: string;
    min_height?: string;
    hide_red_btn?: boolean;
    behind?: boolean;
    close_on_click?: boolean;
}
}

namespace Components {
interface ConfirmInfo extends Components.PopupInfo {
    description: string;
    true_txt: string;
    false_txt: string;
}
}

namespace Components {
interface AlertInfo extends Components.PopupInfo {
    description: string;
    btn_txt: string;
}
}

namespace Lib {
type Rectangle = {
    x1: number;
    y1: number;
    x2: number;
    y2: number;
};
}

namespace Lib {
class Geometry {
    static getIntersectingRectangle(rect1: Lib.Rectangle, rect2: Lib.Rectangle): Lib.Rectangle | false;
    static getRectangleArea(rect1: Lib.Rectangle): number;
}
}

namespace System {
type ApplicationPositionSize = {
    top: number;
    left: number;
    height: number;
    width: number;
    isFullScreen: boolean;
};
}

namespace System {
type History = {
    state: Aventus.State;
};
}

namespace System {
type ApplicationInitOptions = {
    applicationNumber: number;
    desktopId: number;
    desktop: System.Desktop;
};
}

namespace System {
type ApplicationQueryFctResult<X> = Aventus.ResultWithError<X> | Aventus.VoidWithError;
}

namespace System {
type ApplicationQueryFct<X> = (...args: {}) => Promise<System.ApplicationQueryFctResult<X>>;
}

namespace System {
type ExecType<X> = (prom: Promise<System.ApplicationQueryFctResult<X>>) => Promise<X | undefined>;
}

namespace State {
type Field<T> = keyof T;
}

namespace Lib {
class ApplicationStateManager extends Aventus.StateManager implements Aventus.IStateManager {
    readonly application: System.Application;
    constructor(application: System.Application);
    save(): Promise<void>;
    protected assignDefaultState(stateName: string): Aventus.State;
    setState(state: string | Aventus.State): Promise<boolean>;
}
}

type ColorsType = 'green' | 'success' | 'red' | 'error' | 'orange' | 'warning' | 'blue' | 'information' | 'primary' | 'secondary';

class Style {
    colors: ColorsType[];
}

namespace Components {
class ButtonIcon extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	icon?: string;
    @Attribute()
	color?: ColorsType;
    @Attribute()
	outline: boolean;
    @Attribute()
	disabled: boolean;
    private __86a55d8d752358ce167fd0da93753a9emethod0;
}
}

namespace Components {
@OverrideView()
class ButtonIconMi extends Components.ButtonIcon implements Aventus.DefaultComponent {
    @Property()
	icon: ___Core.Components.IconType;
    private __6bf11e2b799d6cfde945f27815605c6bmethod0;
}
}

namespace Components {
type NotificationPosition = 'bottom' | 'top' | 'bottom left' | 'top left' | 'bottom right' | 'top right';
}

namespace Components {
type ResizeConfig = {
    applyWidth?: (value: number) => void;
    applyHeight?: (value: number) => void;
    applyTop?: (value: number) => void;
    applyLeft?: (value: number) => void;
};
}

namespace Components {
enum ResizeDirection {
    Top = 0,
    TopLeft = 1,
    Left = 2,
    BottomLeft = 3,
    Bottom = 4,
    BottomRight = 5,
    Right = 6,
    TopRight = 7
}
}

namespace Websocket.Routes {
class DesktopRouter_RemoveDesktopIcon extends AventusSharp.WebSocket.WsEvent<boolean> {
    /**
     * @inheritdoc
     */
    protected path(): string;
    /**
     * @inheritdoc
     */
    protected listenOnBoot(): boolean;
}
}

namespace Errors {
enum LoginCode {
    OK = 0,
    WrongCredentials = 1,
    Unknown = 2,
    NotConnected = 3
}
}

namespace Errors {
@Convertible()
class LoginError extends Aventus.GenericError<typeof Errors.LoginCode> {
    static get Fullname(): string;
}
}

namespace Lib {
class HttpRouter extends Aventus.HttpRouter {
}
}

namespace Errors {
enum CoreErrorCode {
    NotImplemented = 0,
    NotAvailable = 1,
    Impossible = 2,
    NotAllowed = 3,
    NotLogin = 4,
    ConversionFailed = 5,
    SeederError = 6,
    MigrationError = 7,
    UnknowError = 8,
    TransactionGuidMissmatch = 9
}
}

namespace Lib {
type DeviceType = "pc" | "tablet" | "mobile";
}

namespace Websocket {
class MainEndPoint extends AventusSharp.WebSocket.EndPoint {
    /**
     * Create a singleton
     */
    static getInstance(): Websocket.MainEndPoint;
    protected get path(): string;
}
}

namespace Websocket.Events {
class ApplicationTestEvent extends AventusSharp.WebSocket.WsEvent<Websocket.Events.ApplicationTestEvent.Body> {
    /**
     * @inheritdoc
     */
    protected path(): string;
    constructor(endpoint?: AventusSharp.WebSocket.EndPoint, getPrefix?: () => string);
}
}

namespace Data {
@Convertible()
class Permission extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    EnumName: string;
    AdditionalInfo: string;
    EnumValue: Aventus.Enum;
}
}

namespace Data {
@Convertible()
class PermissionUser extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Data: any;
    Permission: Data.Permission;
    UserId: number;
    Allow: boolean;
}
}

namespace Permissions.Tree {
@Convertible()
class PermissionTreeItem extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    DisplayName: string;
    Description: string;
    EnumName: string;
    Value: Aventus.Enum;
    PermissionId: number;
    Permissions: Permissions.Tree.PermissionTreeItem[];
}
}

namespace Components {
class Tracker {
    private readonly velocityMultiplier;
    updateTime: number;
    delta: {
        x: number;
        y: number;
    };
    velocity: {
        x: number;
        y: number;
    };
    lastPosition: {
        x: number;
        y: number;
    };
    constructor(touch: Touch | PointerEvent | MouseEvent);
    update(touch: Touch | PointerEvent | MouseEvent): void;
    private getPointerData;
    private getPosition;
}
}

namespace System {
class Panel extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Permissions {
enum DesktopPermission {
    CanHaveVirtualDesktop = 0
}
}

namespace Permissions {
interface IPermissionQuery {
    $type?: string;
    value?: number | string;
    additionalInfo?: string;
}
}

namespace System {
interface IDesktopActivable extends HTMLElement {
    is_desktop_active: boolean;
    setDesktopActive: () => void;
    removeDesktopActive: () => void;
}
}

namespace System {
class DesktopActivableLogic {
    private static findDeskstop;
    static set(el: System.IDesktopActivable, desktop?: System.Desktop): void;
    static remove(el: System.IDesktopActivable, desktop?: System.Desktop): void;
}
}

namespace Routes {
class CoreRouter extends Aventus.HttpRouter {
    protected defineOptions(options: Aventus.HttpRouterOptions): Aventus.HttpRouterOptions;
}
}

namespace Routes {
class SystemInfoRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    GetSystemInfo(): Promise<AventusSharp.Tools.ResultWithError<Data.SystemInfo>>;
}
}

namespace Routes {
class PermissionUserRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    GetAllByUser(body: {
        userId: number;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<Data.PermissionUser[]>>;
    EditPermission(body: {
        created: Data.PermissionUser[];
        updated: Data.PermissionUser[];
        deleted: Data.PermissionUser[];
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<boolean>>;
}
}

namespace Routes {
class PdfRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    Generate(body: {
        pdf: Data.DataTypes.Pdf;
    } | FormData): Promise<AventusSharp.Tools.VoidWithError>;
    Build(body: {
        pdf: Data.DataTypes.Pdf;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<Blob>>;
}
}

namespace Routes {
class MainRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    LoginAction(body: {
        username: string;
        password: string;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<boolean>>;
    Logout(): Promise<AventusSharp.Tools.VoidWithError>;
    VapidPublicKey(): Promise<AventusSharp.Tools.ResultWithError<string>>;
    Register(body: {
        subscription: PushSubscription;
    } | FormData): Promise<AventusSharp.Tools.VoidWithError>;
    SendNotification(): Promise<AventusSharp.Tools.VoidWithError>;
    BeginTransaction(body: {
        ms: number;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<string>>;
    CommitTransaction(body: {
        guid: string;
    } | FormData): Promise<AventusSharp.Tools.VoidWithError>;
    RollbackTransaction(body: {
        guid: string;
    } | FormData): Promise<AventusSharp.Tools.VoidWithError>;
    Restart(): Promise<AventusSharp.Tools.VoidWithError>;
}
}

namespace Lib {
class ServiceWorker {
    static getInstance(): Lib.ServiceWorker;
    private subscription?;
    init(registration: ServiceWorkerRegistration): any;
    private getSubscription;
    private subscribe;
    private unsubscribe;
    private urlBase64ToUint8Array;
}
}

namespace Data {
@Convertible()
class ApplicationData extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Name: string;
    DisplayName: string;
    Version: number;
    LogoClassName: string;
    LogoTagName: string;
    Extension: string;
}
}

namespace Components {
class PageCaseContainer extends Aventus.WebComponent implements Aventus.DefaultComponent {
}
}

namespace Components {
class PageCaseSlot extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	no: number;
    item?: HTMLElement;
}
}

namespace Data {
@Convertible()
class ApplicationOpen extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    id: string;
    applicationName: string;
    number: number;
    history: string;
    isHidden: boolean;
}
}

namespace Data {
@Convertible()
class ApplicationOpenInfo extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    DesktopId: number;
    Info: Data.ApplicationOpen;
}
}

namespace Websocket.Routes {
class DesktopRouter_RemoveApp extends AventusSharp.WebSocket.WsEvent<Data.ApplicationOpenInfo> {
    /**
     * @inheritdoc
     */
    protected path(): string;
    /**
     * @inheritdoc
     */
    protected listenOnBoot(): boolean;
}
}

namespace Data {
enum DesktopLocation {
    Desktop = 0,
    BottomBar = 1,
    HomeFav = 2
}
}

namespace Data {
enum BackgroundSize {
    Cover = 0,
    Contain = 1,
    Stretch = 2
}
}

namespace Data.DataTypes {
@Convertible()
class ImageFile extends AventusSharp.Data.AventusFile {
    static get Fullname(): string;
}
}

namespace Data {
@Convertible()
class Company extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Name: string;
    Logo: Data.DataTypes.ImageFile;
}
}

namespace Data {
@Convertible()
class User extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Firstname: string;
    Lastname: string;
    Username: string;
    Password: string;
    Token: string;
    Picture: Data.DataTypes.ImageFile;
    IsSuperAdmin: boolean;
}
}

namespace Data {
@Convertible()
class Group extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Name: string;
    Description: string;
    Users: Data.User[];
}
}

namespace RAM {
type GroupExtended = Data.Group & ___Core.RAM.GroupMethod;
}

namespace Routes {
class GroupRouter extends AventusSharp.Routes.StorableRoute<Data.Group> {
    constructor(router?: Aventus.HttpRouter);
    StorableName(): string;
}
}

namespace Routes {
class UserRouter extends AventusSharp.Routes.StorableRoute<Data.User> {
    constructor(router?: Aventus.HttpRouter);
    GetConnected(): Promise<AventusSharp.Tools.ResultWithError<Data.User>>;
    StorableName(): string;
}
}

type AddonsName = 'QrCodeReader' | 'QrCodeGenerator' | 'Univer';

class Addon {
    private static dependances;
    static need(application: string, addons: AddonsName[]): any;
    static need(application: System.AppIcon, addons: AddonsName[]): any;
    static loadForApp(application: string): Promise<void>;
    static load(name: AddonsName): Promise<void>;
}

namespace State {
class DesktopStateManager extends Aventus.StateManager implements Aventus.IStateManager {
    /**
     * Get the instance of the StateManager
     */
    static getInstance(): any;
}
}

namespace Lib {
enum SpecialTouch {
    Backspace = 0,
    Insert = 1,
    End = 2,
    PageDown = 3,
    PageUp = 4,
    Escape = 5,
    AltGraph = 6,
    Control = 7,
    Alt = 8,
    Shift = 9,
    CapsLock = 10,
    Tab = 11,
    Delete = 12,
    ArrowRight = 13,
    ArrowLeft = 14,
    ArrowUp = 15,
    ArrowDown = 16,
    Enter = 17
}
}

namespace State {
type MoveApplicationProvider = {
    setAppPositionTemp(shadow: System.AppIcon, x: number, y: number, instance: State.MoveApplication): boolean;
    clearAppPositionTemp(instance: State.MoveApplication): void;
    setAppPosition(icon: System.AppIcon, x: number, y: number, instance: State.MoveApplication): Promise<void>;
    removeAppPosition(icon: System.AppIcon, x: number, y: number, instance: State.MoveApplication): Promise<void>;
};
}

namespace Components {
interface IPositionable {
    position: number;
}
}

namespace Components {
class ContextMenuSeparator extends Aventus.WebComponent implements Aventus.DefaultComponent {
    priority: number;
    menu: Components.ContextMenu;
    canBeRendered: (items: (Components.ContextMenuItem | Components.ContextMenuSeparator)[], item: Components.ContextMenuItem | Components.ContextMenuSeparator) => boolean;
}
}

namespace Components {
class Collapse extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	open: boolean;
    @Attribute()
	no_animation: boolean;
    change: Aventus.Callback<(open: boolean) => void>;
    /**
     *
     */
    protected transitionEnd(e: Event): void;
    /**
     *
     */
    protected toggleOpen(): void;
}
}

namespace Components {
class ContextMenuItem extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	text: string;
    @Property()
	icon?: string;
    priority: number;
    action: () => void;
    menu: Components.ContextMenu;
    canBeRendered: (items: (Components.ContextMenuItem | Components.ContextMenuSeparator)[], item: Components.ContextMenuItem | Components.ContextMenuSeparator) => boolean;
    protected onPress(): void;
    protected postCreation(): void;
    private __75e8d9b88cdfe8a028412b25f4042b69method1;
    private __75e8d9b88cdfe8a028412b25f4042b69method2;
    private __75e8d9b88cdfe8a028412b25f4042b69method3;
    private __75e8d9b88cdfe8a028412b25f4042b69method0;
}
}

namespace Components {
type ContextMenuSeparatorOption = {
    priority?: number;
    canBeRendered?: (items: (Components.ContextMenuItem | Components.ContextMenuSeparator)[], current: Components.ContextMenuItem | Components.ContextMenuSeparator) => boolean;
};
}

namespace Components {
type ContextMenuItemOption = {
    icon?: string;
    materialIcon?: MaterialIcon.IconType;
    text: string;
    priority?: number;
    action: () => void;
    canBeRendered?: (items: (Components.ContextMenuItem | Components.ContextMenuSeparator)[], current: Components.ContextMenuItem | Components.ContextMenuSeparator) => boolean;
};
}

namespace Components {
class ContextMenu extends Aventus.WebComponent implements Aventus.DefaultComponent {
    private static instance;
    @ViewElement()
	protected collapseEl: Components.Collapse;
    @ViewElement()
	protected containerEl: HTMLDivElement;
    private _items;
    isTouch: boolean;
    init(pageX: number, pageY: number, isTouch: boolean, element: HTMLElement & {
        shadowRoot: ShadowRoot;
    }): void;
    protected calculatePosition(pageX: number, pageY: number, element: HTMLElement): void;
    addItem(item: Components.ContextMenuItemOption | Components.ContextMenuItem): void;
    addSeparator(item?: Components.ContextMenuSeparatorOption | Components.ContextMenuSeparator): void;
    private addFocus;
    close(): void;
    protected postCreation(): void;
}
}

namespace Components {
interface IContextMenu {
    /**
     * Use this function to add anything you want to display when user trigger the context menu
     * @param contextMenu - The current contextmenu that will be displayed
     * @param stop - Stop the process to add context menu parts and display the menu if has part
     */
    onContextMenu(contextMenu: Components.ContextMenu, stop: () => void): void;
}
}

namespace System {
class Loading extends Aventus.WebComponent implements Aventus.DefaultComponent, Components.IContextMenu {
    @Property()
	text: string;
    @Attribute()
	background: boolean;
    /**
     * @inheritdoc
     */
    onContextMenu(contextMenu: Components.ContextMenu, stop: () => void): void;
    private __f449123065aa1f6c0a81c7fbf3673938method0;
}
}

namespace Components {
class ContextMenuElement extends Aventus.WebComponent implements Aventus.DefaultComponent, Components.IContextMenu {
    /**
     * @inheritdoc
     */
    onContextMenu(contextMenu: Components.ContextMenu, stop: () => void): void;
}
}

namespace Lib {
class ShortcutManager {
    private static memory;
    private static isInit;
    private static arrayKeys;
    private static getText;
    static subscribe(combinaison: (Lib.SpecialTouch | string)[], cb: () => void): void;
    static unsubscribe(combinaison: (Lib.SpecialTouch | string)[], cb: () => void): void;
    private static onKeyDown;
    private static onKeyUp;
    private static init;
    private static uninit;
}
}

namespace System {
class ApplicationShortcut {
    private application;
    protected cmds: [(string | Lib.SpecialTouch)[], cb: () => any][];
    is_cmd: boolean;
    constructor(application: System.Application);
    init(): void;
    /**
     *  Defines the keyboard shortcuts for the application.
     */
    protected defaultShortcut(): [(string | Lib.SpecialTouch)[], cb: () => any][];
    manageShortcut(): void;
    protected defineCmds(): [(string | Lib.SpecialTouch)[], cb: () => any][];
    protected startCmd(): void;
    protected stopCmd(): void;
    protected runCmd(fct: () => any): () => void;
    protected printState(): void;
}
}

namespace Data {
@Convertible()
class DekstopConfiguration extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Background: Data.DataTypes.ImageFile;
    Data: any;
    BackgroundSize: Data.BackgroundSize;
    SyncDesktop: boolean;
    SizeMobile: number;
    SizeTablet: number;
    SizeDesktop: number;
    BackgroundColor?: string;
}
}

namespace Data {
@Convertible()
class DesktopAppIcon extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Position: number;
    DesktopId: number;
    IconTag: string;
    Location: Data.DesktopLocation;
}
}

namespace Websocket.Routes {
class DesktopRouter_SetDesktopIcon extends AventusSharp.WebSocket.WsEvent<Data.DesktopAppIcon> {
    /**
     * @inheritdoc
     */
    protected path(): string;
    /**
     * @inheritdoc
     */
    protected listenOnBoot(): boolean;
}
}

namespace Data {
@Convertible()
class Desktop extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Name: string;
    Token: string;
    UserId?: number;
    Configuration: Data.DekstopConfiguration;
    Icons: Data.DesktopAppIcon[];
    Applications: Data.ApplicationOpen[];
}
}

namespace Routes {
class DesktopRouter extends AventusSharp.Routes.StorableRoute<Data.Desktop> {
    constructor(router?: Aventus.HttpRouter);
    StorableName(): string;
}
}

namespace Data {
type DesktopData = Data.Desktop;
}

namespace Components {
class PageCase extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: PageCase) => {
            target.style.setProperty("--local-page-case-width", target.case_width + 'px');
            if(target.inverse) {
                target.calculateGrid();
            }
        })
	case_width: number;
    @Property((target: PageCase) => {
            target.style.setProperty("--local-page-case-height", target.case_height + 'px');
            if(target.inverse) {
                target.calculateGrid();
            }
        })
	case_height: number;
    @Attribute()
	min_case_margin_left: number;
    @Attribute()
	min_case_margin_top: number;
    /**
     * Move the children from the slot to the case
     */
    @Attribute()
	move_content: boolean;
    @Attribute()
	order_position: boolean;
    @Attribute()
	inverse: boolean;
    @Attribute()
	allow_scroll_outside: boolean;
    @Attribute()
	lock: boolean;
    @Attribute()
	min_page_number: number;
    @ViewElement()
	protected pageHider: HTMLDivElement;
    private casesEl;
    private pagesEl;
    private contentsEl;
    private nbCasePerPage;
    private currentPageNumber;
    private resizeObserver;
    allow_resize: boolean;
    private addResizeObserver;
    calculateGrid(): void;
    private getElements;
    private recalculatePosition;
    private addMoveAction;
    private displayCurrentPage;
    reset(): void;
    getElementAt(no: number): (HTMLElement & Partial<Components.IPositionable>) | undefined;
    removeElementAt(no: number): void;
    protected postCreation(): void;
}
}

namespace Routes {
class ApplicationRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    GetAll(): Promise<AventusSharp.Tools.ResultWithError<Data.ApplicationData[]>>;
    ConfigureAppData(): Promise<AventusSharp.Tools.ResultWithError<___Core.App.AppConfiguration>>;
    InstallDevApp(body: {
        container: string;
        app: string;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<boolean>>;
    UninstallDevApp(body: {
        app: string;
    } | FormData): Promise<AventusSharp.Tools.VoidWithError>;
    InstallApp(body: {
        file: File;
    } | FormData): Promise<AventusSharp.Tools.VoidWithError>;
}
}

namespace RAM {
class ApplicationRAM extends Aventus.Ram<Data.ApplicationData> implements Aventus.IRam {
    private getAllDone;
    /**
     * Create a singleton to store data
     */
    static getInstance(): RAM.ApplicationRAM;
    /**
     * @inheritdoc
     */
    defineIndexKey(): keyof Data.ApplicationData;
    /**
     * @inheritdoc
     */
    protected getTypeForData(objJson: Aventus.KeysObject<Data.ApplicationData> | Data.ApplicationData): new () => Data.ApplicationData;
    private getAllProms;
    private wait;
    private isLoading;
    protected beforeGetAll(result: Aventus.ResultRamWithError<Map<number, Aventus.RamItem<Data.ApplicationData>>>): Promise<void>;
    getApplicationByName(name: string): Promise<Aventus.RamItem<Data.ApplicationData> | null>;
}
}

namespace System {
class AppList extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: AppList) => {
            target.onShowChange();
        })
	show: boolean;
    @Attribute()
	private no_transition;
    @ViewElement()
	protected pageCaseEl: Components.PageCase;
    @ViewElement()
	protected searchContainer: HTMLDivElement;
    private closeAppList;
    private onShowChange;
    private loadApps;
    setIconSize(size: number): void;
    private addClose;
    protected postCreation(): void;
}
}

namespace Permissions {
abstract class PermissionQuery<T extends Aventus.Enum> implements Permissions.IPermissionQuery {
    $type?: string;
    value?: string | number;
    additionalInfo?: string;
    constructor(value: Aventus.EnumValue<T>, additionalInfo?: string);
}
}

namespace Permissions {
@Convertible()
class DesktopPermissionQuery extends Permissions.PermissionQuery<typeof Permissions.DesktopPermission> {
    static get Fullname(): string;
}
}

namespace Components {
class TouchRecord {
    private _activeTouchID?;
    private _touchList;
    private get _primitiveValue();
    isActive(): boolean;
    getDelta(): any;
    getVelocity(): any;
    getNbOfTouches(): any;
    getTouches(): any;
    getEasingDistance(damping: number): {
        x: number;
        y: number;
    };
    track(evt: TouchEvent | PointerEvent | MouseEvent): {
        [id: number]: Components.Tracker;
    };
    update(evt: TouchEvent | PointerEvent | MouseEvent): {
        [id: number]: Components.Tracker;
    };
    release(evt: TouchEvent | PointerEvent | MouseEvent): void;
    private _getIdentifier;
    private _add;
    private _renew;
    private _delete;
    private _has;
    private _setActiveID;
    private _getActiveTracker;
}
}

namespace Components {
class Scrollable extends Aventus.WebComponent implements Aventus.DefaultComponent {
    static lock(element: Aventus.WebComponent): void;
    static unlock(element: Aventus.WebComponent): void;
    /**
     * Set the zoom to apply for the container
     */
    @Property((target: Scrollable) => {
            target.changeZoom();
        })
	zoom: number;
    @Attribute()
	min_zoom: number;
    @Attribute()
	max_zoom: number;
    @Attribute()
	private y_scroll_visible;
    @Attribute()
	private x_scroll_visible;
    /**
     * Determine if scrollbar will be floating or not
     */
    @Attribute()
	floating_scroll: boolean;
    /**
     * Determine if x scroll is allowed
     */
    @Attribute()
	x_scroll: boolean;
    /**
     * Determine if x scroll is allowed
     */
    @Attribute()
	y_scroll: boolean;
    /**
     * If true, the scrollers will hide if they're not in use
     */
    @Attribute()
	auto_hide: boolean;
    @Attribute()
	break: number;
    /**
     * Disable user action
     */
    @Attribute()
	disable: boolean;
    @Attribute()
	private no_user_select;
    /**
     * Allow scroll by dragging with the mouse
     */
    @Attribute()
	mouse_drag: boolean;
    @Attribute()
	pinch: boolean;
    @ViewElement()
	private contentWrapper;
    @ViewElement()
	private contentZoom;
    @ViewElement()
	private mainContainer;
    @ViewElement()
	private contentHidder;
    @ViewElement()
	private verticalScrollerContainer;
    @ViewElement()
	private verticalScroller;
    @ViewElement()
	private horizontalScrollerContainer;
    @ViewElement()
	private horizontalScroller;
    private observer?;
    private display;
    private max;
    private margin;
    private position;
    private momentum;
    private contentWrapperSize;
    private scroller;
    private scrollerContainer;
    private hideDelay;
    private touchRecord;
    private pointerCount;
    private loadedOnce;
    private savedPercent?;
    private isDragScroller;
    private cachedSvg?;
    private previousMidPoint?;
    private previousDistance?;
    private startTranslate;
    get x(): number;
    get y(): number;
    constructor();
    /**
     * Callback trigger when the scroll change
     */
    onScrollChange: Aventus.Callback<(x: number, y: number) => void>;
    onZoomChange: Aventus.Callback<(zoom: number) => void>;
    private renderAnimation;
    private createAnimation;
    private nextPosition;
    private scrollDirection;
    /**
     * @param percent number between 0 - 100
     */
    private scrollDirectionPercent;
    private correctScrollValue;
    private triggerScrollChange;
    /**
     * Shortcut for functions scrollX and scrollY
     */
    scrollToPosition(x: number, y: number): void;
    /**
     * Scroll left - right
     */
    scrollX(x: number): void;
    /**
    * Scroll left - right
    * @param x percent between 0 - 100
    */
    scrollXPercent(x: number): void;
    /**
     * Scroll bottom - top
     */
    scrollY(y: number): void;
    /**
    * Scroll bottom - top
    * @param y percent between 0 - 100
    */
    scrollYPercent(y: number): void;
    private autoScrollInterval;
    private autoScrollSpeed;
    private startAutoScrollRight;
    /**
     * Define a speed percent to auto scroll right
     */
    autoScrollRight(percent?: number): void;
    /**
     * Stop auto scrolling right
     */
    stopAutoScrollRight(): void;
    private startAutoScrollLeft;
    /**
     * Define a speed percent to auto scroll left
     */
    autoScrollLeft(percent?: number): void;
    /**
     * Stop auto scrolling left
     */
    stopAutoScrollLeft(): void;
    private startAutoScrollTop;
    /**
     * Define a speed percent to auto scroll top
     */
    autoScrollTop(percent?: number): void;
    /**
     * Stop auto scrolling top
     */
    stopAutoScrollTop(): void;
    private startAutoScrollBottom;
    /**
     * Define a speed percent to auto scroll bottom
     */
    autoScrollBottom(percent?: number): void;
    /**
     * Stop auto scrolling bottom
     */
    stopAutoScrollBottom(): void;
    private createMatrix;
    private getMidPoint;
    private getDistance;
    /**
     * Zoom on a specific point
     */
    zoomOnPoint(clientX: number, clientY: number, newZoom: number): void;
    private pinchAction;
    private pressManager;
    private addAction;
    private addActionMove;
    private removeActionMove;
    private addScrollDrag;
    private shouldStopPropagation;
    private addDelta;
    private onWheel;
    private onTouchStartPointer;
    private onTouchStart;
    private onTouchMovePointer;
    private onTouchMove;
    private onTouchEndPointer;
    private onTouchEnd;
    private calculateRealSize;
    private calculatePositionScrollerContainer;
    private calculatePositionScrollerContainerY;
    private calculatePositionScrollerContainerX;
    private calculateSizeScroller;
    private changeZoom;
    /**
     * Inform that the size has changed
     */
    private dimensionRefreshed;
    private createResizeObserver;
    private addResizeObserver;
    protected postCreation(): void;
}
}

namespace Components {
class Tabs<T extends Components.Tab = Components.Tab> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	private first_active;
    @Attribute()
	private last_active;
    @Property()
	header_full_width: boolean;
    protected tabs: {
        [label: string]: T;
    };
    @ViewElement()
	protected headerEl: HTMLDivElement;
    @ViewElement()
	protected bodyEl: HTMLDivElement;
    @ViewElement()
	protected headerScrollEl: Components.Scrollable;
    protected activeHeader?: Components.TabHeader<T>;
    private elements;
    protected loadTabs(): void;
    displayActive(tabHeader: Components.TabHeader<T>): void;
    protected defineTabHeader(): new (...args: any[]) => Components.TabHeader<T>;
    protected validateCorner(): void;
    protected postCreation(): void;
    private __83b521fae0adf34c398cd02a022cfc5fmethod0;
}
}

namespace Permissions.Tree {
@Convertible()
class PermissionTree extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    AppName: string;
    IconTagName: string;
    PermissionId: number;
    Permissions: Permissions.Tree.PermissionTreeItem[];
}
}

namespace Data {
@Convertible()
class PermissionGroup extends AventusSharp.Data.Storable implements Aventus.IData {
    static get Fullname(): string;
    Data: any;
    Permission: Data.Permission;
    GroupId: number;
}
}

namespace Routes {
class PermissionGroupRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    GetAllByGroup(body: {
        groupId: number;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<Data.PermissionGroup[]>>;
    EditPermission(body: {
        created: Data.PermissionGroup[];
        updated: Data.PermissionGroup[];
        deleted: Data.PermissionGroup[];
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<boolean>>;
}
}

namespace Permissions {
@Convertible()
class PermissionForUser extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    permissionGroups: Data.PermissionGroup[];
    permissionUsers: Data.PermissionUser[];
}
}

namespace Routes {
class PermissionRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    Can(body: {
        permissionQuery: Permissions.IPermissionQuery;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<boolean>>;
    GetPermissionsTree(): Promise<AventusSharp.Tools.ResultWithError<Permissions.Tree.PermissionTree[]>>;
    GetPermissionsForUser(idUser: number): Promise<AventusSharp.Tools.ResultWithError<Permissions.PermissionForUser>>;
}
}

namespace Permissions {
class Permission {
    private static saved;
    static can(query: Permissions.IPermissionQuery): Promise<boolean>;
    static clear(): void;
}
}

namespace RAM {
type UserExtended = Data.User & ___Core.RAM.UserMethod;
}

namespace Websocket.Events {
class TransactionCancelledEvent extends AventusSharp.WebSocket.WsEvent<Websocket.Events.TransactionCancelledEvent.Body> {
    /**
     * @inheritdoc
     */
    protected path(): string;
    constructor(endpoint?: AventusSharp.WebSocket.EndPoint, getPrefix?: () => string);
}
}

namespace Websocket.Events.TransactionCancelledEvent {
@Convertible()
class Body extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    guid: string;
}
}

namespace Lib {
class Platform {
    static readonly onScreenChange: Aventus.Callback<(type: Lib.DeviceType) => void>;
    static init(): void;
    static onScreenChangeAndRun(cb: (type: Lib.DeviceType) => void): void;
    static get device(): Lib.DeviceType;
    static get isStandalone(): boolean;
    static get isiOS(): boolean;
    static getRatio(element: HTMLElement): string;
    private static _isConnected;
    static get isConnected(): boolean;
    static readonly onDisconnect: Aventus.Callback<() => void>;
    static readonly onReconnect: Aventus.Callback<() => void>;
}
}

namespace Components {
class Tooltip extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	visible: boolean;
    @Attribute()
	position: 'top' | 'left' | 'bottom' | 'right';
    @Attribute()
	color?: ColorsType;
    @Attribute()
	use_absolute: boolean;
    @Attribute()
	delay: number;
    @Attribute()
	delay_touch: number;
    protected parent: Node | null;
    protected parentEv: HTMLElement | null;
    private isDestroyed;
    protected timeoutEnter: boolean;
    protected timeout: number;
    protected pressManager?: Aventus.PressManager;
    protected calculatePosition(): void;
}
declare let center: {
    x: any;
    y: any;
};
}

namespace Errors {
@Convertible()
class CoreError extends Aventus.GenericError<typeof Errors.CoreErrorCode> {
    static get Fullname(): string;
}
}

namespace Lib {
class TransactionManager {
    private static mainRouter;
    private static mutex;
    private static cancelEvent;
    private static guid?;
    static readonly onTransactionBegin: Aventus.Callback<() => Aventus.Asyncable<any>, Aventus.Asyncable<any>>;
    static readonly onTransactionEnd: Aventus.Callback<(success: boolean) => Aventus.Asyncable<any>, Aventus.Asyncable<any>>;
    static init(): void;
    static begin(ms?: number): Promise<AventusSharp.Tools.ResultWithError<string>>;
    static isActive(guid: string): boolean;
    static commit(guid: string): Promise<AventusSharp.Tools.VoidWithError>;
    static rollback(guid: string): Promise<AventusSharp.Tools.VoidWithError>;
}
}

namespace RAM {
class RamWithTransaction<T extends AventusSharp.Data.Storable> {
    protected readonly memoryUpdateDelete: Map<number, T>;
    protected readonly memoryCreate: Map<number, Aventus.RamItem<T>>;
    protected memoryId: number[];
    protected isTransactionActive: boolean;
    protected ram: ___Core.RAM.RamWithTransactionInjector<T>;
    constructor(ram: ___Core.RAM.RamWithTransactionInjector<T>);
    protected onTransactionBegin(): void;
    protected onTransactionEnd(success: boolean): Promise<void>;
    protected beforeRecordSet(item: Aventus.RamItem<T>): Promise<void>;
    protected beforeRecordDelete(item: Aventus.RamItem<T>): Promise<void>;
}
}

namespace RAM {
abstract class RamWebSocket<T extends AventusSharp.Data.Storable> extends AventusSharp.RAM.RamWebSocket<T> {
    constructor();
}
}

namespace RAM {
abstract class RamHttp<T extends AventusSharp.Data.Storable> extends AventusSharp.RAM.RamHttp<T> {
    constructor();
}
}

namespace RAM {
class UserRAM extends RAM.RamHttp<RAM.UserExtended> implements Aventus.IRam {
    private connectedUserId?;
    /**
     * Create a singleton to store data
     */
    static getInstance(): RAM.UserRAM;
    /**
     * @inheritdoc
     */
    defineIndexKey(): keyof RAM.UserExtended;
    /**
     * @inheritdoc
     */
    protected getTypeForData(objJson: Aventus.KeysObject<RAM.UserExtended> | RAM.UserExtended): new () => RAM.UserExtended;
    /**
     * @inheritdoc
     */
    defineRoutes(): any;
    getConnected(): Promise<Aventus.ResultWithError<Aventus.RamItem<RAM.UserExtended>>>;
    /**
     * Mixin pattern to add methods
     */
    private addUserMethod;
}
}

namespace Lib {
class SessionManager {
    static logout(): any;
    static getUserId(): number;
    static getUser(): Promise<Aventus.RamItem<RAM.UserExtended> | undefined>;
}
}

namespace System {
class HomePanel extends System.Panel implements Aventus.DefaultComponent {
    @ViewElement()
	protected recentContainer: Components.Scrollable;
    @ViewElement()
	protected favorisContainer: HTMLDivElement;
    @Watch()
	currentUser?: Data.User;
    btn: System.HomeBtn;
    /**
     *
     */
    protected openProfil(): void;
    /**
     *
     */
    protected logout(): any;
    private displayRecent;
    private displayFavoris;
    private getUser;
    protected postCreation(): void;
    private __71121dd8c2837747a91ecf75da806c7amethod0;
    private __71121dd8c2837747a91ecf75da806c7amethod1;
    private __71121dd8c2837747a91ecf75da806c7amethod2;
}
}

namespace System {
class HomeBtn extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	active: boolean;
    @ViewElement()
	protected homePanel: System.HomePanel;
    /**
     *
     */
    protected toggleActive(): void;
    protected postCreation(): void;
}
}

namespace Websocket.Routes {
class DesktopRouter_RegisterOpenApp extends AventusSharp.WebSocket.WsEvent<Data.ApplicationOpenInfo> {
    /**
     * @inheritdoc
     */
    protected path(): string;
    /**
     * @inheritdoc
     */
    protected listenOnBoot(): boolean;
}
}

namespace Websocket.Routes {
class DesktopRouter extends AventusSharp.WebSocket.Route {
    events: {
        RegisterOpenApp: Websocket.Routes.DesktopRouter_RegisterOpenApp;
        RemoveApp: Websocket.Routes.DesktopRouter_RemoveApp;
        SetDesktopIcon: Websocket.Routes.DesktopRouter_SetDesktopIcon;
        RemoveDesktopIcon: Websocket.Routes.DesktopRouter_RemoveDesktopIcon;
    };
    constructor(endpoint?: AventusSharp.WebSocket.EndPoint);
    RegisterOpenApp(body: {
        appInfo: Data.ApplicationOpenInfo;
    } | FormData, options?: AventusSharp.WebSocket.WsRouteSendOptions): Promise<AventusSharp.ExtractResponse<Websocket.Routes.DesktopRouter_RegisterOpenApp>>;
    RemoveApp(body: {
        appInfo: Data.ApplicationOpenInfo;
    } | FormData, options?: AventusSharp.WebSocket.WsRouteSendOptions): Promise<AventusSharp.ExtractResponse<Websocket.Routes.DesktopRouter_RemoveApp>>;
    SetDesktopIcon(body: {
        icon: Data.DesktopAppIcon;
    } | FormData, options?: AventusSharp.WebSocket.WsRouteSendOptions): Promise<AventusSharp.ExtractResponse<Websocket.Routes.DesktopRouter_SetDesktopIcon>>;
    RemoveDesktopIcon(body: {
        icon: Data.DesktopAppIcon;
    } | FormData, options?: AventusSharp.WebSocket.WsRouteSendOptions): Promise<AventusSharp.ExtractResponse<Websocket.Routes.DesktopRouter_RemoveDesktopIcon>>;
}
}

namespace System {
class BottomBar extends Aventus.WebComponent implements Aventus.DefaultComponent, State.MoveApplicationProvider, System.IDesktopActivable {
    @ViewElement()
	applicationsContainer: HTMLDivElement;
    @ViewElement()
	protected safeHider: HTMLDivElement;
    get desktop(): System.Desktop;
    is_desktop_active: boolean;
    @Watch()
	permissions: {
        CanHaveVirtualDesktop: boolean;
    };
    protected getPermissions(): any;
    protected addSwipe(): void;
    /**
     *
     */
    protected showAppList(): void;
    /**
     *
     */
    protected showDesktops(): void;
    private addFocus;
    private timeoutOverHome;
    private emptyIcon?;
    setAppPositionTemp(shadow: System.AppIcon, x: number, y: number, state: State.MoveApplication): boolean;
    clearAppPositionTemp(state: State.MoveApplication): void;
    setAppPosition(icon: System.AppIcon, x: number, y: number): Promise<void>;
    removeAppPosition(icon: System.AppIcon, x: number, y: number): any;
    protected onMoveApplication(state: Aventus.State, slugs: Aventus.StateSlug): void;
    protected onStopMovingApplication(state: Aventus.State, nextState: Aventus.State, slugs: Aventus.StateSlug): void;
    setApplication(el: System.AppIcon): void;
    setDesktopActive(): void;
    removeDesktopActive(): void;
    protected postCreation(): void;
    private __caf7651d66630d65b331758f2e732cb4method0;
}
}

namespace Components {
class Resize extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	min_width: number;
    @Attribute()
	min_height: number;
    @Attribute()
	max_width: number;
    @Attribute()
	max_height: number;
    @ViewElement()
	protected top: HTMLDivElement;
    @ViewElement()
	protected top_left: HTMLDivElement;
    @ViewElement()
	protected left: HTMLDivElement;
    @ViewElement()
	protected bottom_left: HTMLDivElement;
    @ViewElement()
	protected bottom: HTMLDivElement;
    @ViewElement()
	protected bottom_right: HTMLDivElement;
    @ViewElement()
	protected right: HTMLDivElement;
    @ViewElement()
	protected top_right: HTMLDivElement;
    private _target?;
    private get target();
    protected styleBefore(addStyle: (name: string) => void): void;
    readonly onPointerDown: Aventus.Callback<(direction: Components.ResizeDirection) => void>;
    readonly onStart: Aventus.Callback<(direction: Components.ResizeDirection) => void>;
    readonly onMove: Aventus.Callback<(direction: Components.ResizeDirection) => void>;
    readonly onStop: Aventus.Callback<(direction: Components.ResizeDirection) => void>;
    readonly onPointerUp: Aventus.Callback<(direction: Components.ResizeDirection) => void>;
    protected applyWidth(value: number): void;
    protected applyHeight(value: number): void;
    protected applyTop(value: number): void;
    protected applyLeft(value: number): void;
    private transformWidth;
    private transformHeight;
    private resizeRight;
    private resizeLeft;
    private resizeBottom;
    private resizeBottomLeft;
    private resizeBottomRight;
    private resizeTop;
    private resizeTopLeft;
    private resizeTopRight;
    init(target: HTMLElement, config?: Components.ResizeConfig): void;
}
}

namespace Components {
type NotificationOptions = {
    position?: Components.NotificationPosition;
    color?: ColorsType;
    title?: string;
    body?: string;
    delay?: number;
    icon?: string;
};
}

namespace Components {
class Notification extends Aventus.WebComponent implements Aventus.DefaultComponent {
    static create(options: Components.NotificationOptions): Components.Notification;
    @Attribute()
	position: Components.NotificationPosition;
    @Property()
	icon?: string;
    @Property()
	subject: string;
    @Attribute()
	color?: ColorsType;
    /**
     * Use minus -1 to have an infinite timer
     */
    @Attribute()
	delay: number;
    @Attribute()
	private is_active;
    showAsked: boolean;
    private onHide;
    timeout: number;
    show(onHide: (result: boolean) => void): void;
    protected startDelay(): void;
    /**
     * When the user click on the notif, run the callback if exist and close
     */
    protected clicked(): any;
    /**
     * When the user click on the cross, close the notification
     */
    protected close(): any;
    protected postCreation(): void;
    private __539853f1187f37c9fe641c673a21b24cmethod0;
    private __539853f1187f37c9fe641c673a21b24cmethod1;
}
}

namespace System {
class AppInstallPanel extends System.Panel implements Aventus.DefaultComponent {
    @ViewElement()
	protected inputFileEl: HTMLInputElement;
    onClose: Aventus.Callback<() => void>;
    /**
     *
     */
    protected updateFile(): any;
    /**
     *
     */
    protected close(): void;
    /**
     *
     */
    protected clickFile(): void;
}
}

namespace Components {
class NotificationManager extends Aventus.WebComponent implements Aventus.DefaultComponent {
    private activeNotifications;
    private waitingNotifications;
    get containerHeight(): number;
    @Attribute()
	gap: number;
    notify(notification: Components.Notification | Components.NotificationOptions): Promise<boolean>;
    private _notifyBottomRight;
    private _notifyTopRight;
    private _notifyBottomLeft;
    private _notifyTopLeft;
    private _notifyTop;
    private _notifyBottom;
}
}

namespace State {
@Convertible()
abstract class ApplicationState extends Aventus.State implements Aventus.IState {
    /**
     * The current namespace
     */
    static readonly Namespace: string;
    /**
     * Get the unique type for the data. Define it as the namespace + class name
     */
    static get Fullname(): string;
    readonly $type: string;
    private __manager;
    protected get application(): System.Application;
    private __canSaveState;
    enableSaveState(): void;
    disableSaveState(): void;
    private canSync;
    constructor();
    setManager(manager: Lib.ApplicationStateManager): void;
    private delaySaveState;
    saveState(): void;
    activate(): Promise<boolean>;
    /**
     * Override this tell which field must by sync
     */
    protected syncField(addField: (field: State.Field<this>) => void): void;
    /**
     * Override this tell which field must by sync
     */
    protected syncFieldNoCheck(addField: (field: string) => void): void;
    private runSyncField;
    toJSON(): any;
    copyValues<T extends State.ApplicationState>(src: T): void;
}
}

namespace State {
abstract class ApplicationWatchState extends State.ApplicationState implements Aventus.IState {
    private __watcher;
    get watcher(): any;
    constructor();
    protected onWatcherChanged(action: Aventus.WatchAction, path: string, value: any): any;
}
}

namespace System {
class ApplicationHistoryConvert extends Aventus.ConverterTransform {
    private manager;
    constructor(manager: Lib.ApplicationStateManager);
    protected beforeTransformObject(obj: Object): void;
    protected afterTransformObject(obj: Object): void;
}
}

namespace System {
abstract class FrameNoScroll extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	private visible;
    @Signal()
	protected state: Aventus.State;
    application: System.Application;
    @Internal()
	private resetNavElement;
    constructor();
    protected addFadeIn(): void;
    abstract pageTitle(): string | undefined;
    private testPermissions;
    /**
     * Define the permissions needed to access the frame
     * If one permission is denied, the user can't access the frame.
     */
    definePermissions(can: (permission: Permissions.IPermissionQuery) => void): void;
    /**
     * Add custom check
     * Return true if evrything is ok
     * False will prevent showing
     * string or state will redirect to the page
     */
    can(state: Aventus.State): Aventus.Asyncable<boolean | State.ApplicationState | string>;
    show(state: Aventus.State): Promise<void>;
    hide(): Promise<void>;
    abstract onShow(): any;
    abstract onHide(): any;
    /**
     * Define if the current state can be changed
     * usefull to prevent change when editing data
     */
    askChange(newState: Aventus.State): Promise<boolean>;
    /**
     * Execute a query and get the result
     * The errors will be handled by the application
     */
    execute<X>(prom: Promise<System.ApplicationQueryFctResult<X>>): Promise<X | undefined>;
    /**
     * Execute a query and get the result
     * The errors will be handled by the application
     * Show a loader if the request take more than 200ms
     */
    executeWithLoading<X>(prom: Promise<System.ApplicationQueryFctResult<X>>): Promise<X | undefined>;
}
}

namespace System {
abstract class FrameStateNoScroll<T extends Aventus.State> extends System.FrameNoScroll implements Aventus.DefaultComponent {
    protected state: T;
    protected abstract getState(): new (...args: any[]) => T;
    protected abstract onStateMissmatch(): Aventus.Asyncable<string | boolean | State.ApplicationState>;
    can(state: Aventus.State): Aventus.Asyncable<string | boolean | State.ApplicationState>;
}
}

namespace System {
abstract class Frame extends System.FrameNoScroll implements Aventus.DefaultComponent {
    @ViewElement()
	readonly mainScroll: Components.Scrollable;
}
}

namespace System {
abstract class FrameState<T extends Aventus.State> extends System.Frame implements Aventus.DefaultComponent {
    protected state: T;
    protected abstract getState(): new (...args: any[]) => T;
    protected abstract onStateMissmatch(): Aventus.Asyncable<string | boolean | State.ApplicationState>;
    can(state: Aventus.State): Aventus.Asyncable<string | boolean | State.ApplicationState>;
}
}

namespace System {
class FrameNotAllowed extends System.Frame implements Aventus.DefaultComponent {
    /**
     * @inheritdoc
     */
    pageTitle(): string | undefined;
    /**
     * @inheritdoc
     */
    definePermissions(test: (permission: Permissions.IPermissionQuery) => void): void;
    /**
     * @inheritdoc
     */
    onShow(): void;
    /**
     * @inheritdoc
     */
    onHide(): void;
}
}

namespace System {
type ApplicationRoute = {
    route: string;
    scriptUrl: string;
    render: () => new () => System.FrameNoScroll;
};
}

namespace System {
@Convertible()
class ApplicationHistory {
    static Fullname: string;
    $type: string;
    private memory;
    private currentPosition;
    push(history: System.History): void;
    replace(history: System.History): void;
    replaceAt(history: System.History, index: number): void;
    clear(): void;
    next(): System.History | null;
    cancelNext(): void;
    current(): System.History | undefined;
    get nextAvailable(): boolean;
    previous(destroy?: boolean): System.History | null;
    cancelPrevious(): void;
    get previousAvailable(): boolean;
    toText(): any;
    static fromText(manager: Lib.ApplicationStateManager, txt?: string): System.ApplicationHistory;
}
}

namespace Lib {
class ApplicationManager {
    private static waitingDelay;
    private static waitings;
    private static processing;
    private static mutex;
    private static openApplications;
    private static openApplicationsKey;
    private static get storage();
    static save(appInfo: Data.ApplicationOpenInfo): any;
    static remove(appInfo: Data.ApplicationOpenInfo): any;
    static getOpenApps(desktopId: number): Data.ApplicationOpen[];
    private static uniqueAction;
    static reloadData(): void;
    static init(): void;
    private static onRegisterInfo;
    private static onRemoveApp;
    private static getKey;
}
}

namespace System {
class ApplicationSize {
    private application;
    private storage;
    constructor(application: System.Application);
    load(): System.ApplicationPositionSize;
    save(): void;
    remove(): void;
    private getPrefered;
    static getBasicSize(): System.ApplicationPositionSize;
}
}

namespace System {
class Frame404 extends System.Frame implements Aventus.DefaultComponent {
    /**
     * @inheritdoc
     */
    pageTitle(): string;
    /**
     * @inheritdoc
     */
    definePermissions(can: (permission: Permissions.IPermissionQuery) => void): void;
    /**
     * @inheritdoc
     */
    onShow(): void;
    /**
     * @inheritdoc
     */
    onHide(): void;
}
}

namespace Components {
abstract class GenericPopup<T, U extends Components.PopupInfo = Components.PopupInfo> extends Aventus.WebComponent implements Aventus.DefaultComponent, Components.IContextMenu {
    @Attribute()
	no_red_btn: boolean;
    @Attribute()
	behind: boolean;
    @Attribute()
	close_on_click: boolean;
    protected cb?: (response: T) => void;
    @Watch((target: GenericPopup<T, U>, action: Aventus.WatchAction, path: string, value: any) => {
            target.onOptionsChanged();
        })
	protected info: U;
    @ViewElement()
	protected popupEl: HTMLDivElement;
    @ViewElement()
	protected contentEl: HTMLDivElement;
    protected pressManagerClose?: Aventus.PressManager;
    protected pressManagerPopup?: Aventus.PressManager;
    @InternalProtected()
	protected application?: System.Application;
    constructor();
    /**
     * @inheritdoc
     */
    onContextMenu(contextMenu: Components.ContextMenu, stop: () => void): void;
    mergeInfo(info: Partial<U>): void;
    /**
     * Define the callback
     */
    init(cb: (response: T) => void): void;
    protected onOptionsChanged(): void;
    abstract defaultOptions(): U;
    protected close(): void;
    protected addCloseWatcher(): void;
    protected resolve(response: T, no_close?: boolean): void;
    /**
     * This method will be triggered when the user press on the red button
     *
     * You can use this method to `resolve()` something
     *
     * ```typescript
     * protected override redPress(): void {
     *   this.resolve(null);
     * }
     * ```
     */
    protected abstract cancel(): void;
    protected addPress(): void;
    protected postDestruction(): void;
    protected postCreation(): void;
    private __cc26f54f9c039edaaa84e25490791589method0;
}
}

namespace Components {
@OverrideView()
abstract class Popup<T, U extends Components.PopupInfo = Components.PopupInfo> extends Components.GenericPopup<T, U> implements Aventus.DefaultComponent {
    private __c6b222033048639bf6ac58d471520fbamethod0;
}
}

namespace Components {
class Confirm extends Components.GenericPopup<boolean, Components.ConfirmInfo> implements Aventus.DefaultComponent {
    /**
     * @inheritdoc
     */
    defaultOptions(): Components.ConfirmInfo;
    /**
     *
     */
    protected validate(): void;
    protected cancel(): void;
    private __caa2fd56843944180566fbe49a4bb311method0;
    private __caa2fd56843944180566fbe49a4bb311method1;
    private __caa2fd56843944180566fbe49a4bb311method2;
}
}

namespace Components {
class Alert extends Components.GenericPopup<void, Components.AlertInfo> implements Aventus.DefaultComponent {
    /**
     * @inheritdoc
     */
    defaultOptions(): Components.AlertInfo;
    /**
     *
     */
    protected validate(): void;
    protected cancel(): void;
    private __d0561a7aa91ff42b328166316d099970method0;
    private __d0561a7aa91ff42b328166316d099970method1;
}
}

namespace System {
type ExtractTypePopup<X extends Components.GenericPopup<U, Y>, U = any, Y extends Components.PopupInfo = any> = X extends Components.GenericPopup<infer U, Y> ? U : never;
}

namespace System {
abstract class Application extends Aventus.WebComponent implements Aventus.DefaultComponent, System.IDesktopActivable {
    @Property()
	app_title: string;
    @Attribute()
	moving: boolean;
    /**
     * Determine if the app is in fullscreen when screen is >= tablette
     */
    @Property((target: Application) => {
            target.saveSize();
        })
	full: boolean;
    @Property((target: Application) => {
            target.onIsHiddenChange();
        })
	is_hidden: boolean;
    @Attribute()
	loading: boolean;
    @ViewElement()
	protected header: Components.ContextMenuElement;
    @ViewElement()
	protected resizeEl: Components.Resize;
    @ViewElement()
	protected contentEl: Components.ContextMenuElement;
    @ViewElement()
	protected navigatePreviousEl: HTMLDivElement;
    @ViewElement()
	protected navigateNextEl: HTMLDivElement;
    @ViewElement()
	protected notificationManager: Components.NotificationManager;
    @Watch((target: Application) => {
            target.shortcutManager.manageShortcut();
        })
	is_desktop_active: boolean;
    private oldFrame;
    protected allRoutes: {
        [key: string]: System.ApplicationRoute;
    };
    private activePath;
    protected activeState?: Aventus.State;
    private showPageMutex;
    private router?;
    @Internal()
	private options?;
    private history;
    @Internal()
	private mustRemoveApplicationHistory;
    private oneStateActive;
    protected page404?: System.FrameNoScroll;
    protected page405?: System.FrameNoScroll;
    protected sizeManager: System.ApplicationSize;
    protected isAnimating: boolean;
    private afterTransitionCb;
    protected shortcutManager: System.ApplicationShortcut;
    version: number;
    constructor();
    /**
     * Use this function to add anything you want to display when user trigger the context menu on the content
     */
    onContextMenuContent(contextMenu: Components.ContextMenu, stop: () => void): void;
    /**
     * Use this function to add anything you want to display when user trigger the context menu on the header
     */
    onContextMenuHeader(contextMenu: Components.ContextMenu, stop: () => void): void;
    protected bindContextMenu(): void;
    /**
     * Add all your routes inside this function (addRoute or addRouteAsync)
     */
    protected abstract defineRoutes(): Promise<void>;
    /**
     * Gets the navigator instance for managing application states.
     */
    get navigator(): Lib.ApplicationStateManager;
    /**
     * Allow you to navigate between frames
     */
    navigate(to: string | Aventus.State): Promise<boolean>;
    replaceState(to: string | Aventus.State): Promise<boolean>;
    /**
     * Adds a route asynchronously.
     */
    protected addRouteAsync<T extends System.FrameNoScroll>(options: System.ApplicationRoute): void;
    /**
     * Adds a route.
     */
    protected addRoute(route: string, frame: new () => System.FrameNoScroll): void;
    /**
     * Registers the application routes and initializes them.
     */
    private register;
    /**
     *  Defines the keyboard shortcuts for the application.
    */
    protected defineShortcut(): [(string | Lib.SpecialTouch)[], cb: () => void][];
    /**
     * Determine if the frame should be destroyed when hiding
     * If not destroy you must be carefull with state refresh. This can be tricky
     */
    protected shouldDestroyFrame(frame: System.FrameNoScroll): boolean;
    /**
     * Initializes the route for a given path.
     */
    private initRoute;
    /**
     * Validates and handles 404 errors.
     */
    protected validError404(): any;
    /**
     * Returns the frame class for 404 errors.
     */
    protected error404(state?: Aventus.State): (new () => System.FrameNoScroll);
    /**
     * Shows an error when access is not allowed.
     */
    protected showErrorNotAllowed(): any;
    /**
     * Returns the frame class for "not allowed" errors.
     */
    protected errorNotAllowed(state?: Aventus.State): (new () => System.FrameNoScroll);
    /**
     * Handles the transition to a new page.
     */
    protected onNewPage(oldUrl: string, oldFrame: System.FrameNoScroll | undefined, newUrl: string, newFrame: System.FrameNoScroll): void;
    /**
     * Gets the slugs of the current state.
     */
    getSlugs(): any;
    /**
     * Determines if the application can change to a new state.
     */
    protected canChangeState(newState: Aventus.State): Promise<boolean>;
    /**
     * Checks and updates the navigation state (previous/next availability).
     */
    protected checkNavigationState(): void;
    /**
     * Navigates to the previous state in the history.
     */
    navigatePrevious(destroy?: boolean): any;
    /**
     * Navigates to the next state in the history.
     */
    navigateNext(): any;
    /**
     * Subscribes to navigation state changes.
     */
    subscribeNavigationChange(statePatterns: string | string[], callbacks: Aventus.StateAction): void;
    /**
     * Unsubscribes from navigation state changes.
     */
    unsubscribeNavigationChange(statePatterns: string | string[], callbacks: Aventus.StateAction): void;
    /**
     * Sets the application history.
     */
    setHistory(history: System.ApplicationHistory): any;
    /**
     * Saves the application history.
     */
    saveApplicationHistory(): any;
    /**
     * Removes the application history
     */
    protected removeApplicationHistory(): any;
    /**
     * Handles the start of a resize operation.
     */
    private onResizeStart;
    /**
     * Handles the end of a resize operation.
     */
    private onResizeStop;
    /**
     * Trigger when the property is_hidden changed
     */
    protected onIsHiddenChange(): void;
    /**
     * Save the size for the current application inside local storage
     * It will wait the end of the transition
     */
    saveSize(): void;
    /**
     * Reset the size to the basic information
     */
    resetSize(): void;
    /**
     * Check if the application size is wide enough
     */
    private checkIfSizeCorrect;
    /**
     * Define the size wanted for the current
     */
    private setSizeInfo;
    /**
     * Moves the application to the specified position and size.
     */
    moveApplication(options: {
        left?: number;
        top?: number;
        width?: number;
        height?: number;
    }): void;
    /**
     * ;oves the application to the left side of the screen.
     */
    moveApplicationToLeft(): void;
    /**
     * Moves the application to the right side of the screen.
     */
    moveApplicationToRight(): void;
    /**
     * Add the drag and drop action to move the application with the navbar
     */
    protected addMoveDragAndDrop(): void;
    /**
     * Add the bind to the resize function
     */
    protected addResize(): void;
    /**
     * Executes a callback after a transition ends
     */
    afterTransition(cb: () => void): void;
    /**
     * Watches for transition events and handles them
     */
    protected watchTransition(): void;
    /**
     * Toggles the fullscreen mode of the application.
     */
    toggleFull(): void;
    /**
     * Hides the application.
     */
    hide(): void;
    /**
     * Shows the application.
     */
    show(): void;
    /**
     * Kills the application (removes it from the DOM).
     */
    kill(): void;
    /**
     * Opens a popup and returns a promise that resolves with the popup's result.
     */
    popup<T extends Components.GenericPopup<U, X>, U = System.ExtractTypePopup<T>, X extends Components.PopupInfo = Components.PopupInfo>(p: T): Promise<U>;
    /**
     * Shows an alert popup with the provided information.
     */
    alert(info: Partial<Components.AlertInfo>): Promise<void>;
    /**
     * Shows a confirm popup with the provided information.
     */
    confirm(info: Partial<Components.ConfirmInfo>): Promise<boolean>;
    notify(notification: Components.Notification): Promise<boolean>;
    notify(notification: Components.NotificationOptions): Promise<boolean>;
    /**
     * Display GenericError as a popup
     */
    popupErrors(errors: Aventus.GenericError[]): any;
    /**
     *  Parses errors from the application query result.
     */
    parseErrors<X>(result: System.ApplicationQueryFctResult<X>): Promise<X | undefined>;
    /**
     * Executes a promise and parses its result.
     */
    execute<X>(prom: Promise<System.ApplicationQueryFctResult<X>>): Promise<X | undefined>;
    /**
     * Executes a promise with a loading indicator and parses its result.
     */
    executeWithLoading<X>(prom: Promise<System.ApplicationQueryFctResult<X>>): Promise<X | undefined>;
    /**
     * Shows a loading indicator while executing a function or promise.
     */
    showLoading<X>(fct: (() => Promise<X>) | Promise<X>): Promise<X | null>;
    /**
     * Start a transaction and run the code inside it. If any error occur, the transaction id rollback
     */
    txExec<X>(fct: ((exec: <T, A extends any[]>(fct: (...args: A) => Promise<System.ApplicationQueryFctResult<T>>, ...args: A) => Promise<T | undefined>) => Promise<X>), ms?: number): Promise<X | undefined>;
    /**
     * Start a transaction and run the code inside it. If any error occur, the transaction id rollback
     */
    txExecLoading<X>(fct: ((exec: <T, A extends any[]>(fct: (...args: A) => Promise<System.ApplicationQueryFctResult<T>>, ...args: A) => Promise<T | undefined>) => Promise<X>)): Promise<X | undefined>;
    /**
     * Adds focus to the application.
     */
    private addFocus;
    /**
     * Sets the application as the active desktop application.
     */
    setDesktopActive(): void;
    /**
     * Removes the application from the active desktop application.
     */
    removeDesktopActive(): void;
    /**
     *  Initializes the application with the given options.
     */
    init(options: System.ApplicationInitOptions): void;
    /**
     * @inheritdoc
     */
    protected postCreation(): void;
    /**
     * @inheritdoc
     */
    protected postDestruction(): void;
    private __b8adb9845de45194ca3aae9322a8888cmethod0;
}
}

namespace Components {
class Link extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: Link) => {
            target.changeActiveSub();
        })
	to?: string;
    @Property((target: Link) => {
            target.changeActiveSub();
        })
	active_pattern?: string;
    @Property((target: Link) => {
            target.onActiveChange();
        })
	active: boolean;
    protected pressManager?: Aventus.PressManager;
    protected oldTo?: string;
    protected retriggerIfActive: boolean;
    protected changeActiveSub(): void;
    protected setActive(): void;
    protected setInactive(): void;
    protected onActiveChange(): void;
    protected allowTrigger(element: Components.Link): boolean;
    protected setOnPress(): void;
    protected postDestruction(): void;
    protected postCreation(): void;
}
}

namespace Permissions {
@Convertible()
class ApplicationPermissionQuery extends Permissions.PermissionQuery<typeof Permissions.ApplicationPermission> {
    static get Fullname(): string;
}
}

namespace Lib {
class AppIconManager {
    private static loaded;
    private static dico;
    private static tags;
    private static waiting;
    static register(appIcon: System.AppIcon, componentUrl?: string): any;
    static getIcon(tagName: string): ___Core.Lib.AppIconCst | undefined;
    static getTagName(application: string, componentUrl: string, delay?: number): Promise<string>;
}
}

namespace RAM {
class DesktopRAM extends RAM.RamHttp<Data.Desktop> implements Aventus.IRam {
    /**
     * @inheritdoc
     */
    defineRoutes(): AventusSharp.Routes.StorableRoute<Data.Desktop>;
    /**
     * Create a singleton to store data
     */
    static getInstance(): RAM.DesktopRAM;
    /**
     * @inheritdoc
     */
    defineIndexKey(): keyof Data.Desktop;
    /**
     * @inheritdoc
     */
    protected getTypeForData(objJson: Aventus.KeysObject<Data.Desktop> | Data.Desktop): new () => Data.Desktop;
    protected beforeUpdateItem(item: Data.Desktop, fromList: boolean, result: Aventus.ResultRamWithError<Aventus.RamItem<Data.Desktop>>): Promise<void>;
}
}

namespace System {
class Desktop extends Aventus.WebComponent implements Aventus.DefaultComponent, Components.IContextMenu, State.MoveApplicationProvider {
    @Property()
	desktop_id: number;
    @Attribute()
	show_application_list: boolean;
    /**
     * Determine if the desktop is the one visible on screen
     */
    @Attribute()
	is_active: boolean;
    @Attribute()
	background_size: string;
    @ViewElement()
	protected bottomBar: System.BottomBar;
    @ViewElement()
	protected pageCaseEl: Components.PageCase;
    @ViewElement()
	protected appContainer: HTMLDivElement;
    @ViewElement()
	protected debugEl: HTMLDivElement;
    @ViewElement()
	protected previewAutoLayout: HTMLDivElement;
    applications: {
        [name: string]: {
            [id: number]: System.Application;
        };
    };
    data: Aventus.RamItem<Data.DesktopData>;
    private _iconSize;
    get iconSize(): number;
    protected activableOrder: System.IDesktopActivable[];
    get activeElement(): System.IDesktopActivable | undefined;
    constructor();
    /**
     * @inheritdoc
     */
    onContextMenu(contextMenu: Components.ContextMenu, stop: () => void): void;
    loadApp(application: string): any;
    openUrl(application: string, componentUrl?: string, url?: string | Aventus.State): any;
    unHideApplication(application: string, componentUrl?: string): any;
    private recreateApplications;
    recreateApplication(application: Data.ApplicationOpen): any;
    removeApp(application: System.Application): void;
    private manageAppBottomBar;
    private showPreviewPositionTimeout?;
    private waitPreviewPosition?;
    showPreviewPosition(location: ("left" | 'right' | 'bottom' | 'top')[]): void;
    private watchPreviewTransitionResolve?;
    watchPreviewTransition(): void;
    getPreviewPosition(): unknown;
    private oldActiveCase?;
    private pressManagerStopMoveApp?;
    protected calculateIconSize(): void;
    setIconSize(size: number): void;
    setAppPositionTemp(shadow: System.AppIcon, x: number, y: number): boolean;
    clearAppPositionTemp(): void;
    setAppPosition(icon: System.AppIcon, x: number, y: number): any;
    removeAppPosition(icon: System.AppIcon, x: number, y: number): any;
    protected onMoveApplication(state: Aventus.State, slugs: Aventus.StateSlug): void;
    protected onStopMovingApplication(state: Aventus.State, nextState: Aventus.State, slugs: Aventus.StateSlug): void;
    protected watchDevice(): void;
    private applyDataChange;
    private loadData;
    setElementToActive(el: System.IDesktopActivable): void;
    removeElementFromActive(el: System.IDesktopActivable): void;
    protected applyActiveToElement(): void;
    protected addDebug(): void;
    protected postCreation(): void;
}
}

namespace Lib {
class PWA {
    static get isAvailable(): boolean;
    static get isAvailableIOS(): boolean;
    private static e?;
    private static isInit;
    private static startInstall;
    protected static onInit: Aventus.Callback<() => Promise<void>>;
    static onDownloading: Aventus.Callback<() => Promise<void>>;
    static onDownloaded: Aventus.Callback<() => Promise<void>>;
    static init(): any;
    static addOnInit(cb: () => Promise<void>): void;
    static download(): any;
}
}

namespace System {
class PwaButton extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	visible: boolean;
    @Attribute()
	downloading: boolean;
    init(): any;
    protected postCreation(): void;
}
}

namespace System {
class Os extends Aventus.WebComponent implements Aventus.DefaultComponent {
    static instance: System.Os;
    static get version(): number;
    @Attribute()
	loading: boolean;
    @Property((target: Os) => {
            target.onShowDesktopList();
        })
	desktop_list: boolean;
    @Property((target: Os) => {
            if(target.appList)
                target.appList.show = target.show_application_list;
            for(let desktop of target.desktopsEl) {
                desktop.show_application_list = target.show_application_list;
            }
        })
	show_application_list: boolean;
    @Attribute()
	ready: boolean;
    @Attribute()
	no_connection: boolean;
    @Property((target: Os) => {
            target.onActiveDesktop();
        })
	active_desktop: number;
    @Watch()
	desktops: Data.DesktopData[];
    @ViewElement()
	appList: System.AppList;
    @ViewElement()
	readonly desktopsEl: System.Desktop[];
    @ViewElement()
	protected desktopContainerScroll: Components.Scrollable;
    @ViewElement()
	private notificationManager;
    protected activeDesktopEl: System.Desktop;
    get activeDesktop(): System.Desktop;
    private contextMenuCst;
    constructor();
    private onActiveDesktop;
    private desktopMoveLeft;
    private desktopMoveRight;
    private desktopMoveValidate;
    private onShowDesktopList;
    private addSwitchDesktop;
    /**
     *
     */
    protected deleteDesktop(e: Event, instance: Aventus.PressManager): any;
    protected syncDesktopData(): any;
    private systemLoading;
    openUrl(application: string, componentUrl?: string, url?: string | Aventus.State): any;
    unHideApplication(application: string, componentUrl?: string): any;
    notify(notification: Components.Notification): any;
    private rightClick;
    private preventScroll;
    setContextMenu(contextMenuCst: new (...args: {}) => Components.ContextMenu): void;
    setDefaultContextMenu(): void;
    popup<T extends Components.GenericPopup<U, X>, U = any, X extends Components.PopupInfo = Components.PopupInfo>(p: T): Promise<U>;
    alert(info: Partial<Components.AlertInfo>): any;
    confirm(info: Partial<Components.ConfirmInfo>): unknown;
    private _appInstallPanel?;
    protected allowInstallApp(): void;
    /**
     *
     */
    protected selectDesktop(e: Event, pressInstance: Aventus.PressManager): void;
    protected addResizeObserver(): void;
    private manageOffline;
    private startSocket;
    private trapInOs;
    private init;
    protected postCreation(): void;
    private __1ce90dbdb85fa41f02d47acb05511f03method0;
    private __1ce90dbdb85fa41f02d47acb05511f03method2;
    private __1ce90dbdb85fa41f02d47acb05511f03method3;
    private __1ce90dbdb85fa41f02d47acb05511f03method1;
}
}

namespace Lib {
class Process {
    static execute<X>(component: Aventus.WebComponent, prom: Promise<System.ApplicationQueryFctResult<X>>): Promise<X | undefined>;
    static executeWithLoading<X>(component: Aventus.WebComponent, prom: Promise<System.ApplicationQueryFctResult<X>>): Promise<X | undefined>;
    static parseErrors<X>(result: System.ApplicationQueryFctResult<X>): Promise<X | undefined>;
}
}

namespace System {
abstract class AppIcon extends Aventus.WebComponent implements Aventus.DefaultComponent, Components.IContextMenu, Components.IPositionable {
    @Attribute()
	shaking: boolean;
    @Attribute()
	can_remove: boolean;
    @Attribute()
	is_open: boolean;
    @Attribute()
	position: number;
    private pressManager?;
    private pressManagerMove?;
    private dragAndDrop?;
    private moveApplicationState?;
    iconId: number;
    constructor();
    /**
     *
     */
    protected removeApp(e: PointerEvent, instance: Aventus.PressManager): any;
    /**
     * @inheritdoc
     */
    onContextMenu(contextMenu: Components.ContextMenu, stop: () => void): void;
    protected defineAddons(): AddonsName[];
    /**
     * Define the path where to load the component : Define by a route http inside c# that return a Component
     */
    protected componentUrl(): string;
    /**
     * Define the starting endpoint for the application
     */
    protected state(): string | Aventus.State;
    openApp(): void;
    protected onMoveApplication(state: Aventus.State, slugs: Aventus.StateSlug): void;
    protected onStopMovingApplication(): void;
    protected createPressManager(): void;
    protected destroyPressManager(): void;
    protected createDragAndDrop(): void;
    protected destroyDragAndDrop(): void;
    protected postCreation(): void;
}
}

namespace State {
class MoveApplication extends Aventus.State implements Aventus.IState {
    static state: string;
    static shadowIcons: System.AppIcon[];
    private providers;
    private selectedProvider?;
    private _lastX;
    private _lastY;
    get lastX(): number;
    get lastY(): number;
    /**
     * @inheritdoc
     */
    get name(): string;
    constructor();
    resetState(): void;
    activate(manager: Aventus.StateManager): Promise<boolean>;
    onActivate(): void;
    onInactivate(nextState: Aventus.State): void;
    registerProvider(provider: State.MoveApplicationProvider): void;
    onMove(icon: System.AppIcon, x: number, y: number): void;
    onDrop(icon: System.AppIcon, x: number, y: number, reset: () => void): any;
    onRemove(icon: System.AppIcon, x: number, y: number): void;
}
}

namespace System {
class CoreAppIcon extends System.AppIcon implements Aventus.DefaultComponent {
    protected postCreation(): void;
}
}

namespace System {
class AppIconInline extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	text?: string;
    @ViewElement()
	protected iconEl: HTMLDivElement;
    setIcon(element: System.AppIcon): void;
    protected postCreation(): void;
    private __19c78f75be261ad427a444f38f56b227method0;
}
}

namespace System {
@OverrideView()
abstract class ApplicationSidnav extends System.Application implements Aventus.DefaultComponent {
    @Attribute()
	hide_menu_size?: System.SizeList;
    @Attribute()
	hide_menu_size_portrait?: System.SizeList;
    @Attribute()
	open_sidenav: boolean;
    @Attribute()
	no_sidenav: boolean;
    @ViewElement()
	protected navEl: Components.Scrollable;
    @Watch()
	protected sidnavItems: {
        name: string;
        icon: string;
        useMi: boolean;
        route: string;
        active: string;
        allowTrigger: (link: Components.Link) => boolean;
    }[];
    protected addRouteSidenav(options: ___Core.System.ApplicationSidnavRouteOptions): void;
    protected toggleSidnav(): void;
    protected closeSidenav(): void;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod0;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod2;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod3;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod4;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod6;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod7;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod1;
    private __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod5;
}
}

namespace Components {
abstract class CalendarDay extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	other: boolean;
    @Attribute()
	today: boolean;
    protected calendar: Components.Calendar;
    protected date: Date;
    init(dateDisplayed: Date, dateDay: Date, calendar: Components.Calendar): void;
    protected postCreation(): void;
}
}

namespace Components {
class CalendarDayDefault extends Components.CalendarDay implements Aventus.DefaultComponent {
}
}

namespace Components {
class Calendar extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: Calendar) => {
            target.renderDates();
        })
	date: Date;
    @Attribute()
	protected selector: 'month' | 'year';
    @Property((target: Calendar) => {
            if(target.show_selector) {
                target.dateTemp = target.date;
            }
        })
	protected show_selector: boolean;
    @ViewElement()
	protected bodyEl: HTMLDivElement;
    @ViewElement()
	protected monthEl: HTMLDivElement;
    @ViewElement()
	protected yearEl: HTMLDivElement;
    @ViewElement()
	protected bodyMonthEl: HTMLDivElement;
    @ViewElement()
	protected bodyYearEl: HTMLDivElement;
    @Watch((target: Calendar) => {
            target.renderDatesTemp();
            target.printYearRange();
        })
	dateTemp: Date;
    @Watch((target: Calendar) => {
            target.printYearRange();
        })
	yearGroupPage: number;
    @Watch()
	yearGroupTxt: string;
    protected cases: {
        [date: string]: Components.CalendarDay;
    };
    readonly onDateClicked: Aventus.Callback<(date: Date, element: Components.CalendarDay) => void>;
    readonly onDateChanged: Aventus.Callback<(date: Date) => void>;
    protected monthsName(): string[];
    protected nextMonth(): void;
    protected previousMonth(): void;
    protected defineCalendarDay(): new (...args: any[]) => Components.CalendarDay;
    getCase(date: Date): Components.CalendarDay | undefined;
    protected renderDates(): void;
    protected renderDatesTemp(): void;
    protected showMonthSelect(): void;
    protected showYearSelect(): void;
    protected hideSelector(): void;
    /**
     *
     */
    protected selectMonthTemp(e: Event, instance: Aventus.PressManager): void;
    /**
     *
     */
    protected previousYearTemp(): void;
    /**
     *
     */
    protected nextMonthYearTemp(): void;
    /**
     *
     */
    protected previousYearGroupTemp(): void;
    /**
     *
     */
    protected nextYearGroupTemp(): void;
    protected printYearRange(): void;
    protected createYearCase(year: number): void;
    protected postDisonnect(): void;
    protected postCreation(): void;
    private __209c968d688f11ad02afc05e2a5220a2method0;
    private __209c968d688f11ad02afc05e2a5220a2method1;
}
}

namespace Components {
class DatePickerCalendarDay extends Components.CalendarDay implements Aventus.DefaultComponent {
    @Attribute()
	selected: boolean;
    init(dateDisplayed: Date, dateDay: Date, calendar: Components.Calendar): void;
    checkIfSelected(date: Date, element: Components.CalendarDay): void;
    postDestruction(): void;
}
}

namespace System {
class AddOnTime extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	active: boolean;
    @ViewElement()
	protected date: HTMLDivElement;
    @ViewElement()
	protected hour: HTMLDivElement;
    @ViewElement()
	protected calendarEl: Components.Calendar;
    private days;
    private months;
    constructor();
    private firstLoading;
    private displayDate;
    private prettyNumber;
    private normalLoading;
    private calculateCalendarSize;
    private bindCalendarSize;
    /**
     *
     */
    protected toggleActive(): void;
    protected postCreation(): void;
}
}

namespace Lib {
class FileSaver {
    private static bom;
    private static download;
    private static corsEnabled;
    private static click;
    private static get isMacOSWebView();
    private static _saveAs?;
    static get saveAs(): (blob: Blob | string, name: string, opts?: Lib.FileSaverOption) => Promise<void>;
    private static initSaveAs;
}
}

namespace Components {
abstract class Sheet extends Aventus.WebComponent implements Aventus.DefaultComponent {
    static isISheetElement(node: unknown): node is Components.ISheetElement;
    private static sizes;
    static getSize(format: Components.SheetFormat, orientation: Components.SheetOrientation): {
        width: number;
        height: number;
    };
    static mmToPx(mm: number): number;
    static pxToMm(px: number): number;
    @Attribute()
	protected format: Components.SheetFormat;
    @Attribute()
	protected orientation: Components.SheetOrientation;
    @ViewElement()
	protected headerEl: HTMLDivElement;
    @ViewElement()
	protected bodyEl: HTMLDivElement;
    @ViewElement()
	protected bodyWrapper: HTMLDivElement;
    @ViewElement()
	protected footerEl: HTMLDivElement;
    private currentWrapper;
    private currentBody;
    private currentPage;
    private basicPage;
    private pageWrappers;
    protected settings: Components.SheetSettings;
    constructor();
    private defaultSettings;
    protected abstract sheetSettings(settings: Components.SheetSettings): Components.SheetSettings;
    protected addSinglePageValue(): void;
    protected addAllPagesValue(): void;
    protected createPage(splitter: Components.SheetSplitter, container: Node): Node;
    protected getIdentifier(node: Node): null | string;
    protected cloneFromParent(classname: string, container: Node): Node | null;
    protected abstract onNewPage(splitter: Components.SheetSplitter, container: Node): Node | null;
    protected calculatePageLoop(element: Node, children: Node[], nb?: number): boolean;
    /**
     * Take the content and split it inside multiple page
     */
    calculatePage(): void;
    protected urlToBase64(url: any): Promise<string>;
    export(): Promise<string>;
    saveAs(name: string): Promise<void>;
    protected postCreation(): void;
}
}

namespace Components {
class SheetPreview extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	filename?: string;
    @Attribute()
	loading: boolean;
    @ViewElement()
	protected contentEl: Components.Scrollable;
    @Watch((target: SheetPreview) => {
            target.contentEl.zoom = target.zoom / 100;
        })
	zoom: number;
    /**
     *
     */
    protected removeZoom(): void;
    /**
     *
     */
    protected addZoom(): void;
    /**
     *
     */
    protected print(): any;
    /**
     *
     */
    protected save(): void;
    private __ef3ef2c620c645514a1d0f1099b9edaamethod0;
    private __ef3ef2c620c645514a1d0f1099b9edaamethod3;
    private __ef3ef2c620c645514a1d0f1099b9edaamethod1;
    private __ef3ef2c620c645514a1d0f1099b9edaamethod2;
}
}

namespace Components {
type FormPartValidate<T> = (value: T | undefined, globalValidation: () => Promise<void>) => Components.FormValidateResult;
}

namespace Components {
interface FormPart<T = any> {
    /**
     * A validation function for the form part.
     */
    validate?: Components.FormPartValidate<T>;
    /**
     * Indicates whether validation should be performed on value change.
     */
    validateOnChange?: boolean;
}
}

namespace Components {
type FormSchema<T> = {
    [K in keyof T]: Components.FormPart<T[K]>;
};
}

namespace Components {
interface InternalFormPart<T = any> {
    /**
     * The value of the form part, which can be of type T or an object with get and set methods.
     */
    value: {
        get: () => T;
        set: (value: T | undefined) => void;
    };
    /**
     * A validation function for the form part.
     */
    validate?: Components.FormPartValidate<T>;
    /**
     * Indicates whether validation should be performed on value change.
     */
    validateOnChange?: boolean;
    onValueChange: Aventus.Callback<() => void>;
    onValidation: Aventus.Callback<(errors: string[]) => Aventus.Asyncable<string[]>, Aventus.Asyncable<string[]>>;
    register: (element: Components.IFormElement) => void;
    unregister: (element: Components.IFormElement) => void;
    test: () => Promise<boolean>;
}
}

namespace Components {
type InternalForm<T> = {
    [K in keyof T]?: Components.InternalFormPart<T[K]>;
};
}

namespace Components {
interface IFormElement<T = any> {
    errors: string[];
    value: T | undefined;
    onChange: Aventus.Callback<(value: T) => void>;
    formPart?: Components.InternalFormPart<T>;
}
}

namespace Components {
class VirtualForm<T> {
    private __watcher;
    get item(): T | undefined;
    set item(item: T | undefined);
    get parts(): Components.InternalForm<T>;
    private _elements;
    get elements(): {
        [key: string]: Components.IFormElement[];
    };
    constructor();
    protected transformForm(form: Components.FormSchema<T>): Components.InternalForm<T>;
    protected transformFormPart(key: string, part: Components.FormPart | undefined): void;
    setForm(item: Components.FormSchema<T>): void;
    addFormEntry(name: string, part: Components.FormPart): void;
    removeFormEntry(name: string): void;
    destroy(): void;
    init(config: Components.VirtualFormConfig): void;
    private _globalValidation?;
    set globalValidation(fct: Components.FormValidate | undefined);
    private _validateOnChange?;
    set validateOnChange(value: boolean | undefined);
    private _handleValidateNoInputError?;
    set handleValidateNoInputError(value: ((errors: {
        [key: string]: string[];
    }) => any) | undefined);
    private _handleExecuteNoInputError?;
    set handleExecuteNoInputError(value: ((errors: Aventus.GenericError[]) => any) | undefined);
    onItemChange: Aventus.Callback<(action: Aventus.WatchAction, path: string, value: any) => void>;
    protected onWatcherChanged(action: Aventus.WatchAction, path: string, value: any): any;
    private _validate;
    validate(key?: string): Promise<boolean>;
    execute<X>(query: Aventus.Asyncable<System.ApplicationQueryFctResult<X>>): Promise<System.ApplicationQueryFctResult<X>>;
}
}

namespace State {
abstract class ApplicationFormState<T> extends State.ApplicationState implements Aventus.IState {
    protected _form: Components.VirtualForm<T>;
    get form(): Components.InternalForm<T>;
    get item(): T | undefined;
    set item(item: T | undefined);
    constructor();
    private _onItemChange;
    protected onItemChange(action: Aventus.WatchAction, path: string, value: any): void;
    protected abstract defineForm(): Components.FormSchema<T>;
    private defaultConfigureForm;
    protected abstract configureForm(config: Components.VirtualFormConfig): Components.VirtualFormConfig;
    protected syncField(addField: (field: keyof this) => void): void;
    validate(key?: string): Promise<boolean>;
    execute<X>(query: Aventus.Asyncable<System.ApplicationQueryFctResult<X>>): Promise<System.ApplicationQueryFctResult<X> | Awaited<X> | undefined>;
    addFormEntry(name: string, part: Components.FormPart): void;
    removeFormEntry(name: string): void;
}
}

namespace State {
abstract class CreateOrUpdate<T extends AventusSharp.Data.Storable> extends State.ApplicationFormState<Partial<T>> implements Aventus.IState {
    private static _state;
    static get state(): string;
    get item(): T;
    set item(item: T);
    constructor(item?: T);
    /**
     * @inheritdoc
     */
    get name(): string;
    private genericState;
    protected abstract defineRAM(): Aventus.Ram<T>;
    protected abstract defineObjectName(): string;
    abstract newElement(): T;
    /**
     * This will validate the form and save the model though the ram
     * Errors are deals by this method. If success, result !== undefined
     */
    save(): Promise<T | undefined>;
    back(): void;
    cancel(): void;
}
}

namespace Components {
abstract class PopupFormStorable<T extends AventusSharp.Data.Storable> extends Components.GenericPopup<T | null> implements Aventus.DefaultComponent {
    get item(): T;
    set item(value: T);
    protected get form(): Components.InternalForm<Partial<T>>;
    protected _form: Components.VirtualForm<Partial<T>>;
    constructor();
    protected abstract defineSchema(): Components.FormSchema<Partial<T>>;
    protected validate(): Promise<boolean>;
    protected onItemChange(action: Aventus.WatchAction, path: string, value: any): void;
}
}

namespace Components {
abstract class PopupForm<T> extends Components.GenericPopup<T> implements Aventus.DefaultComponent {
    get item(): T;
    set item(value: T);
    protected get form(): Components.InternalForm<T>;
    protected _form: Components.VirtualForm<T>;
    constructor();
    protected abstract defineSchema(): Components.FormSchema<T>;
    protected validate(): Promise<boolean>;
}
}

namespace Components {
abstract class FormElement<T> extends Aventus.WebComponent implements Aventus.DefaultComponent, Components.IFormElement<T> {
    @Attribute()
	protected has_errors: boolean;
    /**
     * List of errors. You must display errors in child component
     */
    @Watch((target: FormElement<T>) => {
            target.has_errors = target.errors.length > 0;
        })
	errors: string[];
    /**
     * Value for the current form element
     */
    @Watch()
	value: T | undefined;
    private _formPart?;
    get formPart(): Components.InternalFormPart<T> | undefined;
    set formPart(value: Components.InternalFormPart<T> | undefined);
    onChange: Aventus.Callback<(value: T | undefined) => void>;
    protected refreshValueFromForm(): void;
    protected unlinkFormPart(): void;
    protected linkFormPart(): void;
    onFormValidation(errors: string[]): Aventus.Asyncable<string[]>;
    protected postDestruction(): void;
}
}

namespace Components {
class InlineText extends Components.FormElement<string> implements Aventus.DefaultComponent {
    @Attribute()
	edit: boolean;
    @ViewElement()
	protected inputEl: HTMLInputElement;
    /**
     *
     */
    protected removeErrors(): void;
    /**
     *
     */
    protected onValueChange(): void;
}
}

namespace Components {
class Textarea extends Components.FormElement<string> implements Aventus.DefaultComponent {
    @Property()
	label?: string;
    @Property()
	placeholder?: string;
    @Property()
	icon?: string;
    @Property((target: Textarea) => {
            target.inputEl.value = target.value ?? "";
        })
	value: string;
    @Attribute()
	resize: boolean;
    @Attribute()
	autogrow: boolean;
    @ViewElement()
	protected inputEl: HTMLTextAreaElement;
    @ViewElement()
	protected resizeEl: Components.Resize;
    @ViewElement()
	protected inputCont: HTMLDivElement;
    /**
     *
     */
    protected removeErrors(): void;
    protected calculateAutoGrow(): void;
    /**
     *
     */
    protected onValueChange(): void;
    protected postCreation(): void;
    private __1d98574e598563b66bef89b75eeea5admethod0;
    private __1d98574e598563b66bef89b75eeea5admethod1;
    private __1d98574e598563b66bef89b75eeea5admethod2;
    private __1d98574e598563b66bef89b75eeea5admethod3;
    private __1d98574e598563b66bef89b75eeea5admethod4;
}
}

namespace Components {
class Switch extends Components.FormElement<boolean> implements Aventus.DefaultComponent {
    @Attribute()
	label_end: boolean;
    @Property()
	label?: string;
    @Property((target: Switch) => {
            
        })
	disabled: boolean;
    @Property((target: Switch) => {
            target.value = target.checked;
        })
	checked: boolean;
    @Watch((target: Switch) => {
            target.checked = target.value;
        })
	value: boolean;
    /**
     *
     */
    protected toggleActive(): void;
    private __0c8ab707a91de23d54bc9c39ebe1aeafmethod0;
}
}

namespace Components {
class Slider extends Components.FormElement<number> implements Aventus.DefaultComponent {
    @Property()
	label?: string;
    @Property((target: Slider) => {
            target.calculatePercent();
        })
	min: number;
    @Property((target: Slider) => {
            target.calculatePercent();
        })
	max: number;
    @Property((target: Slider) => {
            target.calculatePercent();
        })
	value: number;
    @Property()
	step: number;
    @Attribute()
	popup: 'never' | 'always' | 'onMove';
    @Attribute()
	private no_transition;
    @Attribute()
	private popup_visible;
    @ViewElement()
	protected dotEl: HTMLDivElement;
    @ViewElement()
	protected barEl: HTMLDivElement;
    protected currentPercent: number;
    protected timerPopup: number;
    onDragStart: Aventus.Callback<() => void>;
    onDragStop: Aventus.Callback<() => void>;
    onValidateValue: Aventus.Callback<(value: number) => number, number>;
    protected addMoveDot(): void;
    protected addClickBar(): void;
    protected calculatePercent(value?: number): void;
    protected calculateValue(emit?: boolean): void;
    protected setPercent(percent: number): void;
    /**
     *
     */
    protected removeErrors(): void;
    protected postCreation(): void;
    private __2a6eb0eb8efd251816e4040a1af5645dmethod0;
    private __2a6eb0eb8efd251816e4040a1af5645dmethod1;
}
}

namespace Components {
class InputNumber extends Components.FormElement<number> implements Aventus.DefaultComponent {
    @Property()
	label?: string;
    @Property()
	placeholder?: string;
    @Property()
	icon?: string;
    @Property((target: InputNumber) => {
            target.inputEl.value = target.value + '';
        })
	value: number;
    @Property()
	min: number;
    @Property()
	max: number;
    @Property()
	unit?: string;
    @Attribute()
	readonly: boolean;
    @ViewElement()
	protected inputEl: HTMLInputElement;
    errorsTxt: Partial<{
        notNumber: string;
        lowerThanMin: string;
        biggerThanMax: string;
    }>;
    protected defaultErrorsTxt: {
        notNumber: string;
        lowerThanMin: string;
        biggerThanMax: string;
    };
    /**
     *
     */
    protected removeErrors(): void;
    protected isNumber(): boolean;
    protected isBiggerThanMin(): boolean;
    protected isLowerThanMax(): boolean;
    protected localValidation(): string[];
    onFormValidation(errors: string[]): Aventus.Asyncable<string[]>;
    /**
     *
     */
    validate(): unknown;
    /**
     *
     */
    protected onValueChange(): void;
    private __181298e531eab1a15f907371f4223808method0;
    private __181298e531eab1a15f907371f4223808method1;
    private __181298e531eab1a15f907371f4223808method2;
    private __181298e531eab1a15f907371f4223808method3;
    private __181298e531eab1a15f907371f4223808method4;
    private __181298e531eab1a15f907371f4223808method5;
}
}

namespace Components {
class InputDate extends Components.FormElement<Date> implements Aventus.DefaultComponent {
    /**
     * Label text for the input field.
     */
    @Property()
	label?: string;
    /**
     * Placeholder text for the input field.
     */
    @Property()
	placeholder?: string;
    /**
     * URL or path to an icon.
     */
    @Property()
	icon?: string;
    /**
     * Position of the icon.
     */
    @Property()
	icon_position?: 'left' | 'right';
    /**
     * Whether the time should be displayed.
     */
    @Property()
	time: boolean;
    /**
     * Year format.
     */
    @Attribute()
	year_format: "numeric" | "2-digit";
    /**
     * Month format.
     */
    @Attribute()
	month_format: "numeric" | "2-digit" | "long" | "short" | "narrow";
    /**
     * Day format.
     */
    @Attribute()
	day_format: "numeric" | "2-digit";
    /**
     * Locale for date formatting.
     */
    @Attribute()
	locale?: string;
    /**
     * Time zone for date formatting.
     */
    @Attribute()
	time_zone?: string;
    /**
     * Whether the input is currently focused.
     */
    @Attribute()
	protected is_focus: boolean;
    /**
     * Whether the input is clearable.
     */
    @Attribute()
	clearable: boolean;
    /**
     * Whether to show the clear icon.
     */
    @Attribute()
	protected show_clear_icon: boolean;
    @ViewElement()
	protected iconEl: Components.Img;
    @ViewElement()
	protected dayEl: HTMLInputElement;
    @ViewElement()
	protected monthEl: HTMLInputElement;
    @ViewElement()
	protected yearEl: HTMLInputElement;
    @ViewElement()
	protected hourEl: HTMLInputElement;
    @ViewElement()
	protected minuteEl: HTMLInputElement;
    /**
    * @inheritdoc
    */
    @Watch((target: InputDate) => {
            target.setValueToInputs();
        })
	value: Date | undefined;
    /**
     * Selects the entire content of the input field when focused.
     */
    protected selectContent(e: Event): void;
    /**
     * Sets the value of the date inputs (day, month, year, etc.) based on the current value.
     */
    protected setValueToInputs(): void;
    /**
     * Returns a formatted string representing the visual date.
     */
    protected displayVisualDate(): any;
    /**
     * Clears the current value of the date input.
     */
    protected clearValue(): void;
    /**
     * Performs local validation of the date input fields.
     */
    protected localValidation(): string[];
    /**
     * Validates the input date and returns a boolean indicating whether the validation was successful.
     */
    validate(): unknown;
    /**
    * Handles value changes and updates the value property accordingly.
    */
    protected onValueChange(): any;
    /**
     * Adds blur events to the input fields to handle validation and focus changes.
     */
    protected addBlurEvents(): void;
    /**
     * Triggers an event when the period character (.) is pressed.
     */
    protected triggerPoint(e: KeyboardEvent): void;
    /**
     * Triggers an event when the space character is pressed.
     */
    protected triggerSpace(e: KeyboardEvent): void;
    /**
     * Triggers an event when the semicolon character (:) is pressed.
     */
    protected triggerSemiCol(e: KeyboardEvent): void;
    /**
 * Triggers the focus on the next input element if a specific character is typed.
 */
    protected triggerChar(e: KeyboardEvent, char: string): void;
    /**
     * Validates the length of the input value and moves focus if necessary.
     */
    protected validateLength2(e: KeyboardEvent): void;
    /**
     * Validates the length of the input value and moves focus if necessary.
     */
    protected validateLength4(e: KeyboardEvent): void;
    /**
     * Validates the length of the input value.
     */
    protected validateLength(e: KeyboardEvent, length: number): void;
    /**
     * Prevents the focus on the input element.
     */
    protected preventFocus(e: Event): void;
    /**
     * @inheritdoc
     */
    protected postCreation(): void;
    private __85f0c0fbb346d55c45d594cadd252d33method0;
    private __85f0c0fbb346d55c45d594cadd252d33method1;
    private __85f0c0fbb346d55c45d594cadd252d33method2;
    private __85f0c0fbb346d55c45d594cadd252d33method3;
    private __85f0c0fbb346d55c45d594cadd252d33method4;
}
}

namespace Components {
class Form<T> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    protected elements: Components.IFormElement[];
    onSubmit: Aventus.Callback<() => void>;
    registerFormElement(element: Components.IFormElement): void;
    registerSubmit(element: HTMLElement): void;
    submit(): any;
    validate(): Promise<boolean>;
}
}

namespace Components {
class Button extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	color?: ColorsType;
    @Attribute()
	outline: boolean;
    @Property()
	icon_before?: string;
    @Property()
	icon_after?: string;
    @Property((target: Button) => {
            target.icon_before = target.icon;
        })
	icon?: string;
    @Attribute()
	submit: boolean;
    @Attribute()
	disabled: boolean;
    protected registerToForm(): void;
    protected postCreation(): void;
    private __e17753be66eb8c36ad73f4b01845474bmethod0;
    private __e17753be66eb8c36ad73f4b01845474bmethod1;
}
}

namespace Components {
class Checkbox extends Components.FormElement<boolean> implements Aventus.DefaultComponent {
    @Property()
	label?: string;
    @Property()
	placeholder?: string;
    @Property()
	icon?: string;
    @Property((target: Checkbox) => {
            target.value = target.checked;
        })
	checked: boolean;
    @Attribute()
	left_label: boolean;
    @Watch((target: Checkbox) => {
            target.checked = target.value;
        })
	value: boolean;
    /**
     *
     */
    protected removeErrors(): void;
    protected postCreation(): void;
    private __ab411575f51bcaf15868d94c774ac9c3method0;
}
}

namespace Lib {
class Color {
    static isValid(txt: string): boolean;
    private static types;
    private static getColorType;
    static createFromRgb(r: number, g: number, b: number): any;
    static createFromHsl(h: number, s: number, l: number): any;
    static createFromRgba(r: number, g: number, b: number, a: number): any;
    static createFromHsla(h: number, s: number, l: number, a: number): any;
    static createFromHsvla(h: number, s: number, v: number, a: number): any;
    private _watcher;
    private get currentColor();
    private set currentColor(value);
    get r(): number;
    set r(newValue: number);
    get g(): number;
    set g(newValue: number);
    get b(): number;
    set b(newValue: number);
    get a(): number;
    set a(newValue: number);
    get h(): number;
    set h(newValue: number);
    /**
     * The hex format of the color
     */
    get hex(): string;
    set hex(hexString: string);
    /**
     * The rgb format of the color
     */
    get rgb(): Lib.RGBColor;
    get rgbString(): string;
    set rgb(value: Lib.RGBColor | string);
    /**
     * The rgba format of the color
     */
    get rgba(): Lib.RGBAColor;
    set rgba(value: Lib.RGBAColor | string);
    get rgbaString(): string;
    /**
     * The hsl format of the color
     */
    get hsl(): Lib.HSLColor;
    get hslString(): string;
    set hsl(value: Lib.HSLColor | string);
    /**
    * The hsla format of the color
    */
    get hsla(): Lib.HSLAColor;
    get hslaString(): string;
    set hsla(value: Lib.HSLAColor | string);
    /**
     * The hsv format of the color
     */
    get hsv(): Lib.HSVColor;
    get hsvString(): string;
    set hsv(value: Lib.HSVColor | string);
    /**
     * The hsva format of the color
     */
    get hsva(): Lib.HSVAColor;
    get hsvaString(): string;
    set hsva(value: Lib.HSVAColor | string);
    get isLight(): boolean;
    /**
     * Create a new color
     * @param {string} colorString - The color in hex or rgb format
     */
    constructor(colorString?: string);
    setColorTxt(colorString?: string): void;
    onColorChange: Aventus.Callback<() => void>;
    private hexStringToRgba;
    private stringToRgba;
    private rgbToHex;
    private hslStringToRgb;
    private rgbToHsl;
    private rgbToHsla;
    private hslToRgb;
    private hslaToRgba;
    private hslaStringToRgba;
    private rgbToHsv;
    private hsvToRgb;
    private rgbToHsva;
    private hsvaToRgba;
    private hsvaStringToRgba;
    private round;
    /**
     * Print the color in hex format
     * @returns {string} - A pretty print of the color in hex format
     */
    toString(): string;
}
}

namespace Components {
class ColorPickerSelector extends Aventus.WebComponent implements Aventus.DefaultComponent {
    /**
     * La couleur actuelle sélectionnée, représentée sous forme de chaîne de caractères (ex: "#35942a").
     * Lorsque cette propriété est modifiée, la teinte (hue) et l'opacité (alpha) sont mises à jour,
     * et la position du sélecteur est ajustée en conséquence.
     */
    @Property((target: ColorPickerSelector) => {
            if(!target.internalSet) {
                target.canEmit = false;
                target._color.setColorTxt(target.color);
                target.hue = target._color.hsv.h;
                target.alpha = target._color.a * 100;
                target.updatePositionFromColor(target._color);
                target.canEmit = true;
            }
        })
	color: string;
    /**
     * Définit la direction d'affichage du sélecteur de couleurs : `horizontal` ou `vertial`.
     */
    @Attribute()
	direction: 'horizontal' | 'vertial';
    /**
     * Indique si l'opacité de la couleur doit être affichée ou non.
     */
    @Attribute()
	opacity: boolean;
    /**
     * Indique si la valeur textuelle de la couleur sélectionnée doit être affichée.
     */
    @Attribute()
	show_text_value: boolean;
    /**
     * Conteneur pour le style du sélecteur de couleurs.
     */
    @ViewElement()
	protected styleWrapper: HTMLDivElement;
    /**
     * Élement représentant la zone où l'utilisateur peut sélectionner la couleur.
     */
    @ViewElement()
	protected areaEl: HTMLDivElement;
    /**
     * Élement représentant le point de sélection à l'intérieur de la zone de sélection.
     */
    @ViewElement()
	protected areaDotEl: HTMLDivElement;
    /**
     * Conteneur pour les couleurs prédéfinies (presets).
     */
    @ViewElement()
	protected presetEl: HTMLDivElement;
    /**
     * Texte représentant la couleur sélectionnée, mis à jour lors des changements de couleur.
     */
    @Watch((target: ColorPickerSelector, action: Aventus.WatchAction, path: string, value: any) => {
            target.onColorTxtChange();
        })
	colorTxt: string;
    /**
     * Représente la teinte (hue) de la couleur actuelle.
     */
    @Watch((target: ColorPickerSelector, action: Aventus.WatchAction, path: string, value: any) => {
            target.changeHue();
        })
	protected hue: number;
    /**
     * Représente le niveau d'opacité de la couleur actuelle, sur une échelle de 0 à 100.
     */
    @Watch((target: ColorPickerSelector, action: Aventus.WatchAction, path: string, value: any) => {
            target.changeAlpha();
        })
	protected alpha: number;
    /**
     * Liste des couleurs prédéfinies que l'utilisateur peut choisir.
     */
    @Watch((target: ColorPickerSelector, action: Aventus.WatchAction, path: string, value: any) => {
            target.renderPresets();
        })
	presets: string[];
    /**
     * Instance de la classe `Color` pour gérer les opérations sur la couleur.
     */
    protected readonly _color: Lib.Color;
    /**
     * Indique si des événements de changement de couleur peuvent être émis.
     */
    protected canEmit: boolean;
    /**
     * Indique si le changement de couleur est interne (par exemple, via une mise à jour automatique).
     */
    protected internalSet: boolean;
    /**
     * Observer pour l'ajustement de la position du point de séléction
     */
    protected resizeObserver?: Aventus.ResizeObserver;
    constructor();
    /**
     * Événement déclenché lors d'un changement de couleur. Les abonnés peuvent réagir au changement de la couleur sélectionnée.
     */
    onChange: Aventus.Callback<(value: string | undefined) => void>;
    /**
     * Méthode appelée lorsque le texte de la couleur change. Si la nouvelle valeur est valide,
     * la couleur interne est mise à jour en conséquence.
     */
    protected onColorTxtChange(): void;
    /**
     * Émet un événement de changement de couleur si cela est permis.
     */
    protected emitChange(): void;
    /**
     * Modifie la teinte (hue) de la couleur actuelle et met à jour l'affichage.
     */
    protected changeHue(): void;
    /**
     * Modifie l'opacité (alpha) de la couleur actuelle.
     */
    protected changeAlpha(): void;
    /**
     * Applique les changements de couleur en mettant à jour les styles CSS correspondants
     * et en synchronisant les valeurs de teinte, d'opacité, et de texte de couleur.
     */
    protected applyColorChange(): void;
    /**
    * Ajoute un gestionnaire de pression (Drag and Drop) pour permettre à l'utilisateur de sélectionner la couleur en cliquant et glissant.
    */
    protected addPressManager(): void;
    /**
     * Met à jour la couleur en fonction de la position du curseur dans la zone de sélection.
     */
    protected updateColorFromPosition(x: number, y: number): void;
    /**
     * Met à jour la position du sélecteur (point) en fonction de la couleur actuelle.
     */
    protected updatePositionFromColor(color: Lib.Color): void;
    /**
     * Rendu des couleurs prédéfinies dans la zone prévue à cet effet.
     */
    protected renderPresets(): void;
    /**
     * Ajoute un observateur de redimensionnement pour ajuster la position du sélecteur de couleur lorsque la zone de sélection change de taille.
     */
    protected addObserver(): void;
    /**
     * @inheritdoc
     */
    protected postCreation(): void;
    /**
     * @inheritdoc
     */
    protected postDestruction(): void;
    private __8e40e5b3dc0703a294a7003ba5b4bc48method0;
    private __8e40e5b3dc0703a294a7003ba5b4bc48method1;
    private __8e40e5b3dc0703a294a7003ba5b4bc48method2;
    private __8e40e5b3dc0703a294a7003ba5b4bc48method3;
    private __8e40e5b3dc0703a294a7003ba5b4bc48method4;
    private __8e40e5b3dc0703a294a7003ba5b4bc48method5;
}
}

namespace Components {
class ColorPicker extends Components.FormElement<string> implements Aventus.DefaultComponent {
    /**
    * La valeur actuelle du sélecteur de couleurs.
    */
    @Property((target: ColorPicker) => {
            if(document.activeElement != target.inputEl && document.activeElement != target) {
                target.inputEl.value = target.value + '';
            }
            target.containerEl.style.setProperty('--_color-picker-selected-color', target.value ?? 'transparent');
        })
	value: string | undefined;
    /**
     * Le libellé du sélecteur de couleurs.
     */
    @Property()
	label?: string;
    /**
     * Le texte d'espace réservé (placeholder) du champ de saisie du sélecteur de couleurs.
     */
    @Property()
	placeholder?: string;
    /**
    * Définit la position de l'aperçu de la couleur sélectionnée par rapport au champ de saisie.
    */
    @Attribute()
	preview: 'before' | 'after' | 'none';
    /**
     * Définit la direction d'affichage du sélecteur de couleurs.
     */
    @Property()
	direction: 'horizontal' | 'vertial';
    /**
     * Indique si l'opacité de la couleur doit être affichée ou non.
     */
    @Property()
	opacity: boolean;
    /**
     * Indique si la valeur textuelle de la couleur sélectionnée doit être affichée.
     */
    @Property()
	show_text_value: boolean;
    /**
     * Référence à l'élément d'entrée HTML où l'utilisateur saisit la valeur de la couleur.
     */
    @ViewElement()
	protected inputEl: HTMLInputElement;
    /**
     * Référence au sélecteur de couleurs (`ColorPickerSelector`) associé.
     */
    @ViewElement()
	protected pickerEl: Components.ColorPickerSelector;
    /**
     * Conteneur principal du composant `ColorPicker`.
     */
    @ViewElement()
	protected containerEl: HTMLDivElement;
    /**
     * Liste des couleurs prédéfinies que l'utilisateur peut choisir.
     */
    @Watch()
	presets: string[];
    /**
     * Messages d'erreur personnalisés pour la validation.
     */
    errorsTxt: Partial<{
        notColor: string;
    }>;
    /**
     * Messages d'erreur par défaut pour la validation.
     */
    protected defaultErrorsTxt: {
        notColor: string;
    };
    /**
     * Supprime les erreurs de validation actuelles.
     */
    protected removeErrors(): void;
    /**
     * Affiche le sélecteur de couleurs sous l'élément d'entrée de couleur.
     */
    protected showPicker(): void;
    /**
     * Gère le focus et le blur sur l'élément d'entrée et le sélecteur de couleurs pour valider la sélection.
     */
    protected manageFocus(): void;
    /**
     * Valide localement la valeur de la couleur saisie.
     * retourne Une liste d'erreurs, vide si la validation est réussie.
     */
    protected localValidation(): string[];
    /**
     * @inheritdoc
     */
    onFormValidation(errors: string[]): Aventus.Asyncable<string[]>;
    /**
     * Valide la valeur actuelle du sélecteur de couleurs.
     */
    validate(): unknown;
    /**
     * Met à jour la valeur du sélecteur de couleurs lorsque le texte d'entrée change.
     */
    protected txtChange(): void;
    /**
     * @inheritdoc
     */
    protected postCreation(): void;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod0;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod1;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod2;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod3;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod4;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod5;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod6;
    private __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod7;
}
}

namespace Components {
class DatePickerCalendar extends Components.Calendar implements Aventus.DefaultComponent {
    picker: Components.DatePicker;
    protected defineCalendarDay(): new (...args: any[]) => Components.CalendarDay;
}
}

namespace Components {
class DatePicker extends Components.FormElement<Date | undefined> implements Aventus.DefaultComponent {
    @Property()
	label?: string;
    @Property()
	icon?: string;
    @Attribute()
	year_format: "numeric" | "2-digit";
    @Attribute()
	month_format: "numeric" | "2-digit" | "long" | "short" | "narrow";
    @Attribute()
	day_format: "numeric" | "2-digit";
    @Attribute()
	locale?: string;
    @Attribute()
	time_zone?: string;
    @Attribute()
	hide_on_select: boolean;
    @Attribute()
	protected show_close: boolean;
    @Attribute()
	no_undefined: boolean;
    @ViewElement()
	protected calendarContainer: Components.CalendarContainer;
    @ViewElement()
	readonly inputEl: HTMLInputElement;
    @Watch((target: DatePicker) => {
            target.renderDate();
        })
	value: Date | undefined;
    calendar: Components.DatePickerCalendar;
    constructor();
    protected defineCalendar(): new (...args: any[]) => Components.DatePickerCalendar;
    renderDate(): void;
    /**
     *
     */
    protected removeErrors(): void;
    /**
     *
     */
    protected onValueChange(): void;
    clearValue(): void;
    /**
     *
     */
    protected showCalendar(): void;
    protected bindCalendar(): void;
    protected manageFocus(): void;
    protected postCreation(): void;
    private __e3c5860a3719823edab2c4b36e42865dmethod0;
    private __e3c5860a3719823edab2c4b36e42865dmethod1;
    private __e3c5860a3719823edab2c4b36e42865dmethod2;
    private __e3c5860a3719823edab2c4b36e42865dmethod3;
}
}

namespace Components {
class CalendarContainer extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	visible: boolean;
    private picker;
    init(picker: Components.DatePicker): void;
    show(container?: HTMLElement): any;
    hide(): void;
    protected postCreation(): void;
}
}

namespace Components {
class Input extends Components.FormElement<string> implements Aventus.DefaultComponent {
    @Property()
	label?: string;
    @Property()
	placeholder?: string;
    @Property()
	unit?: string;
    @Property()
	icon?: string;
    @Property()
	icon_position?: 'left' | 'right';
    @Property((target: Input) => {
            target.inputEl.value = target.value ?? "";
        })
	value: string;
    @Attribute()
	readonly: boolean;
    @ViewElement()
	protected inputEl: HTMLInputElement;
    @ViewElement()
	protected iconEl: Components.Img | undefined;
    /**
     *
     */
    protected removeErrors(): void;
    /**
     *
     */
    protected onValueChange(): void;
    private __7b4688f1d13a935f88db2286094e0088method0;
    private __7b4688f1d13a935f88db2286094e0088method1;
    private __7b4688f1d13a935f88db2286094e0088method2;
    private __7b4688f1d13a935f88db2286094e0088method3;
    private __7b4688f1d13a935f88db2286094e0088method4;
    private __7b4688f1d13a935f88db2286094e0088method5;
}
}

namespace Components {
class Password extends Components.Input implements Aventus.DefaultComponent {
    @Property((target: Password) => {
            target.updateIcon();
        })
	protected visible: boolean;
    @Property()
	icon_position?: "left" | "right";
    private pressIcon?;
    protected toggleVisible(): void;
    protected updateIcon(): void;
    protected postCreation(): void;
    protected postDestruction(): void;
}
}

namespace Components {
abstract class GenericSelect<T extends Components.GenericOption<U>, U = Components.ExtractTypeOption<T, any>> extends Components.FormElement<U> implements Aventus.DefaultComponent {
    @Property()
	label?: string;
    @Property()
	placeholder?: string;
    @Property()
	icon?: string;
    @Attribute()
	open: boolean;
    @Property((target: GenericSelect<T, U>) => {
            if(target.searchable) {
                target.inputEl.removeAttribute("disabled");
            }
            else {
                target.inputEl.setAttribute("disabled", "disabled");
            }
        })
	searchable: boolean;
    @Watch((target: GenericSelect<T, U>, action: Aventus.WatchAction, path: string, value: any) => {
            target.inputEl.value = target.displayValue;
        })
	displayValue: string;
    @ViewElement()
	inputEl: HTMLInputElement;
    @ViewElement()
	protected optionsContainer: Components.OptionsContainer;
    selectedOption?: T;
    @Watch((target: GenericSelect<T, U>) => {
            target.onInternalValueChanged();
        })
	value: U | undefined;
    protected options: T[];
    protected optionsInited: boolean;
    protected abstract itemToText(option: T): string;
    protected compare(item1: U | undefined, item2: U | undefined): boolean;
    protected onInternalValueChanged(): void;
    protected setValueFromOption(option: T): void;
    /**
     *
     */
    protected removeErrors(): void;
    protected loadElementsFromSlot(): void;
    /**
     *
     */
    protected showOptions(): void;
    protected hideOptions(): void;
    /**
     *
     */
    protected syncCaret(open: boolean): void;
    /**
     *
     */
    protected filter(): void;
    protected manageFocus(): void;
    protected postDestruction(): void;
    protected postCreation(): void;
    private __efca6c2ed5bcc3ecd5150acdf7f96c13method0;
    private __efca6c2ed5bcc3ecd5150acdf7f96c13method1;
    private __efca6c2ed5bcc3ecd5150acdf7f96c13method2;
    private __efca6c2ed5bcc3ecd5150acdf7f96c13method3;
    private __efca6c2ed5bcc3ecd5150acdf7f96c13method4;
}
}

namespace Components {
class GenericOption<T> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    value?: T;
    protected select: Components.GenericSelect<Components.GenericOption<T>>;
    init(select: Components.GenericSelect<Components.GenericOption<T>>): void;
    filter(text: string): void;
    protected postCreation(): void;
}
}

namespace Components {
class OptionEnum<T extends Aventus.Enum> extends Components.GenericOption<Aventus.EnumValue<T>> implements Aventus.DefaultComponent {
    value: Aventus.EnumValue<T> | undefined;
}
}

namespace Components {
abstract class SelectEnum<U extends Aventus.Enum> extends Components.GenericSelect<Components.OptionEnum<U>, Aventus.EnumValue<U>> implements Aventus.DefaultComponent {
    @Attribute()
	txt_undefined?: string;
    protected enumEl: U;
    constructor();
    /**
     * @inheritdoc
     */
    protected itemToText(option: Components.OptionEnum<U>): string;
    abstract defineEnum(): U;
    protected getEnumName(value: U[Extract<keyof U, string>]): string;
    protected createOptions(): void;
    protected postCreation(): void;
}
}

namespace Components {
class Option extends Components.GenericOption<string> implements Aventus.DefaultComponent {
    @Property()
	value: string | undefined;
}
}

namespace Components {
class Select extends Components.GenericSelect<Components.Option> implements Aventus.DefaultComponent {
    @Property((target: Select) => {
            target.onInternalValueChanged();
        })
	value: string;
    /**
     * @inheritdoc
     */
    protected itemToText(option: Components.Option): string;
}
}

namespace Components {
class ItemBoxSelect extends Components.FormElement<string> implements Aventus.DefaultComponent {
    @Property((target: BoxContainer) => {
            target.style.setProperty("--item-box-margin", target.space + 'px');
        })
	space: number;
    /**
     * @inheritdoc
     */
    @Property((target: ItemBoxSelect) => {
            target.selectInternalOption();
        })
	value: string | undefined;
    protected options: Components.ItemBoxOption[];
    protected optionSelected?: Components.ItemBoxOption;
    /**
     * @inheritdoc
     */
    form?: Components.Form<any> | undefined;
    protected selectInternalOption(): void;
    private selectOption;
    private register;
    private unregister;
    /**
     *
     */
    protected removeErrors(): void;
    protected postCreation(): void;
}
}

namespace Components {
class ItemBoxOption extends Components.ItemBox implements Aventus.DefaultComponent {
    @Attribute()
	selected: boolean;
    @Attribute()
	value?: string;
    protected select?: Components.ItemBoxSelect | null;
    protected register(): void;
    protected postCreation(): void;
    destructor(): void;
}
}

namespace Components {
abstract class SelectData<U extends Aventus.IData, T extends U | number = U, R extends Components.OptionData<T, U> = Components.OptionData<T, U>> extends Components.GenericSelect<R, T> implements Aventus.DefaultComponent {
    @Attribute()
	loading: boolean;
    @Attribute()
	txt_undefined?: string;
    protected data: Aventus.RamItem<U>[];
    protected isInit: boolean;
    constructor();
    protected compare(item1: T | undefined, item2: T | undefined): boolean;
    /**
     * @inheritdoc
     */
    protected itemToText(option: R): string;
    protected defineOption(): new () => R;
    private getOption;
    protected createOptions(): any;
    protected abstract defineRam(): Aventus.Ram<U>;
    protected loadData(): Promise<Aventus.RamItem<U>[]>;
    protected abstract optionText(item: U): Aventus.Asyncable<string>;
    protected abstract optionValue(item: U): Aventus.Asyncable<T>;
    protected subscribe(): void;
    protected unsubscribe(): void;
    protected onCreated(item: Aventus.RamItem<U>): any;
    protected onDeleted(item: Aventus.RamItem<U>): any;
    protected onUpdated(item: Aventus.RamItem<U>): any;
    protected init(): any;
    protected postDestruction(): void;
    protected postConnect(): void;
    protected postCreation(): void;
}
}

namespace Components {
class OptionData<T extends Aventus.IData | number, U extends Aventus.IData> extends Components.GenericOption<T> implements Aventus.DefaultComponent {
    getText(): any;
    setItem(item: U | undefined): any;
}
}

namespace Components {
abstract class TwoColumnsSelect<T extends Components.TwoColumnsOption<U>, U = Components.ExtractTypeTwoColumnsOptions<T, any>> extends Components.FormElement<U[]> implements Aventus.DefaultComponent {
    @Property()
	title_unselect?: string;
    @Property()
	title_select?: string;
    @Property()
	placeholder_unselect: string;
    @Property()
	placeholder_select?: string;
    @Attribute()
	searchable_unselect: boolean;
    @Attribute()
	searchable_select: boolean;
    @ViewElement()
	protected unselectOptionsCont: Components.Scrollable;
    @ViewElement()
	protected selectOptionsCont: Components.Scrollable;
    @ViewElement()
	protected unselectSearchInput: Components.Input;
    @ViewElement()
	protected selectSearchInput: Components.Input;
    selectedOption?: T;
    @Watch((target: TwoColumnsSelect<T, U>) => {
            target.onInternalValueChanged();
        })
	value: U[] | undefined;
    protected optionsSelected: T[];
    protected optionsUnselected: T[];
    protected canGenerateValues: boolean;
    protected abstract itemToText(option: T): string;
    protected include(array: U[], value: U): boolean;
    protected onInternalValueChanged(): void;
    protected changeValue(): void;
    protected loadElementsFromSlot(): void;
    protected reloadOptions(): void;
    /**
     *
     */
    protected removeErrors(): void;
    /**
     *
     */
    protected selectAll(): void;
    /**
     *
     */
    protected selectHighlighted(): void;
    /**
     *
     */
    protected unselectHighlighted(): void;
    /**
     *
     */
    protected unselectAll(): void;
    /**
     *
     */
    protected searchUnselect(): void;
    /**
     *
     */
    protected searchSelect(): void;
    protected postDestruction(): void;
    protected postCreation(): void;
    private __02ff6a099b7c5d693b75b5727ffdf5e8method0;
    private __02ff6a099b7c5d693b75b5727ffdf5e8method1;
    private __02ff6a099b7c5d693b75b5727ffdf5e8method2;
    private __02ff6a099b7c5d693b75b5727ffdf5e8method3;
    private __02ff6a099b7c5d693b75b5727ffdf5e8method4;
    private __02ff6a099b7c5d693b75b5727ffdf5e8method5;
}
}

namespace Components {
class TwoColumnsOption<T> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	highlight: boolean;
    value?: T;
    protected select: Components.TwoColumnsSelect<Components.TwoColumnsOption<T>>;
    init(select: Components.TwoColumnsSelect<Components.TwoColumnsOption<T>>): void;
    filter(text: string): void;
    protected postCreation(): void;
}
}

namespace Components {
class TwoColumnsOptionData<T extends Aventus.IData | number> extends Components.TwoColumnsOption<T> implements Aventus.DefaultComponent {
}
}

namespace Components {
abstract class TwoColumnsSelectData<U extends Aventus.IData, T extends U | number = U> extends Components.TwoColumnsSelect<Components.TwoColumnsOptionData<T>, T> implements Aventus.DefaultComponent {
    @Attribute()
	loading: boolean;
    protected data: Aventus.RamItem<U>[];
    protected isInit: boolean;
    constructor();
    /**
     * @inheritdoc
     */
    protected itemToText(option: Components.TwoColumnsOptionData<T>): string;
    protected include(array: T[], value: T): boolean;
    protected createOptions(): any;
    protected abstract defineRam(): Aventus.Ram<U>;
    protected loadData(): Promise<Aventus.RamItem<U>[]>;
    protected abstract optionText(item: U): Aventus.Asyncable<string>;
    protected abstract optionValue(item: U): Aventus.Asyncable<T>;
    protected subscribe(): void;
    protected unsubscribe(): void;
    protected onCreated(item: Aventus.RamItem<U>): any;
    protected onDeleted(item: Aventus.RamItem<U>): void;
    protected onUpdated(item: Aventus.RamItem<U>): any;
    protected init(): void;
    protected postDestruction(): void;
    protected postCreation(): void;
}
}

namespace Components {
class Menu extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	position: 'bottom left' | 'bottom right' | 'top left' | 'top right' | 'left top' | 'left bottom' | 'right top' | 'right bottom';
    @Attribute()
	edge_gap: number;
    @Attribute()
	position_gap: number;
    @ViewElement()
	protected collapseEl: Components.Collapse;
    @ViewElement()
	protected containerEl: HTMLDivElement;
    state: Components.MenuState;
    stateChange: Aventus.Callback<(state: Components.MenuState) => void>;
    show(rect: DOMRect): void;
    protected calculatePosition(rect: DOMRect): void;
    private resetResult;
    private checkValue;
    private getPositionBottomLeft;
    private getPositionBottomRight;
    private getPositionTopLeft;
    private getPositionTopRight;
    private getPositionLeftTop;
    private getPositionLeftBottom;
    private getPositionRightTop;
    private getPositionRightBottom;
    private addFocus;
    protected postCreation(): void;
}
}

namespace Components {
@OverrideView()
class ButtonIconMenu extends Components.ButtonIcon implements Aventus.DefaultComponent {
    @Property((target: ButtonIconMenu) => {
            target.syncMenu();
        })
	open: boolean;
    protected menu?: Components.Menu;
    protected stateMenuToOpen(state: Components.MenuState): boolean;
    protected syncMenu(): void;
    protected postCreation(): void;
    private __503a2de938f470c1fb45b45f48d4bb7dmethod0;
}
}

namespace Components {
type TableSchemaCell<T> = Components.TableSchemaCellCst<T>;
}

namespace Components {
type TableSchema<T> = {
    displayName: string;
    name?: string;
    type: Components.TableCellType;
    cell?: Components.TableSchemaCell<T>;
    cellContent?: Components.TableSchemaCellContent<T>;
    cellHeader?: new () => Components.TableCell<any, any>;
    width?: number;
    minWidth?: number;
    sortable?: boolean;
};
}

namespace Components {
type TableOptions<T> = {
    schema: Components.TableSchema<T>[];
    selectable: boolean;
    row: new () => Components.TableRow<T>;
    header: new () => Components.TableRowHeader<T>;
    sortable: boolean;
    title: string;
    globalSearch: boolean;
    showFooter?: boolean;
    items_per_page?: number;
    timeoutBeforeLoading?: number;
    minTimeoutLoading?: number;
};
}

namespace Components {
type TableDataOptions<T> = Components.TableOptions<T> & {
    showLoading: boolean;
    delayLoading: number;
};
}

namespace Components {
abstract class Table<T, U extends Components.TableOptions<T> = Components.TableOptions<T>> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	col_resize: boolean;
    @Property()
	auto_hide_scroll: boolean;
    @Property((target: Table<T>) => {
            target.updateGrid();
        })
	protected grid: boolean;
    @Property((target: Table<T>) => {
            target.renderPage();
            if(target.items_per_page > 0 && target.options.showFooter === undefined) {
                target.showFooter = true;
            }
        })
	items_per_page: number;
    /**
     * Define the size when the table must switch to grid
     */
    @Attribute()
	grid_breakpoint: number;
    @Attribute()
	private first_page;
    @Attribute()
	private last_page;
    @Attribute()
	private loading;
    @Attribute()
	private no_data;
    @ViewElement()
	protected headerContainer: Components.Scrollable;
    @ViewElement()
	protected bodyContainer: Components.Scrollable;
    @ViewElement()
	protected styleWrapper: HTMLDivElement;
    @Watch()
	protected tableTitle: string;
    @Watch()
	protected showSearch: boolean;
    @Watch()
	protected showHeader: boolean;
    @Watch()
	protected showFooter: boolean;
    @Watch((target: Table<T>, action: Aventus.WatchAction, path: string, value: any) => {
            target.render();
        })
	displayedData?: T[];
    @Watch((target: Table<T>, action: Aventus.WatchAction, path: string, value: any) => {
            target.filterData();
        })
	data?: T[];
    protected options: U;
    protected filters: {
        [key: string]: Components.FilterAction<T>[];
    };
    protected dataFilters: Components.FilterDataAction<T>[];
    protected sortColumns: Components.SortColumns;
    protected globalSearchTxt?: string;
    protected rows: Map<T, Components.TableRow<T>>;
    protected hadGlobalSearch: boolean;
    protected isFirstRender: boolean;
    @Watch((target: Table<T>) => {
            target.correctPage();
        })
	currentPage: number;
    @Watch()
	protected nbItems: number;
    protected header: Components.TableRowHeader<T>;
    protected rowsSelected: Components.TableRow<T>[];
    protected rowsFiltered: Components.TableRow<T>[];
    protected rowsDisplayed: Components.TableRow<T>[];
    protected resizeObserver: Aventus.ResizeObserver;
    protected mustForceRender: boolean;
    protected errorsTxtItemPerPage: {
        notNumber: string;
        lowerThanMin: string;
        biggerThanMax: string;
    };
    getSelectedData(): T[];
    constructor();
    private showLoadingStart;
    private showLoadingTimeout;
    protected timeoutBeforeLoading: number;
    protected minTimeoutLoading: number;
    showLoading(): void;
    hideLoading(): Promise<void>;
    protected autoHideScroll(): boolean;
    selectRow(row?: Components.TableRow<T>): void;
    unselectRow(row?: Components.TableRow<T>): void;
    unselectAllRows(): void;
    select: Aventus.Callback<(data: T[]) => void>;
    /**
     * Trigger when a row is selected
     */
    protected onSelected(): void;
    protected syncScroll(): void;
    protected normalizeSchemaCell(cellConfig: Components.TableSchema<T>): void;
    protected normalizeSchema(): void;
    protected defaultOptions(): Components.TableOptions<T>;
    /**
     * Define the schema needed for the table
     */
    protected abstract configure(options: Components.TableOptions<T>): U;
    setColWidth(width: number, i: number): void;
    setColMinWidth(width: number, i: number): void;
    protected sortData(data: T[]): T[];
    setSortColumn(column: string, order: 'asc' | 'desc' | undefined): Promise<void>;
    protected filterData(forceRender?: boolean): Promise<void>;
    protected firstRender(): void;
    protected render(onlySort?: boolean): Promise<void>;
    protected renderPage(): void;
    protected locationInfo(): string;
    protected correctPage(): void;
    previousPage(): void;
    firstPage(): void;
    nextPage(): void;
    lastPage(): void;
    globalFilter(txt: string): Promise<void>;
    /**
     * Add filter on the data key
     * return true if the element can be displayed
     */
    addFilter<U extends keyof T>(name: U, action: (value: T[U]) => boolean, reload?: boolean): Promise<void>;
    removeFilter<U extends keyof T>(name: U, action: (value: T[U]) => boolean, reload?: boolean): Promise<void>;
    /**
     * Add filter on the data
     * return true if the element can be displayed
     */
    addCustomFilter(action: (value: T) => boolean, reload?: boolean): Promise<void>;
    removeCustomFilter(action: (value: T) => boolean, reload?: boolean): Promise<void>;
    applyFilters(): Promise<void>;
    protected registerObserver(): void;
    protected updateGrid(): void;
    protected postCreation(): void;
    protected postDestruction(): void;
    private __b5b6f5e196622f4341e5ecfc2e397e35method3;
    private __b5b6f5e196622f4341e5ecfc2e397e35method4;
    private __b5b6f5e196622f4341e5ecfc2e397e35method8;
    private __b5b6f5e196622f4341e5ecfc2e397e35method0;
    private __b5b6f5e196622f4341e5ecfc2e397e35method1;
    private __b5b6f5e196622f4341e5ecfc2e397e35method2;
    private __b5b6f5e196622f4341e5ecfc2e397e35method7;
    private __b5b6f5e196622f4341e5ecfc2e397e35method5;
    private __b5b6f5e196622f4341e5ecfc2e397e35method6;
}
}

namespace Components {
type FilterAction<T> = (value: T[Components.Key<T>]) => boolean;
}

namespace Components {
class TableRow<T> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property((target: TableRow<T>) => {
            target.updateGrid();
        })
	grid: boolean;
    @Attribute()
	private custom_grid;
    @ViewElement()
	protected rowContentEl: HTMLDivElement;
    table?: Components.Table<T>;
    protected _data: T;
    get data(): T;
    protected cells: Components.TableCell<any, T>[];
    protected options: Components.TableOptions<T>;
    constructor();
    protected customGridTemplate(): boolean;
    protected getCell(cellConfig: Components.TableSchema<T>): Components.TableSchemaCell<T>;
    protected addCellOption(cell: Components.TableCell<any>, cellConfig: Components.TableSchema<T>, data: T): Promise<void>;
    init(options: Components.TableOptions<T>, data: T): any;
    protected setCellContent(cell: Components.TableCell<any, T>, cellConfig: Components.TableSchema<T>, data: T): Promise<void>;
    globalSearch(search: string): boolean;
    sort(row: Components.TableRow<T>, column: string, order: 'asc' | 'desc'): number;
    protected updateGrid(): void;
    protected postDestruction(): void;
}
}

namespace Components {
class TableRowData<T extends AventusSharp.Data.Storable> extends Components.TableRow<T> implements Aventus.DefaultComponent {
    protected ram?: Aventus.Ram<T>;
    init(options: Components.TableOptions<T>, data: T): Pro;
    constructor();
    mise(): any;
}
}

namespace Components {
abstract class TableCell<T, U = any> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Property()
	grid: boolean;
    @Property()
	label?: string;
    @ViewElement()
	protected contentEl: HTMLSpanElement;
    @ViewElement()
	protected labelEl: HTMLDivElement;
    @ViewElement()
	protected resizeEl: HTMLDivElement;
    row?: Components.TableRow<U>;
    index: number;
    get table(): Components.Table<U>;
    protected content: string;
    data: U;
    cellConfig: Components.TableSchema<U>;
    abstract setContent(data: T | undefined, rowData: U): Aventus.Asyncable<void>;
    protected addResize(): void;
    globalSearch(search: string): boolean;
    abstract sortAsc(cell: this): number;
    protected postCreation(): void;
    private __ac8f24890b42a6032ac364c65280b7a3method1;
    private __ac8f24890b42a6032ac364c65280b7a3method0;
}
}

namespace Components {
class TableCellString<U = any> extends Components.TableCell<string, U> implements Aventus.DefaultComponent {
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: string | undefined, rowData: U): void;
}
}

namespace Components {
class TableCellPicture<U = any> extends Components.TableCell<string, U> implements Aventus.DefaultComponent {
    @Property()
	src?: string;
    @Property()
	full: boolean;
    private clone?;
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: string | undefined, rowData: U): void;
    globalSearch(search: string): boolean;
    setBigger(): void;
    setSmaller(): void;
    private __5c25ad747ea3a14316fd5b29073319bemethod0;
}
}

namespace Components {
class TableCellNumber<U = any> extends Components.TableCell<number, U> implements Aventus.DefaultComponent {
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
    * @inheritdoc
    */
    setContent(data: number | undefined, rowData: U): void;
}
}

namespace Components {
class TableCellHeader<U = any> extends Components.TableCell<undefined, U> implements Aventus.DefaultComponent {
    sortable: boolean;
    @Attribute()
	sort_direction?: 'asc' | 'desc';
    @ViewElement()
	protected headerName: HTMLDivElement;
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: undefined, rowData: U): void;
    protected postCreation(): void;
}
}

namespace Components {
class TableDataCellHeaderAction<U = any> extends Components.TableCellHeader<U> implements Aventus.DefaultComponent {
    protected postCreation(): void;
    /**
    * @inheritdoc
    */
    setContent(data: undefined, rowData: U): void;
}
}

namespace Components {
class TableRowHeader<T> extends Components.TableRow<T> implements Aventus.DefaultComponent {
    cells: Components.TableCell<any, T>[];
    protected setCellContent(cell: Components.TableCell<any, T>, cellConfig: Components.TableSchema<T>, data: T): Promise<void>;
    protected addCellOption(cell: Components.TableCell<any, any>, cellConfig: Components.TableSchema<T>, data: T): Promise<void>;
    protected getCell(cellConfig: Components.TableSchema<T>): new (...args: any[]) => Components.TableCell<any, any>;
    init(options: Components.TableOptions<T>, data?: T): any;
}
}

namespace Components {
abstract class TableCellEnum<T extends Aventus.Enum, U = any> extends Components.TableCell<T[Extract<keyof T, string>], U> implements Aventus.DefaultComponent {
    protected enumEl: T;
    constructor();
    abstract defineEnum(): T;
    sortAsc(cell: this): number;
    protected getEnumName(value: T[Extract<keyof T, string>]): string;
    /**
     * @inheritdoc
     */
    setContent(data: T[Extract<keyof T, string>] | undefined, rowData: U): void;
}
}

namespace Components {
class TableCellDate<U = any> extends Components.TableCell<Date, U> implements Aventus.DefaultComponent {
    protected date?: Date;
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: Date | undefined, rowData: U): void;
}
}

namespace Components {
class TableCellCustom<U = any> extends Components.TableCell<string, U> implements Aventus.DefaultComponent {
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: string | undefined, rowData: U): void;
}
}

namespace Components {
class TableCellCheckbox<U = any> extends Components.TableCell<Components.TableCellCheckbox, U> implements Aventus.DefaultComponent {
    @ViewElement()
	protected checkboxEl: Components.Checkbox;
    /**
     * @inheritdoc
     */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: Components.TableCellCheckbox<any> | undefined, rowData: U): void;
    /**
     *
     */
    protected changed(): void;
}
}

namespace Components {
class TableCellBoolean<U = any> extends Components.TableCell<___Core.Components.TableCellBooleanType, U> implements Aventus.DefaultComponent {
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: ___Core.Components.TableCellBooleanType | undefined, rowData: U): void;
}
}

namespace Components {
class TableCellAction<U = any> extends Components.TableCell<undefined, U> implements Aventus.DefaultComponent {
    /**
    * @inheritdoc
    */
    sortAsc(cell: this): number;
    /**
     * @inheritdoc
     */
    setContent(data: undefined, rowData: U): void;
}
}

namespace Components {
abstract class TableData<T extends AventusSharp.Data.Storable> extends Components.Table<T, Components.TableDataOptions<T>> implements Aventus.DefaultComponent {
    @Attribute()
	add_btn: boolean;
    protected application?: System.Application;
    protected ram?: Aventus.Ram<T>;
    abstract defineRAM(): Aventus.Ram<T>;
    abstract defineNewState(): Aventus.State;
    abstract defineEditState(data: T): Aventus.State;
    loadData(): any;
    protected onCreatedData(data: T): void;
    protected onUpdatedData(data: T): void;
    protected onDeletedData(data: T): void;
    newData(): Promise<void>;
    editData(data: T): Promise<void>;
    abstract defineDeleteMessage(data: T): string;
    deleteData(data: T): Promise<void>;
    protected normalizeSchemaCell(cellConfig: Components.TableSchema<T>): void;
    protected defaultOptions(): Components.TableDataOptions<T>;
    protected abstract configure(options: Components.TableDataOptions<T>): Components.TableDataOptions<T>;
    protected postCreation(): void;
    protected postDestruction(): void;
}
}

namespace Components {
class TableDataCellAction<U = any> extends Components.TableCellAction<U> implements Aventus.DefaultComponent {
    editData(): void;
    deleteData(): void;
}
}

namespace Components {
class TabHeader<T extends Components.Tab = Components.Tab> extends Aventus.WebComponent implements Aventus.DefaultComponent {
    @Attribute()
	active: boolean;
    @ViewElement()
	protected contentEl: HTMLDivElement;
    protected _tab: T;
    get tab(): T;
    protected tabs: Components.Tabs<T>;
    init(tab: T, tabs: Components.Tabs<T>): void;
    protected addPress(): void;
    protected postCreation(): void;
}
}

namespace App {
@Convertible()
class AppError extends Aventus.GenericError<typeof App.AppErrorCode> {
    static get Fullname(): string;
}
}

namespace Data {
@Convertible()
class Manifest extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    name: string;
    short_name: string;
    icons: Data.ManifestIcon[];
    theme_color: string;
    background_color: string;
    display: string;
    orientation: string;
    scope: string;
    start_url: string;
}
}

namespace Routes {
class CompanyRouter extends Aventus.HttpRoute {
    constructor(router?: Aventus.HttpRouter);
    GetMain(): Promise<AventusSharp.Tools.ResultWithError<Data.Company>>;
    Update(body: {
        item: Data.Company;
    } | FormData): Promise<AventusSharp.Tools.ResultWithError<Data.Company>>;
    ReadManifest(): Promise<AventusSharp.Tools.ResultWithError<Data.Manifest | undefined>>;
    SaveManifest(body: {
        manifest: Data.Manifest;
    } | FormData): Promise<AventusSharp.Tools.VoidWithError>;
}
}

namespace Errors {
@Convertible()
class DesktopError extends Aventus.GenericError<typeof Errors.DesktopErrorCode> {
    static get Fullname(): string;
}
}

namespace Errors {
@Convertible()
class StorageError extends Aventus.GenericError<typeof Errors.StorageErrorCode> {
    static get Fullname(): string;
}
}

namespace Errors {
@Convertible()
class ImageFileError extends Aventus.GenericError<typeof Errors.ImageFileErrorCode> {
    static get Fullname(): string;
}
}

namespace Tools {
@Convertible()
class ResultWithImageFileError<T> extends AventusSharp.Tools.ResultWithError<T, Errors.ImageFileError> {
    static get Fullname(): string;
}
}

namespace Tools {
@Convertible()
class VoidWithImageFileError extends AventusSharp.Tools.VoidWithError<Errors.ImageFileError> {
    static get Fullname(): string;
}
}

namespace Errors {
@Convertible()
class PdfError extends Aventus.GenericError<typeof Errors.PdfErrorCode> {
    static get Fullname(): string;
}
}

namespace Tools {
@Convertible()
class ResultWithPdfError<T> extends AventusSharp.Tools.ResultWithError<T, Errors.PdfError> {
    static get Fullname(): string;
}
}

namespace Tools {
@Convertible()
class VoidWithPdfError extends AventusSharp.Tools.VoidWithError<Errors.PdfError> {
    static get Fullname(): string;
}
}

namespace Websocket.Events.ApplicationTestEvent {
@Convertible()
class Body extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    id: number;
    name: string;
}
}

namespace RAM {
class GroupRAM extends RAM.RamHttp<RAM.GroupExtended> implements Aventus.IRam {
    /**
     * Create a singleton to store data
     */
    static getInstance(): RAM.GroupRAM;
    /**
     * @inheritdoc
     */
    defineIndexKey(): keyof RAM.GroupExtended;
    /**
     * @inheritdoc
     */
    protected getTypeForData(objJson: Aventus.KeysObject<RAM.GroupExtended> | RAM.GroupExtended): new () => RAM.GroupExtended;
    /**
     * @inheritdoc
     */
    defineRoutes(): any;
    /**
     * Mixin pattern to add methods
     */
    private addUserMethod;
}
}

	}

    var userIdConnected: number;
    var coreVersion: number;
    /** global version number definition for all apps but set inside each app */
    var $version:number;
    /** Ask if the user is allowed */
    function can(query: Core.Permissions.IPermissionQuery): Promise<boolean>;

}
declare module ___Core {
namespace RAM {
interface GroupMethod {
}
}

namespace Components {
type TableCellBooleanType = boolean | (1 | 0) | ('true' | 'false');
}

namespace Components {
type MenuPositionInfo = {
    rect: DOMRect;
    maxHeight: number;
    maxWidth: number;
    menuHeight: number;
    menuWidth: number;
};
}

namespace Components {
type MenuPositionResult = {
    top: number | null;
    left: number | null;
    bottom: number | null;
    right: number | null;
    maxHeight: number;
    maxWidth: number;
    found: boolean;
};
}

namespace Components {
type IconType = MaterialIcon.IconType;
}

namespace Lib {
type BeforeInstallPromptEvent = {
    prompt: () => void;
    userChoice: Promise<{
        outcome: "accepted" | "dismissed";
    }>;
};
}

namespace Lib {
type AppIconCst = (new (...args: {}) => globalThis.Core.System.AppIcon);
}

namespace RAM {
type RamWithTransactionInjector<T extends AventusSharp.Data.Storable> = {
    records: Map<number, Aventus.RamItem<T>>;
    beforeRecordSet: (item: Aventus.RamItem<T>) => Promise<void>;
    beforeRecordDelete: (item: Aventus.RamItem<T>) => Promise<void>;
    addOrUpdateData: (item: Aventus.KeysObject<T>, result: Aventus.ResultWithError<Aventus.RamItem<T>>) => Promise<void>;
    publish(type: 'created' | 'updated' | 'deleted', data: Aventus.RamItem<T>): void;
};
}

namespace RAM {
interface UserMethod {
}
}

namespace App {
@Internal()
@Convertible()
class AppConfiguration extends AventusSharp.Data.SharpClass {
    static get Fullname(): string;
    appsInstalled: string[];
    allApps: Map<string, string[]>;
}
}

namespace State {
@Internal()
class ApplicationEmptyState extends State.ApplicationState implements Aventus.IState {
    private localName;
    constructor(stateName: string);
    protected syncFieldNoCheck(addField: (field: string) => void): void;
    /**
     * @inheritdoc
     */
    get name(): string;
}
}

namespace System {
class ApplicationSizeStorage {
    private memoryPrefered;
    private memory;
    private keyPrefered;
    private keySave;
    private get storage();
    constructor();
    getInfoPrefered(appName: string): globalThis.Core.System.ApplicationPositionSize | undefined;
    setInfoPrefered(appName: string, value: globalThis.Core.System.ApplicationPositionSize): void;
    getInfo(desktopId: number, appName: string, appNumber: number): globalThis.Core.System.ApplicationPositionSize | undefined;
    setInfo(desktopId: number, appName: string, appNumber: number, value: globalThis.Core.System.ApplicationPositionSize): void;
    removeInfo(desktopId: number, appName: string, appNumber: number): void;
    clearAll(): void;
    private getKey;
}
}

namespace System {
type ApplicationSidnavRouteOptions = {
    route: string;
    frame: new () => globalThis.Core.System.FrameNoScroll;
    name: string;
    icon?: string;
    miIcon?: MaterialIcon.IconType;
    activeRoute?: string;
    allowTrigger?: (link: globalThis.Core.Components.Link) => boolean;
};
}
}//#endregion js def //
//#region js src //
{"namespace":"Core","available":[{"code":"Lib.Validator=class Validator {\n    static email(txt) {\n        if (!txt)\n            return false;\n        return txt.match(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}\\b/) != null;\n    }\n    static phone(txt) {\n        if (!txt)\n            return false;\n        return txt.match(/(\\+?\\d{1,3})?([\\.-\\/]?| +?)\\(?\\d{2,4}\\)?([\\.-\\/]?| +?)?\\d{2,4}([\\.-\\/]?| +?)?\\d{2,4}([\\.-\\/]?| +?)?\\d{0,4}/) != null;\n    }\n}\nLib.Validator.Namespace=`Core.Lib`;\r\n_.Lib.Validator=Lib.Validator;\r\n","dependances":[],"fullName":"Core.Lib.Validator","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.Time=class Time {\n    static cbEachMinute = new Map();\n    static cbEachMinuteFirst = new Map();\n    static runEachMinute(cb, runOnCall = true) {\n        if (this.cbEachMinute.has(cb))\n            return;\n        let missingSec = 60 - new Date().getSeconds();\n        if (runOnCall) {\n            cb();\n        }\n        if (missingSec == 0) {\n            const nb = setInterval(() => {\n                cb();\n            }, 1000 * 60);\n            this.cbEachMinute.set(cb, nb);\n        }\n        else {\n            const nb = setTimeout(() => {\n                this.cbEachMinuteFirst.delete(cb);\n                cb();\n                const nb2 = setInterval(() => {\n                    cb();\n                }, 1000 * 60);\n                this.cbEachMinute.set(cb, nb2);\n            }, missingSec * 1000);\n            this.cbEachMinuteFirst.set(cb, nb);\n        }\n    }\n    static stopRunEachMinute(cb) {\n        const timeoutValue = this.cbEachMinuteFirst.get(cb);\n        if (timeoutValue) {\n            clearTimeout(timeoutValue);\n            this.cbEachMinuteFirst.delete(cb);\n        }\n        const intervalValue = this.cbEachMinute.get(cb);\n        if (intervalValue) {\n            clearTimeout(intervalValue);\n            this.cbEachMinute.delete(cb);\n        }\n    }\n}\nLib.Time.Namespace=`Core.Lib`;\r\n_.Lib.Time=Lib.Time;\r\n","dependances":[{"fullName":"Map","isStrong":true},{"fullName":"Function","isStrong":true},{"fullName":"Date","isStrong":false}],"fullName":"Core.Lib.Time","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"let Colors= {\n    'green': 'green',\n    'success': 'success',\n    'red': 'red',\n    'error': 'error',\n    'orange': 'orange',\n    'warning': 'warning',\n    'blue': 'blue',\n    'information': 'information',\n    'primary': 'primary',\n    'secondary': 'secondary',\n};\n_.Colors=Colors;\r\n","dependances":[],"fullName":"Core.Colors","required":false,"type":5,"isExported":true,"convertibleName":""},{"code":"Lib.StringTools=class StringTools {\n    static removeAccents(value) {\n        return value\n            .replace(/[áàãâä]/gi, \"a\")\n            .replace(/[éè¨ê]/gi, \"e\")\n            .replace(/[íìïî]/gi, \"i\")\n            .replace(/[óòöôõ]/gi, \"o\")\n            .replace(/[úùüû]/gi, \"u\")\n            .replace(/[ç]/gi, \"c\")\n            .replace(/[ñ]/gi, \"n\")\n            .replace(/[^a-zA-Z0-9]/g, \" \");\n    }\n    static contains(src, search) {\n        if (src === undefined)\n            return false;\n        const _src = this.removeAccents((src + '').toLowerCase());\n        const _search = this.removeAccents((search + '').toLowerCase());\n        return _src.includes(_search);\n    }\n    static firstLetterUpper(txt) {\n        return txt.slice(0, 1).toUpperCase() + txt.slice(1);\n    }\n}\nLib.StringTools.Namespace=`Core.Lib`;\r\n_.Lib.StringTools=Lib.StringTools;\r\n","dependances":[],"fullName":"Core.Lib.StringTools","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.NumberTools=class NumberTools {\n    static pretty(nb) {\n        if (nb < 10) {\n            return '0' + nb;\n        }\n        return nb + '';\n    }\n}\nLib.NumberTools.Namespace=`Core.Lib`;\r\n_.Lib.NumberTools=Lib.NumberTools;\r\n","dependances":[],"fullName":"Core.Lib.NumberTools","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Websocket.Events.ApplicationTestEvent2=class ApplicationTestEvent2 extends AventusSharp.WebSocket.WsEvent {\n    /**\n     * @inheritdoc\n     */\n    path() {\n        return `${this.getPrefix()}/application/test/2`;\n    }\n}\nWebsocket.Events.ApplicationTestEvent2.Namespace=`Core.Websocket.Events`;\r\n_.Websocket.Events.ApplicationTestEvent2=Websocket.Events.ApplicationTestEvent2;\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.WsEvent","isStrong":true}],"fullName":"Core.Websocket.Events.ApplicationTestEvent2","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"(function (PdfErrorCode) {\n    PdfErrorCode[PdfErrorCode[\"UnknowError\"] = 0] = \"UnknowError\";\n    PdfErrorCode[PdfErrorCode[\"NoNameProvided\"] = 1] = \"NoNameProvided\";\n})(Errors.PdfErrorCode || (Errors.PdfErrorCode = {}));\n_.Errors.PdfErrorCode=Errors.PdfErrorCode;\r\n","dependances":[],"fullName":"Core.Errors.PdfErrorCode","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"(function (ImageFileErrorCode) {\n    ImageFileErrorCode[ImageFileErrorCode[\"UnknowError\"] = 0] = \"UnknowError\";\n    ImageFileErrorCode[ImageFileErrorCode[\"NotValidImage\"] = 1] = \"NotValidImage\";\n    ImageFileErrorCode[ImageFileErrorCode[\"FileNotSvg\"] = 2] = \"FileNotSvg\";\n    ImageFileErrorCode[ImageFileErrorCode[\"NoSize\"] = 3] = \"NoSize\";\n})(Errors.ImageFileErrorCode || (Errors.ImageFileErrorCode = {}));\n_.Errors.ImageFileErrorCode=Errors.ImageFileErrorCode;\r\n","dependances":[],"fullName":"Core.Errors.ImageFileErrorCode","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"(function (StorageErrorCode) {\n    StorageErrorCode[StorageErrorCode[\"UnknowError\"] = 0] = \"UnknowError\";\n    StorageErrorCode[StorageErrorCode[\"NotAllowed\"] = 1] = \"NotAllowed\";\n    StorageErrorCode[StorageErrorCode[\"NotFound\"] = 2] = \"NotFound\";\n})(Errors.StorageErrorCode || (Errors.StorageErrorCode = {}));\n_.Errors.StorageErrorCode=Errors.StorageErrorCode;\r\n","dependances":[],"fullName":"Core.Errors.StorageErrorCode","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"(function (IsAllowedAction) {\n    IsAllowedAction[IsAllowedAction[\"Read\"] = 0] = \"Read\";\n    IsAllowedAction[IsAllowedAction[\"Write\"] = 1] = \"Write\";\n    IsAllowedAction[IsAllowedAction[\"Delete\"] = 2] = \"Delete\";\n})(Logic.FileSystem.IsAllowedAction || (Logic.FileSystem.IsAllowedAction = {}));\n_.Logic.FileSystem.IsAllowedAction=Logic.FileSystem.IsAllowedAction;\r\n","dependances":[],"fullName":"Core.Logic.FileSystem.IsAllowedAction","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Logic.FileSystem.FileDetails=class FileDetails extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Logic.FileSystem.FileDetails, Core\"; }\n    Name;\n    Size;\n    LastEdit;\n    Extension;\n    IsDirectory;\n}\nLogic.FileSystem.FileDetails.Namespace=`Core.Logic.FileSystem`;\r\nLogic.FileSystem.FileDetails.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"Name\":\"string\",\"Size\":\"number\",\"LastEdit\":\"Date\",\"Extension\":\"string\",\"IsDirectory\":\"boolean\"};\r\nAventus.Converter.register(Logic.FileSystem.FileDetails.Fullname, Logic.FileSystem.FileDetails);\r\n_.Logic.FileSystem.FileDetails=Logic.FileSystem.FileDetails;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Date","isStrong":false}],"fullName":"Core.Logic.FileSystem.FileDetails","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"(function (DesktopErrorCode) {\n    DesktopErrorCode[DesktopErrorCode[\"NoDefaultDesktop\"] = 0] = \"NoDefaultDesktop\";\n})(Errors.DesktopErrorCode || (Errors.DesktopErrorCode = {}));\n_.Errors.DesktopErrorCode=Errors.DesktopErrorCode;\r\n","dependances":[],"fullName":"Core.Errors.DesktopErrorCode","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Data.SystemInfo=class SystemInfo extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Data.SystemInfo, Core\"; }\n    TimeZone;\n    Version;\n    CompilationDate;\n}\nData.SystemInfo.Namespace=`Core.Data`;\r\nData.SystemInfo.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"TimeZone\":\"string\",\"Version\":\"string\",\"CompilationDate\":\"string\"};\r\nAventus.Converter.register(Data.SystemInfo.Fullname, Data.SystemInfo);\r\n_.Data.SystemInfo=Data.SystemInfo;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Version","isStrong":false}],"fullName":"Core.Data.SystemInfo","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.Settings=class Settings extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.Settings, Core\"; }\n    Key;\n    Value;\n    UserId = undefined;\n}\nData.Settings.Namespace=`Core.Data`;\r\nData.Settings.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Key\":\"string\",\"Value\":\"string\",\"UserId\":\"number\"};\r\nAventus.Converter.register(Data.Settings.Fullname, Data.Settings);\r\n_.Data.Settings=Data.Settings;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Key","isStrong":false}],"fullName":"Core.Data.Settings","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.ManifestIcon=class ManifestIcon extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Data.ManifestIcon, Core\"; }\n    src;\n    type;\n    sizes;\n    purpose = undefined;\n}\nData.ManifestIcon.Namespace=`Core.Data`;\r\nData.ManifestIcon.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"src\":\"string\",\"type\":\"string\",\"sizes\":\"string\",\"purpose\":\"string\"};\r\nAventus.Converter.register(Data.ManifestIcon.Fullname, Data.ManifestIcon);\r\n_.Data.ManifestIcon=Data.ManifestIcon;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Data.ManifestIcon","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"(function (AppErrorCode) {\n    AppErrorCode[AppErrorCode[\"AppFileNotFound\"] = 0] = \"AppFileNotFound\";\n    AppErrorCode[AppErrorCode[\"MoreThanOneAppFileFound\"] = 1] = \"MoreThanOneAppFileFound\";\n    AppErrorCode[AppErrorCode[\"NoAppFileFound\"] = 2] = \"NoAppFileFound\";\n    AppErrorCode[AppErrorCode[\"NoIconFileFound\"] = 3] = \"NoIconFileFound\";\n    AppErrorCode[AppErrorCode[\"WrongVersionFormat\"] = 4] = \"WrongVersionFormat\";\n    AppErrorCode[AppErrorCode[\"NoName\"] = 5] = \"NoName\";\n    AppErrorCode[AppErrorCode[\"UnknowError\"] = 6] = \"UnknowError\";\n    AppErrorCode[AppErrorCode[\"NotZipFile\"] = 7] = \"NotZipFile\";\n    AppErrorCode[AppErrorCode[\"NotInManagement\"] = 8] = \"NotInManagement\";\n})(App.AppErrorCode || (App.AppErrorCode = {}));\n_.App.AppErrorCode=App.AppErrorCode;\r\n","dependances":[],"fullName":"Core.App.AppErrorCode","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Components.UserProfilPicture = class UserProfilPicture extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"uri\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'uri'() { return this.getStringProp('uri') }\n    set 'uri'(val) { this.setStringAttr('uri', val) }\r    static __style = `:host{border-radius:var(--border-radius-round);flex-shrink:0;height:100px;overflow:hidden;width:100px}:host rk-img{height:100%;width:100%}:host .bg-default{align-items:center;background-color:var(--secondary-color);border-radius:var(--border-radius-round);box-shadow:var(--elevation-4);color:var(--text-color-reverse);display:flex;flex-shrink:0;height:100%;justify-content:center;width:100%}:host .bg-default svg{fill:var(--text-color-reverse);height:70%;width:70%}`;\n    __getStatic() {\n        return UserProfilPicture;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(UserProfilPicture.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<template _id=\"userprofilpicture_0\"></template>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r    <rk-img _id=\"userprofilpicture_1\"></rk-img>\r`);\rtempl0.setActions({\n  \"content\": {\n    \"userprofilpicture_1°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__4c9a0566bd04f8ca158657ccaa880d94method1())}`,\n      \"once\": true\n    }\n  }\n});\rconst templ1 = new Aventus.Template(this);\rtempl1.setTemplate(`\r    <div class=\"bg-default\">\r        <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 -960 960 960\" width=\"24\"><path d=\"M480-480q-66 0-113-47t-47-113q0-66 47-113t113-47q66 0 113 47t47 113q0 66-47 113t-113 47ZM160-160v-112q0-34 17.5-62.5T224-378q62-31 126-46.5T480-440q66 0 130 15.5T736-378q29 15 46.5 43.5T800-272v112H160Zm80-80h480v-32q0-11-5.5-20T700-306q-54-27-109-40.5T480-360q-56 0-111 13.5T260-306q-9 5-14.5 14t-5.5 20v32Zm240-320q33 0 56.5-23.5T560-640q0-33-23.5-56.5T480-720q-33 0-56.5 23.5T400-640q0 33 23.5 56.5T480-560Zm0-80Zm0 400Z\"></path></svg>\r    </div>\r`);\rthis.__getStatic().__template.addIf({\n                    anchorId: 'userprofilpicture_0',\n                    parts: [{once: true,\n                    condition: (c) => c.comp.__4c9a0566bd04f8ca158657ccaa880d94method0(),\n                    template: templ0\n                },{once: true,\n                    condition: (c) => true,\n                    template: templ1\n                }]\n            });\r }\n    getClassName() {\n        return \"UserProfilPicture\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('uri')){ this['uri'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('uri');\r }\n    __4c9a0566bd04f8ca158657ccaa880d94method1() {\n        return this.uri;\n    }\n    __4c9a0566bd04f8ca158657ccaa880d94method0() {\n        return this.uri;\n    }\n}\nComponents.UserProfilPicture.Namespace=`Core.Components`;\nComponents.UserProfilPicture.Tag=`rk-user-profil-picture`;\n_.Components.UserProfilPicture=Components.UserProfilPicture;\nif(!window.customElements.get('rk-user-profil-picture')){window.customElements.define('rk-user-profil-picture', Components.UserProfilPicture);Aventus.WebComponentInstance.registerDefinition(Components.UserProfilPicture);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.UserProfilPicture","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-user-profil-picture"},{"code":"Components.Tab = class Tab extends Aventus.WebComponent {\n    get 'label'() { return this.getStringAttr('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\r    get headerContent() {\n        let elements = this.getElementsInSlot(\"header\");\n        return elements;\n    }\n    static __style = ``;\n    __getStatic() {\n        return Tab;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Tab.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>`,'header':`<slot name=\"header\"></slot>` }, \n        blocks: { 'default':`<slot></slot><div class=\"slot-header\">\r    <slot name=\"header\"></slot>\r</div>` }\n    });\n}\n    getClassName() {\n        return \"Tab\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('label')){ this['label'] = \"\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('headerContent');\rthis.__upgradeProperty('label');\r }\n}\nComponents.Tab.Namespace=`Core.Components`;\nComponents.Tab.Tag=`rk-tab`;\n_.Components.Tab=Components.Tab;\nif(!window.customElements.get('rk-tab')){window.customElements.define('rk-tab', Components.Tab);Aventus.WebComponentInstance.registerDefinition(Components.Tab);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"HTMLElement","isStrong":false}],"fullName":"Core.Components.Tab","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-tab"},{"code":"Components.Separator = class Separator extends Aventus.WebComponent {\n    static __style = `:host{--_separator-color: var(--separator-color, var(--text-color))}:host{background:linear-gradient(90deg, transparent 0%, var(--_separator-color) 50%, transparent 100%);height:1px;margin:20px auto;width:100%;display:flex}`;\n    __getStatic() {\n        return Separator;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Separator.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Separator\";\n    }\n}\nComponents.Separator.Namespace=`Core.Components`;\nComponents.Separator.Tag=`rk-separator`;\n_.Components.Separator=Components.Separator;\nif(!window.customElements.get('rk-separator')){window.customElements.define('rk-separator', Components.Separator);Aventus.WebComponentInstance.registerDefinition(Components.Separator);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.Separator","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-separator"},{"code":"Components.Row = class Row extends Aventus.WebComponent {\n    static __style = `:host{display:flex;width:100%;flex-wrap:wrap;container-type:inline-size}`;\n    __getStatic() {\n        return Row;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Row.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Row\";\n    }\n}\nComponents.Row.Namespace=`Core.Components`;\nComponents.Row.Tag=`rk-row`;\n_.Components.Row=Components.Row;\nif(!window.customElements.get('rk-row')){window.customElements.define('rk-row', Components.Row);Aventus.WebComponentInstance.registerDefinition(Components.Row);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.Row","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-row"},{"code":"Components.MenuSeparator = class MenuSeparator extends Aventus.WebComponent {\n    static __style = `:host{margin:5px 0px;background-color:var(--text-color);height:1px}`;\n    __getStatic() {\n        return MenuSeparator;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(MenuSeparator.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`` }\n    });\n}\n    getClassName() {\n        return \"MenuSeparator\";\n    }\n}\nComponents.MenuSeparator.Namespace=`Core.Components`;\nComponents.MenuSeparator.Tag=`rk-menu-separator`;\n_.Components.MenuSeparator=Components.MenuSeparator;\nif(!window.customElements.get('rk-menu-separator')){window.customElements.define('rk-menu-separator', Components.MenuSeparator);Aventus.WebComponentInstance.registerDefinition(Components.MenuSeparator);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.MenuSeparator","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-menu-separator"},{"code":"Components.MenuItem = class MenuItem extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"icon\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\r    static __style = `:host{align-items:center;border-radius:var(--border-radius-sm);cursor:pointer;display:flex;font-size:var(--font-size);margin:0 5px;padding:5px 10px;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:background-color .2s linear}:host .title{margin-left:30px}:host .icon{display:none;font-size:var(--font-size-sm);margin-right:10px;width:20px}:host([icon]) .title{margin-left:0px}:host([icon]) .icon{display:inline-block}@media screen and (min-width: 1225px){:host{font-size:var(--font-size)}:host .icon{font-size:var(--font-size)}:host(:hover){background-color:var(--darker)}}`;\n    __getStatic() {\n        return MenuItem;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(MenuItem.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<rk-img class=\"icon\" _id=\"menuitem_0\"></rk-img><div class=\"title\">\r    <slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"menuitem_0°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__d02c0c7e8b84b9fd639369f589dd9b6fmethod0())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"MenuItem\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('icon')){ this['icon'] = \"\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('icon');\r }\n    __d02c0c7e8b84b9fd639369f589dd9b6fmethod0() {\n        return this.icon;\n    }\n}\nComponents.MenuItem.Namespace=`Core.Components`;\nComponents.MenuItem.Tag=`rk-menu-item`;\n_.Components.MenuItem=Components.MenuItem;\nif(!window.customElements.get('rk-menu-item')){window.customElements.define('rk-menu-item', Components.MenuItem);Aventus.WebComponentInstance.registerDefinition(Components.MenuItem);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.MenuItem","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-menu-item"},{"code":"(function (MenuState) {\n    MenuState[MenuState[\"Opening\"] = 0] = \"Opening\";\n    MenuState[MenuState[\"Open\"] = 1] = \"Open\";\n    MenuState[MenuState[\"Closing\"] = 2] = \"Closing\";\n    MenuState[MenuState[\"Close\"] = 3] = \"Close\";\n})(Components.MenuState || (Components.MenuState = {}));\n_.Components.MenuState=Components.MenuState;\r\n","dependances":[],"fullName":"Core.Components.MenuState","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Components.Col = class Col extends Aventus.WebComponent {\n    get 'size'() { return this.getNumberAttr('size') }\n    set 'size'(val) { this.setNumberAttr('size', val) }\rget 'size_xs'() { return this.getNumberAttr('size_xs') }\n    set 'size_xs'(val) { this.setNumberAttr('size_xs', val) }\rget 'size_sm'() { return this.getNumberAttr('size_sm') }\n    set 'size_sm'(val) { this.setNumberAttr('size_sm', val) }\rget 'size_md'() { return this.getNumberAttr('size_md') }\n    set 'size_md'(val) { this.setNumberAttr('size_md', val) }\rget 'size_lg'() { return this.getNumberAttr('size_lg') }\n    set 'size_lg'(val) { this.setNumberAttr('size_lg', val) }\rget 'size_xl'() { return this.getNumberAttr('size_xl') }\n    set 'size_xl'(val) { this.setNumberAttr('size_xl', val) }\rget 'offset'() { return this.getNumberAttr('offset') }\n    set 'offset'(val) { this.setNumberAttr('offset', val) }\rget 'offset_xs'() { return this.getNumberAttr('offset_xs') }\n    set 'offset_xs'(val) { this.setNumberAttr('offset_xs', val) }\rget 'offset_sm'() { return this.getNumberAttr('offset_sm') }\n    set 'offset_sm'(val) { this.setNumberAttr('offset_sm', val) }\rget 'offset_md'() { return this.getNumberAttr('offset_md') }\n    set 'offset_md'(val) { this.setNumberAttr('offset_md', val) }\rget 'offset_lg'() { return this.getNumberAttr('offset_lg') }\n    set 'offset_lg'(val) { this.setNumberAttr('offset_lg', val) }\rget 'offset_xl'() { return this.getNumberAttr('offset_xl') }\n    set 'offset_xl'(val) { this.setNumberAttr('offset_xl', val) }\rget 'offset_right'() { return this.getNumberAttr('offset_right') }\n    set 'offset_right'(val) { this.setNumberAttr('offset_right', val) }\rget 'offset_right_xs'() { return this.getNumberAttr('offset_right_xs') }\n    set 'offset_right_xs'(val) { this.setNumberAttr('offset_right_xs', val) }\rget 'offset_right_sm'() { return this.getNumberAttr('offset_right_sm') }\n    set 'offset_right_sm'(val) { this.setNumberAttr('offset_right_sm', val) }\rget 'offset_right_md'() { return this.getNumberAttr('offset_right_md') }\n    set 'offset_right_md'(val) { this.setNumberAttr('offset_right_md', val) }\rget 'offset_right_lg'() { return this.getNumberAttr('offset_right_lg') }\n    set 'offset_right_lg'(val) { this.setNumberAttr('offset_right_lg', val) }\rget 'offset_right_xl'() { return this.getNumberAttr('offset_right_xl') }\n    set 'offset_right_xl'(val) { this.setNumberAttr('offset_right_xl', val) }\rget 'center'() { return this.getBoolAttr('center') }\n    set 'center'(val) { this.setBoolAttr('center', val) }\r    static __style = `:host{--internal-col-padding:var(--col-padding, 8px)}:host{padding:var(--internal-col-padding)}:host([center]){justify-content:center}:host([size=\"0\"]){display:flex;width:0%}:host([offset=\"0\"]){margin-left:0%}:host([offset_right=\"0\"]){margin-right:0%}:host([size=\"1\"]){display:flex;width:8.3333333333%}:host([offset=\"1\"]){margin-left:8.3333333333%}:host([offset_right=\"1\"]){margin-right:8.3333333333%}:host([size=\"2\"]){display:flex;width:16.6666666667%}:host([offset=\"2\"]){margin-left:16.6666666667%}:host([offset_right=\"2\"]){margin-right:16.6666666667%}:host([size=\"3\"]){display:flex;width:25%}:host([offset=\"3\"]){margin-left:25%}:host([offset_right=\"3\"]){margin-right:25%}:host([size=\"4\"]){display:flex;width:33.3333333333%}:host([offset=\"4\"]){margin-left:33.3333333333%}:host([offset_right=\"4\"]){margin-right:33.3333333333%}:host([size=\"5\"]){display:flex;width:41.6666666667%}:host([offset=\"5\"]){margin-left:41.6666666667%}:host([offset_right=\"5\"]){margin-right:41.6666666667%}:host([size=\"6\"]){display:flex;width:50%}:host([offset=\"6\"]){margin-left:50%}:host([offset_right=\"6\"]){margin-right:50%}:host([size=\"7\"]){display:flex;width:58.3333333333%}:host([offset=\"7\"]){margin-left:58.3333333333%}:host([offset_right=\"7\"]){margin-right:58.3333333333%}:host([size=\"8\"]){display:flex;width:66.6666666667%}:host([offset=\"8\"]){margin-left:66.6666666667%}:host([offset_right=\"8\"]){margin-right:66.6666666667%}:host([size=\"9\"]){display:flex;width:75%}:host([offset=\"9\"]){margin-left:75%}:host([offset_right=\"9\"]){margin-right:75%}:host([size=\"10\"]){display:flex;width:83.3333333333%}:host([offset=\"10\"]){margin-left:83.3333333333%}:host([offset_right=\"10\"]){margin-right:83.3333333333%}:host([size=\"11\"]){display:flex;width:91.6666666667%}:host([offset=\"11\"]){margin-left:91.6666666667%}:host([offset_right=\"11\"]){margin-right:91.6666666667%}:host([size=\"12\"]){display:flex;width:100%}:host([offset=\"12\"]){margin-left:100%}:host([offset_right=\"12\"]){margin-right:100%}@container application (min-width: 300px){:host([size_xs=\"0\"]){display:flex;width:0%}:host([offset_xs=\"0\"]){margin-left:0%}:host([offset_right_xs=\"0\"]){margin-right:0%}:host([size_xs=\"0\"]){display:none}:host([size_xs=\"1\"]){display:flex;width:8.3333333333%}:host([offset_xs=\"1\"]){margin-left:8.3333333333%}:host([offset_right_xs=\"1\"]){margin-right:8.3333333333%}:host([size_xs=\"2\"]){display:flex;width:16.6666666667%}:host([offset_xs=\"2\"]){margin-left:16.6666666667%}:host([offset_right_xs=\"2\"]){margin-right:16.6666666667%}:host([size_xs=\"3\"]){display:flex;width:25%}:host([offset_xs=\"3\"]){margin-left:25%}:host([offset_right_xs=\"3\"]){margin-right:25%}:host([size_xs=\"4\"]){display:flex;width:33.3333333333%}:host([offset_xs=\"4\"]){margin-left:33.3333333333%}:host([offset_right_xs=\"4\"]){margin-right:33.3333333333%}:host([size_xs=\"5\"]){display:flex;width:41.6666666667%}:host([offset_xs=\"5\"]){margin-left:41.6666666667%}:host([offset_right_xs=\"5\"]){margin-right:41.6666666667%}:host([size_xs=\"6\"]){display:flex;width:50%}:host([offset_xs=\"6\"]){margin-left:50%}:host([offset_right_xs=\"6\"]){margin-right:50%}:host([size_xs=\"7\"]){display:flex;width:58.3333333333%}:host([offset_xs=\"7\"]){margin-left:58.3333333333%}:host([offset_right_xs=\"7\"]){margin-right:58.3333333333%}:host([size_xs=\"8\"]){display:flex;width:66.6666666667%}:host([offset_xs=\"8\"]){margin-left:66.6666666667%}:host([offset_right_xs=\"8\"]){margin-right:66.6666666667%}:host([size_xs=\"9\"]){display:flex;width:75%}:host([offset_xs=\"9\"]){margin-left:75%}:host([offset_right_xs=\"9\"]){margin-right:75%}:host([size_xs=\"10\"]){display:flex;width:83.3333333333%}:host([offset_xs=\"10\"]){margin-left:83.3333333333%}:host([offset_right_xs=\"10\"]){margin-right:83.3333333333%}:host([size_xs=\"11\"]){display:flex;width:91.6666666667%}:host([offset_xs=\"11\"]){margin-left:91.6666666667%}:host([offset_right_xs=\"11\"]){margin-right:91.6666666667%}:host([size_xs=\"12\"]){display:flex;width:100%}:host([offset_xs=\"12\"]){margin-left:100%}:host([offset_right_xs=\"12\"]){margin-right:100%}}@container application (min-width: 540px){:host([size_sm=\"0\"]){display:flex;width:0%}:host([offset_sm=\"0\"]){margin-left:0%}:host([offset_right_sm=\"0\"]){margin-right:0%}:host([size_sm=\"0\"]){display:none}:host([size_sm=\"1\"]){display:flex;width:8.3333333333%}:host([offset_sm=\"1\"]){margin-left:8.3333333333%}:host([offset_right_sm=\"1\"]){margin-right:8.3333333333%}:host([size_sm=\"2\"]){display:flex;width:16.6666666667%}:host([offset_sm=\"2\"]){margin-left:16.6666666667%}:host([offset_right_sm=\"2\"]){margin-right:16.6666666667%}:host([size_sm=\"3\"]){display:flex;width:25%}:host([offset_sm=\"3\"]){margin-left:25%}:host([offset_right_sm=\"3\"]){margin-right:25%}:host([size_sm=\"4\"]){display:flex;width:33.3333333333%}:host([offset_sm=\"4\"]){margin-left:33.3333333333%}:host([offset_right_sm=\"4\"]){margin-right:33.3333333333%}:host([size_sm=\"5\"]){display:flex;width:41.6666666667%}:host([offset_sm=\"5\"]){margin-left:41.6666666667%}:host([offset_right_sm=\"5\"]){margin-right:41.6666666667%}:host([size_sm=\"6\"]){display:flex;width:50%}:host([offset_sm=\"6\"]){margin-left:50%}:host([offset_right_sm=\"6\"]){margin-right:50%}:host([size_sm=\"7\"]){display:flex;width:58.3333333333%}:host([offset_sm=\"7\"]){margin-left:58.3333333333%}:host([offset_right_sm=\"7\"]){margin-right:58.3333333333%}:host([size_sm=\"8\"]){display:flex;width:66.6666666667%}:host([offset_sm=\"8\"]){margin-left:66.6666666667%}:host([offset_right_sm=\"8\"]){margin-right:66.6666666667%}:host([size_sm=\"9\"]){display:flex;width:75%}:host([offset_sm=\"9\"]){margin-left:75%}:host([offset_right_sm=\"9\"]){margin-right:75%}:host([size_sm=\"10\"]){display:flex;width:83.3333333333%}:host([offset_sm=\"10\"]){margin-left:83.3333333333%}:host([offset_right_sm=\"10\"]){margin-right:83.3333333333%}:host([size_sm=\"11\"]){display:flex;width:91.6666666667%}:host([offset_sm=\"11\"]){margin-left:91.6666666667%}:host([offset_right_sm=\"11\"]){margin-right:91.6666666667%}:host([size_sm=\"12\"]){display:flex;width:100%}:host([offset_sm=\"12\"]){margin-left:100%}:host([offset_right_sm=\"12\"]){margin-right:100%}}@container application (min-width: 720px){:host([size_md=\"0\"]){display:flex;width:0%}:host([offset_md=\"0\"]){margin-left:0%}:host([offset_right_md=\"0\"]){margin-right:0%}:host([size_md=\"0\"]){display:none}:host([size_md=\"1\"]){display:flex;width:8.3333333333%}:host([offset_md=\"1\"]){margin-left:8.3333333333%}:host([offset_right_md=\"1\"]){margin-right:8.3333333333%}:host([size_md=\"2\"]){display:flex;width:16.6666666667%}:host([offset_md=\"2\"]){margin-left:16.6666666667%}:host([offset_right_md=\"2\"]){margin-right:16.6666666667%}:host([size_md=\"3\"]){display:flex;width:25%}:host([offset_md=\"3\"]){margin-left:25%}:host([offset_right_md=\"3\"]){margin-right:25%}:host([size_md=\"4\"]){display:flex;width:33.3333333333%}:host([offset_md=\"4\"]){margin-left:33.3333333333%}:host([offset_right_md=\"4\"]){margin-right:33.3333333333%}:host([size_md=\"5\"]){display:flex;width:41.6666666667%}:host([offset_md=\"5\"]){margin-left:41.6666666667%}:host([offset_right_md=\"5\"]){margin-right:41.6666666667%}:host([size_md=\"6\"]){display:flex;width:50%}:host([offset_md=\"6\"]){margin-left:50%}:host([offset_right_md=\"6\"]){margin-right:50%}:host([size_md=\"7\"]){display:flex;width:58.3333333333%}:host([offset_md=\"7\"]){margin-left:58.3333333333%}:host([offset_right_md=\"7\"]){margin-right:58.3333333333%}:host([size_md=\"8\"]){display:flex;width:66.6666666667%}:host([offset_md=\"8\"]){margin-left:66.6666666667%}:host([offset_right_md=\"8\"]){margin-right:66.6666666667%}:host([size_md=\"9\"]){display:flex;width:75%}:host([offset_md=\"9\"]){margin-left:75%}:host([offset_right_md=\"9\"]){margin-right:75%}:host([size_md=\"10\"]){display:flex;width:83.3333333333%}:host([offset_md=\"10\"]){margin-left:83.3333333333%}:host([offset_right_md=\"10\"]){margin-right:83.3333333333%}:host([size_md=\"11\"]){display:flex;width:91.6666666667%}:host([offset_md=\"11\"]){margin-left:91.6666666667%}:host([offset_right_md=\"11\"]){margin-right:91.6666666667%}:host([size_md=\"12\"]){display:flex;width:100%}:host([offset_md=\"12\"]){margin-left:100%}:host([offset_right_md=\"12\"]){margin-right:100%}}@container application (min-width: 960px){:host([size_lg=\"0\"]){display:flex;width:0%}:host([offset_lg=\"0\"]){margin-left:0%}:host([offset_right_lg=\"0\"]){margin-right:0%}:host([size_lg=\"0\"]){display:none}:host([size_lg=\"1\"]){display:flex;width:8.3333333333%}:host([offset_lg=\"1\"]){margin-left:8.3333333333%}:host([offset_right_lg=\"1\"]){margin-right:8.3333333333%}:host([size_lg=\"2\"]){display:flex;width:16.6666666667%}:host([offset_lg=\"2\"]){margin-left:16.6666666667%}:host([offset_right_lg=\"2\"]){margin-right:16.6666666667%}:host([size_lg=\"3\"]){display:flex;width:25%}:host([offset_lg=\"3\"]){margin-left:25%}:host([offset_right_lg=\"3\"]){margin-right:25%}:host([size_lg=\"4\"]){display:flex;width:33.3333333333%}:host([offset_lg=\"4\"]){margin-left:33.3333333333%}:host([offset_right_lg=\"4\"]){margin-right:33.3333333333%}:host([size_lg=\"5\"]){display:flex;width:41.6666666667%}:host([offset_lg=\"5\"]){margin-left:41.6666666667%}:host([offset_right_lg=\"5\"]){margin-right:41.6666666667%}:host([size_lg=\"6\"]){display:flex;width:50%}:host([offset_lg=\"6\"]){margin-left:50%}:host([offset_right_lg=\"6\"]){margin-right:50%}:host([size_lg=\"7\"]){display:flex;width:58.3333333333%}:host([offset_lg=\"7\"]){margin-left:58.3333333333%}:host([offset_right_lg=\"7\"]){margin-right:58.3333333333%}:host([size_lg=\"8\"]){display:flex;width:66.6666666667%}:host([offset_lg=\"8\"]){margin-left:66.6666666667%}:host([offset_right_lg=\"8\"]){margin-right:66.6666666667%}:host([size_lg=\"9\"]){display:flex;width:75%}:host([offset_lg=\"9\"]){margin-left:75%}:host([offset_right_lg=\"9\"]){margin-right:75%}:host([size_lg=\"10\"]){display:flex;width:83.3333333333%}:host([offset_lg=\"10\"]){margin-left:83.3333333333%}:host([offset_right_lg=\"10\"]){margin-right:83.3333333333%}:host([size_lg=\"11\"]){display:flex;width:91.6666666667%}:host([offset_lg=\"11\"]){margin-left:91.6666666667%}:host([offset_right_lg=\"11\"]){margin-right:91.6666666667%}:host([size_lg=\"12\"]){display:flex;width:100%}:host([offset_lg=\"12\"]){margin-left:100%}:host([offset_right_lg=\"12\"]){margin-right:100%}}@container application (min-width: 1140px){:host([size_xl=\"0\"]){display:flex;width:0%}:host([offset_xl=\"0\"]){margin-left:0%}:host([offset_right_xl=\"0\"]){margin-right:0%}:host([size_xl=\"0\"]){display:none}:host([size_xl=\"1\"]){display:flex;width:8.3333333333%}:host([offset_xl=\"1\"]){margin-left:8.3333333333%}:host([offset_right_xl=\"1\"]){margin-right:8.3333333333%}:host([size_xl=\"2\"]){display:flex;width:16.6666666667%}:host([offset_xl=\"2\"]){margin-left:16.6666666667%}:host([offset_right_xl=\"2\"]){margin-right:16.6666666667%}:host([size_xl=\"3\"]){display:flex;width:25%}:host([offset_xl=\"3\"]){margin-left:25%}:host([offset_right_xl=\"3\"]){margin-right:25%}:host([size_xl=\"4\"]){display:flex;width:33.3333333333%}:host([offset_xl=\"4\"]){margin-left:33.3333333333%}:host([offset_right_xl=\"4\"]){margin-right:33.3333333333%}:host([size_xl=\"5\"]){display:flex;width:41.6666666667%}:host([offset_xl=\"5\"]){margin-left:41.6666666667%}:host([offset_right_xl=\"5\"]){margin-right:41.6666666667%}:host([size_xl=\"6\"]){display:flex;width:50%}:host([offset_xl=\"6\"]){margin-left:50%}:host([offset_right_xl=\"6\"]){margin-right:50%}:host([size_xl=\"7\"]){display:flex;width:58.3333333333%}:host([offset_xl=\"7\"]){margin-left:58.3333333333%}:host([offset_right_xl=\"7\"]){margin-right:58.3333333333%}:host([size_xl=\"8\"]){display:flex;width:66.6666666667%}:host([offset_xl=\"8\"]){margin-left:66.6666666667%}:host([offset_right_xl=\"8\"]){margin-right:66.6666666667%}:host([size_xl=\"9\"]){display:flex;width:75%}:host([offset_xl=\"9\"]){margin-left:75%}:host([offset_right_xl=\"9\"]){margin-right:75%}:host([size_xl=\"10\"]){display:flex;width:83.3333333333%}:host([offset_xl=\"10\"]){margin-left:83.3333333333%}:host([offset_right_xl=\"10\"]){margin-right:83.3333333333%}:host([size_xl=\"11\"]){display:flex;width:91.6666666667%}:host([offset_xl=\"11\"]){margin-left:91.6666666667%}:host([offset_right_xl=\"11\"]){margin-right:91.6666666667%}:host([size_xl=\"12\"]){display:flex;width:100%}:host([offset_xl=\"12\"]){margin-left:100%}:host([offset_right_xl=\"12\"]){margin-right:100%}}`;\n    __getStatic() {\n        return Col;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Col.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Col\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('size')){ this['size'] = undefined; }\rif(!this.hasAttribute('size_xs')){ this['size_xs'] = undefined; }\rif(!this.hasAttribute('size_sm')){ this['size_sm'] = undefined; }\rif(!this.hasAttribute('size_md')){ this['size_md'] = undefined; }\rif(!this.hasAttribute('size_lg')){ this['size_lg'] = undefined; }\rif(!this.hasAttribute('size_xl')){ this['size_xl'] = undefined; }\rif(!this.hasAttribute('offset')){ this['offset'] = undefined; }\rif(!this.hasAttribute('offset_xs')){ this['offset_xs'] = undefined; }\rif(!this.hasAttribute('offset_sm')){ this['offset_sm'] = undefined; }\rif(!this.hasAttribute('offset_md')){ this['offset_md'] = undefined; }\rif(!this.hasAttribute('offset_lg')){ this['offset_lg'] = undefined; }\rif(!this.hasAttribute('offset_xl')){ this['offset_xl'] = undefined; }\rif(!this.hasAttribute('offset_right')){ this['offset_right'] = undefined; }\rif(!this.hasAttribute('offset_right_xs')){ this['offset_right_xs'] = undefined; }\rif(!this.hasAttribute('offset_right_sm')){ this['offset_right_sm'] = undefined; }\rif(!this.hasAttribute('offset_right_md')){ this['offset_right_md'] = undefined; }\rif(!this.hasAttribute('offset_right_lg')){ this['offset_right_lg'] = undefined; }\rif(!this.hasAttribute('offset_right_xl')){ this['offset_right_xl'] = undefined; }\rif(!this.hasAttribute('center')) { this.attributeChangedCallback('center', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('size');\rthis.__upgradeProperty('size_xs');\rthis.__upgradeProperty('size_sm');\rthis.__upgradeProperty('size_md');\rthis.__upgradeProperty('size_lg');\rthis.__upgradeProperty('size_xl');\rthis.__upgradeProperty('offset');\rthis.__upgradeProperty('offset_xs');\rthis.__upgradeProperty('offset_sm');\rthis.__upgradeProperty('offset_md');\rthis.__upgradeProperty('offset_lg');\rthis.__upgradeProperty('offset_xl');\rthis.__upgradeProperty('offset_right');\rthis.__upgradeProperty('offset_right_xs');\rthis.__upgradeProperty('offset_right_sm');\rthis.__upgradeProperty('offset_right_md');\rthis.__upgradeProperty('offset_right_lg');\rthis.__upgradeProperty('offset_right_xl');\rthis.__upgradeProperty('center');\r }\n    __listBoolProps() { return [\"center\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n}\nComponents.Col.Namespace=`Core.Components`;\nComponents.Col.Tag=`rk-col`;\n_.Components.Col=Components.Col;\nif(!window.customElements.get('rk-col')){window.customElements.define('rk-col', Components.Col);Aventus.WebComponentInstance.registerDefinition(Components.Col);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false}],"fullName":"Core.Components.Col","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-col"},{"code":"Components.CardTitle = class CardTitle extends Aventus.WebComponent {\n    static __style = `:host{font-size:var(--font-size);height:22px;margin:0;margin-bottom:10px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;font-weight:bold}`;\n    __getStatic() {\n        return CardTitle;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(CardTitle.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"CardTitle\";\n    }\n}\nComponents.CardTitle.Namespace=`Core.Components`;\nComponents.CardTitle.Tag=`rk-card-title`;\n_.Components.CardTitle=Components.CardTitle;\nif(!window.customElements.get('rk-card-title')){window.customElements.define('rk-card-title', Components.CardTitle);Aventus.WebComponentInstance.registerDefinition(Components.CardTitle);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.CardTitle","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-card-title"},{"code":"Components.Card = class Card extends Aventus.WebComponent {\n    static __style = `:host{--internal-card-background-color: var(--card-background-color, white)}:host{background-color:var(--internal-card-background-color);border-color:rgba(47,43,61,.16);border-radius:var(--border-radius-sm);border-style:solid;border-width:0;box-shadow:var(--elevation-2);display:block;overflow:hidden;overflow-wrap:break-word;padding:24px;position:relative;text-decoration:none;transition-duration:.28s;transition-property:box-shadow,opacity;transition-timing-function:cubic-bezier(0.4, 0, 0.2, 1);width:100%;z-index:0}`;\n    __getStatic() {\n        return Card;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Card.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Card\";\n    }\n    postCreation() {\n        // container-name\n        this.style.container = 'card / inline-size';\n    }\n}\nComponents.Card.Namespace=`Core.Components`;\nComponents.Card.Tag=`rk-card`;\n_.Components.Card=Components.Card;\nif(!window.customElements.get('rk-card')){window.customElements.define('rk-card', Components.Card);Aventus.WebComponentInstance.registerDefinition(Components.Card);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.Card","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-card"},{"code":"Components.BoxContainer = class BoxContainer extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"space\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'space'() { return this.getNumberProp('space') }\n    set 'space'(val) { this.setNumberAttr('space', val) }\r    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"space\", ((target) => {\n    target.style.setProperty(\"--item-box-margin\", target.space + 'px');\n}));\r }\n    static __style = `:host{--_item-box-box-width: var(--item-box-box-width, auto);--_item-box-box-height: var(--item-box-box-height, 100%);--_item-box-box-padding: var(--item-box-box-padding, 0 10px);--_item-box-border-radius: var(--item-box-border-radius, 4px);--_item-box-border-color: var(--item-box-border-color, var(--secondary-color, #afafaf))}:host{align-items:center;box-sizing:border-box;display:flex;flex-direction:row;justify-content:center}:host ::slotted(*){border:1px solid var(--_item-box-border-color);border-radius:var(--border-radius-sm);width:var(--_item-box-box-width);max-height:var(--_item-box-box-height);max-width:var(--_item-box-box-width);padding:var(--_item-box-box-padding)}:host ::slotted(*:first-child){margin-left:0}:host ::slotted(*:last-child){margin-right:0}:host([space=\"0\"]){border:1px solid var(--_item-box-border-color);border-radius:var(--_item-box-border-radius)}:host([space=\"0\"]) ::slotted(*){border:none;border-radius:0px;border-right:1px solid var(--_item-box-border-color)}:host([space=\"0\"]) ::slotted(*:first-child){border-bottom-left-radius:var(--_item-box-border-radius);border-top-left-radius:var(--_item-box-border-radius)}:host([space=\"0\"]) ::slotted(*:last-child){border-bottom-right-radius:var(--_item-box-border-radius);border-right:none;border-top-right-radius:var(--_item-box-border-radius)}`;\n    __getStatic() {\n        return BoxContainer;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(BoxContainer.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"BoxContainer\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('space')){ this['space'] = 0; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('space');\r }\n}\nComponents.BoxContainer.Namespace=`Core.Components`;\nComponents.BoxContainer.Tag=`rk-box-container`;\n_.Components.BoxContainer=Components.BoxContainer;\nif(!window.customElements.get('rk-box-container')){window.customElements.define('rk-box-container', Components.BoxContainer);Aventus.WebComponentInstance.registerDefinition(Components.BoxContainer);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.BoxContainer","isStrong":false}],"fullName":"Core.Components.BoxContainer","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-box-container"},{"code":"Components.ItemBox = class ItemBox extends Aventus.WebComponent {\n    static __style = `:host{--_item-box-margin: var(--item-box-margin, 0)}:host{display:flex;height:100%;align-items:center;justify-content:center;flex-direction:row;box-sizing:border-box;overflow:hidden;margin-left:var(--_item-box-margin);margin-right:var(--_item-box-margin)}:host ::slotted(*){max-height:var(--_item-box-box-height);max-width:var(--_item-box-box-width)}`;\n    __getStatic() {\n        return ItemBox;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ItemBox.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"ItemBox\";\n    }\n}\nComponents.ItemBox.Namespace=`Core.Components`;\nComponents.ItemBox.Tag=`rk-item-box`;\n_.Components.ItemBox=Components.ItemBox;\nif(!window.customElements.get('rk-item-box')){window.customElements.define('rk-item-box', Components.ItemBox);Aventus.WebComponentInstance.registerDefinition(Components.ItemBox);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.ItemBox","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-item-box"},{"code":"Components.OptionsContainer = class OptionsContainer extends Aventus.WebComponent {\n    get 'open'() { return this.getBoolAttr('open') }\n    set 'open'(val) { this.setBoolAttr('open', val) }\r    select;\n    onOpen = new Aventus.Callback();\n    isAnimating = false;\n    static __style = `:host{--_options-container-background: var(--options-container-background, var(--form-element-background, white));--_options-container-border-radius: var(--options-container-border-radius, var(--form-element-border-radius, 0));--_options-container-box-shadow: var(--options-container-box-shadow, var(--elevation-2))}:host{background-color:var(--_options-container-background);border-radius:var(--_options-container-border-radius);box-shadow:var(--_options-container-box-shadow);display:grid;grid-template-rows:0fr;left:0;overflow:hidden;position:absolute;top:0;transition:.2s var(--bezier-curve) grid-template-rows;z-index:800}:host rk-scrollable .container{display:flex;flex-direction:column}:host([open]){grid-template-rows:1fr}`;\n    __getStatic() {\n        return OptionsContainer;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(OptionsContainer.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<rk-scrollable floating_scroll>\r    <div class=\"container\">\r        <slot></slot>\r    </div>\r</rk-scrollable>` }\n    });\n}\n    getClassName() {\n        return \"OptionsContainer\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('open')) { this.attributeChangedCallback('open', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('open');\r }\n    __listBoolProps() { return [\"open\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    init(select) {\n        this.select = select;\n    }\n    async show(container) {\n        if (!container) {\n            container = document.body;\n        }\n        let box = this.select.getBoundingClientRect();\n        let boxInput = this.select.inputEl.getBoundingClientRect();\n        let contBox = container.getBoundingClientRect();\n        let newTop = boxInput.top + boxInput.height + 2;\n        let maxHeight = contBox.height - newTop - 10;\n        this.style.width = box.width + 'px';\n        this.style.top = newTop + 'px';\n        this.style.left = box.left + 'px';\n        this.style.maxHeight = maxHeight + 'px';\n        container.appendChild(this);\n        await Aventus.sleep(10);\n        this.open = true;\n        this.onOpen.trigger([true]);\n    }\n    hide() {\n        this.open = false;\n        this.onOpen.trigger([false]);\n    }\n    addAnimationEnd() {\n        this.addEventListener(\"transitionstart\", (event) => {\n            this.isAnimating = true;\n        });\n        this.addEventListener(\"transitionend\", (event) => {\n            this.isAnimating = false;\n            if (!this.open) {\n                this.parentElement?.removeChild(this);\n            }\n        });\n    }\n    postCreation() {\n        this.addAnimationEnd();\n        this.setAttribute(\"tabindex\", \"-1\");\n    }\n}\nComponents.OptionsContainer.Namespace=`Core.Components`;\nComponents.OptionsContainer.Tag=`rk-options-container`;\n_.Components.OptionsContainer=Components.OptionsContainer;\nif(!window.customElements.get('rk-options-container')){window.customElements.define('rk-options-container', Components.OptionsContainer);Aventus.WebComponentInstance.registerDefinition(Components.OptionsContainer);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.GenericSelect","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"Aventus.sleep","isStrong":false},{"fullName":"Scrollable","isStrong":false}],"fullName":"Core.Components.OptionsContainer","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-options-container"},{"code":"Components.InputFile = class InputFile extends Aventus.WebComponent {\n    static __style = ``;\n    __getStatic() {\n        return InputFile;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(InputFile.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"InputFile\";\n    }\n}\nComponents.InputFile.Namespace=`Core.Components`;\nComponents.InputFile.Tag=`rk-input-file`;\n_.Components.InputFile=Components.InputFile;\nif(!window.customElements.get('rk-input-file')){window.customElements.define('rk-input-file', Components.InputFile);Aventus.WebComponentInstance.registerDefinition(Components.InputFile);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.InputFile","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-input-file"},{"code":"Components.Img = class Img extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"src\", \"mode\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'cache'() { return this.getBoolAttr('cache') }\n    set 'cache'(val) { this.setBoolAttr('cache', val) }\r    get 'src'() { return this.getStringProp('src') }\n    set 'src'(val) { this.setStringAttr('src', val) }\rget 'mode'() { return this.getStringProp('mode') }\n    set 'mode'(val) { this.setStringAttr('mode', val) }\r    isCalculing;\n    maxCalculateSize = 10;\n    ratio = 1;\n    resizeObserver;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"src\", ((target) => {\n    target.onSrcChanged();\n}));\rthis.__addPropertyActions(\"mode\", ((target) => {\n    if (target.src != \"\") {\n        target.calculateSize();\n    }\n}));\r }\n    static __style = `:host{--_img-color: var(--img-color);--_img-stroke-color: var(--img-stroke-color, var(--_img-color));--_img-fill-color: var(--img-fill-color, var(--_img-color));--_img-color-transition: var(--img-color-transition, none);--_img-stroke-width: var(--img-stroke-width, 1px)}:host{display:inline-block;font-size:0;overflow:hidden}:host *{box-sizing:border-box}:host img{opacity:0;transition:filter .3s linear}:host .svg{display:none;height:100%;width:100%}:host .svg svg{height:100%;width:100%}:host mi-icon{display:none;font-size:inherit;height:100%;width:100%}:host([src$=\".svg\"]) img{display:none}:host([src$=\".svg\"]) .svg{display:flex}:host([src$=\".svg\"]) .svg svg{fill:var(--_img-fill-color);stroke:var(--_img-stroke-color);stroke-width:var(--_img-stroke-width);transition:var(--_img-color-transition)}:host([src$=\".svg\"]) mi-icon{display:none}:host([src^=mi-]){font-size:inherit}:host([src^=mi-]) img{display:none}:host([src^=mi-]) .svg{display:none}:host([src^=mi-]) mi-icon{align-items:center;display:flex;justify-content:center}:host([display_bigger]) img{cursor:pointer}:host([display_bigger]) img:hover{filter:brightness(50%)}`;\n    __getStatic() {\n        return Img;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Img.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<img _id=\"img_0\" /><div class=\"svg\" _id=\"img_1\"></div><mi-icon _id=\"img_2\"></mi-icon>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"imgEl\",\n      \"ids\": [\n        \"img_0\"\n      ]\n    },\n    {\n      \"name\": \"svgEl\",\n      \"ids\": [\n        \"img_1\"\n      ]\n    },\n    {\n      \"name\": \"iconEl\",\n      \"ids\": [\n        \"img_2\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Img\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('cache')) { this.attributeChangedCallback('cache', false, false); }\rif(!this.hasAttribute('src')){ this['src'] = undefined; }\rif(!this.hasAttribute('mode')){ this['mode'] = \"contains\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('cache');\rthis.__upgradeProperty('src');\rthis.__upgradeProperty('mode');\r }\n    __listBoolProps() { return [\"cache\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    calculateSize(attempt = 0) {\n        if (this.isCalculing || !this.imgEl || !this.svgEl) {\n            return;\n        }\n        if (this.src == \"\") {\n            return;\n        }\n        this.isCalculing = true;\n        if (getComputedStyle(this).display == 'none') {\n            return;\n        }\n        if (attempt == this.maxCalculateSize) {\n            this.isCalculing = false;\n            return;\n        }\n        let element = this.imgEl;\n        if (this.src?.endsWith(\".svg\")) {\n            element = this.svgEl;\n        }\n        else if (this.src?.startsWith(\"mi-\")) {\n            element = this.iconEl;\n        }\n        this.style.width = '';\n        this.style.height = '';\n        element.style.width = '';\n        element.style.height = '';\n        if (element.offsetWidth == 0 && element.offsetHeight == 0) {\n            setTimeout(() => {\n                this.isCalculing = false;\n                this.calculateSize(attempt + 1);\n            }, 100);\n            return;\n        }\n        let style = getComputedStyle(this);\n        let addedY = Number(style.paddingTop.replace(\"px\", \"\")) + Number(style.paddingBottom.replace(\"px\", \"\")) + Number(style.borderTopWidth.replace(\"px\", \"\")) + Number(style.borderBottomWidth.replace(\"px\", \"\"));\n        let addedX = Number(style.paddingLeft.replace(\"px\", \"\")) + Number(style.paddingRight.replace(\"px\", \"\")) + Number(style.borderLeftWidth.replace(\"px\", \"\")) + Number(style.borderRightWidth.replace(\"px\", \"\"));\n        let availableHeight = this.offsetHeight - addedY;\n        let availableWidth = this.offsetWidth - addedX;\n        let sameWidth = (element.offsetWidth == availableWidth);\n        let sameHeight = (element.offsetHeight == availableHeight);\n        this.ratio = element.offsetWidth / element.offsetHeight;\n        if (sameWidth && !sameHeight) {\n            // height is set\n            element.style.width = (availableHeight * this.ratio) + 'px';\n            element.style.height = availableHeight + 'px';\n        }\n        else if (!sameWidth && sameHeight) {\n            // width is set\n            element.style.width = availableWidth + 'px';\n            element.style.height = (availableWidth / this.ratio) + 'px';\n        }\n        else if (!sameWidth && !sameHeight) {\n            if (this.mode == \"stretch\") {\n                element.style.width = '100%';\n                element.style.height = '100%';\n            }\n            else if (this.mode == \"contains\") {\n                // suppose this height is max\n                let newWidth = (availableHeight * this.ratio);\n                if (newWidth <= availableWidth) {\n                    //we can apply this value\n                    element.style.width = newWidth + 'px';\n                    element.style.height = availableHeight + 'px';\n                }\n                else {\n                    element.style.width = availableWidth + 'px';\n                    element.style.height = (availableWidth / this.ratio) + 'px';\n                }\n            }\n            else if (this.mode == \"cover\") {\n                // suppose this height is min\n                let newWidth = (availableHeight * this.ratio);\n                if (newWidth >= availableWidth) {\n                    //we can apply this value\n                    element.style.width = newWidth + 'px';\n                    element.style.height = availableHeight + 'px';\n                }\n                else {\n                    element.style.width = availableWidth + 'px';\n                    element.style.height = (availableWidth / this.ratio) + 'px';\n                }\n            }\n        }\n        //center img\n        let diffTop = (this.offsetHeight - element.offsetHeight - addedY) / 2;\n        let diffLeft = (this.offsetWidth - element.offsetWidth - addedX) / 2;\n        element.style.transform = \"translate(\" + diffLeft + \"px, \" + diffTop + \"px)\";\n        element.style.opacity = '1';\n        this.isCalculing = false;\n    }\n    async onSrcChanged() {\n        if (!this.src || !this.svgEl || !this.imgEl || !this.iconEl) {\n            return;\n        }\n        if (this.src.endsWith(\".svg\")) {\n            let svgContent = await Aventus.ResourceLoader.load(this.src);\n            this.svgEl.innerHTML = svgContent;\n            this.calculateSize();\n        }\n        else if (this.src.startsWith(\"mi-\")) {\n            this.iconEl.icon = this.src.replace(\"mi-\", \"\");\n            this.calculateSize();\n        }\n        else if (this.cache) {\n            let base64 = await Aventus.ResourceLoader.load({\n                url: this.src,\n                type: 'img'\n            });\n            this.imgEl.setAttribute(\"src\", base64);\n            this.calculateSize();\n        }\n        else {\n            this.imgEl.setAttribute(\"src\", this.src);\n            this.calculateSize();\n        }\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.resizeObserver?.disconnect();\n        this.resizeObserver = undefined;\n    }\n    postCreation() {\n        this.resizeObserver = new Aventus.ResizeObserver({\n            fps: 10,\n            callback: () => {\n                this.calculateSize();\n            }\n        });\n        this.resizeObserver.observe(this);\n    }\n}\nComponents.Img.Namespace=`Core.Components`;\nComponents.Img.Tag=`rk-img`;\n_.Components.Img=Components.Img;\nif(!window.customElements.get('rk-img')){window.customElements.define('rk-img', Components.Img);Aventus.WebComponentInstance.registerDefinition(Components.Img);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Storybook","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"StoryValue","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Img","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLImageElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Aventus.ResourceLoader","isStrong":false},{"fullName":"MaterialIcon.IconType","isStrong":false}],"fullName":"Core.Components.Img","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-img"},{"code":"Lib.Colors=class Colors {\n    static get BLACK() { return new Lib.Color(\"#000000\"); }\n    static get SILVER() { return new Lib.Color(\"#c0c0c0\"); }\n    static get GRAY() { return new Lib.Color(\"#808080\"); }\n    static get WHITE() { return new Lib.Color(\"#ffffff\"); }\n    static get MAROON() { return new Lib.Color(\"#800000\"); }\n    static get RED() { return new Lib.Color(\"#ff0000\"); }\n    static get PURPLE() { return new Lib.Color(\"#800080\"); }\n    static get GREEN() { return new Lib.Color(\"#008000\"); }\n    static get LIME() { return new Lib.Color(\"#00ff00\"); }\n    static get OLIVE() { return new Lib.Color(\"#808000\"); }\n    static get YELLOW() { return new Lib.Color(\"#ffff00\"); }\n    static get NAVY() { return new Lib.Color(\"#000080\"); }\n    static get BLUE() { return new Lib.Color(\"#0000ff\"); }\n    static get TEAL() { return new Lib.Color(\"#008080\"); }\n    static get AQUA() { return new Lib.Color(\"#00ffff\"); }\n    static get ORANGE() { return new Lib.Color(\"#ffa500\"); }\n    static get ALICEBLUE() { return new Lib.Color(\"#f0f8ff\"); }\n    static get ANTIQUEWHITE() { return new Lib.Color(\"#faebd7\"); }\n    static get AQUAMARINE() { return new Lib.Color(\"#7fffd4\"); }\n    static get AZURE() { return new Lib.Color(\"#f0ffff\"); }\n    static get BEIGE() { return new Lib.Color(\"#f5f5dc\"); }\n    static get BISQUE() { return new Lib.Color(\"#ffe4c4\"); }\n    static get BLANCHEDALMOND() { return new Lib.Color(\"#ffebcd\"); }\n    static get BLUEVIOLET() { return new Lib.Color(\"#8a2be2\"); }\n    static get BROWN() { return new Lib.Color(\"#a52a2a\"); }\n    static get BURLYWOOD() { return new Lib.Color(\"#deb887\"); }\n    static get CADETBLUE() { return new Lib.Color(\"#5f9ea0\"); }\n    static get CHARTREUSE() { return new Lib.Color(\"#7fff00\"); }\n    static get CHOCOLATE() { return new Lib.Color(\"#d2691e\"); }\n    static get CORAL() { return new Lib.Color(\"#ff7f50\"); }\n    static get CORNFLOWERBLUE() { return new Lib.Color(\"#6495ed\"); }\n    static get CORNSILK() { return new Lib.Color(\"#fff8dc\"); }\n    static get CRIMSON() { return new Lib.Color(\"#dc143c\"); }\n    static get CYAN() { return new Lib.Color(\"#00ffff\"); }\n    static get DARKBLUE() { return new Lib.Color(\"#00008b\"); }\n    static get DARKCYAN() { return new Lib.Color(\"#008b8b\"); }\n    static get DARKGOLDENROD() { return new Lib.Color(\"#b8860b\"); }\n    static get DARKGRAY() { return new Lib.Color(\"#a9a9a9\"); }\n    static get DARKGREEN() { return new Lib.Color(\"#006400\"); }\n    static get DARKGREY() { return new Lib.Color(\"#a9a9a9\"); }\n    static get DARKKHAKI() { return new Lib.Color(\"#bdb76b\"); }\n    static get DARKMAGENTA() { return new Lib.Color(\"#8b008b\"); }\n    static get DARKOLIVEGREEN() { return new Lib.Color(\"#556b2f\"); }\n    static get DARKORANGE() { return new Lib.Color(\"#ff8c00\"); }\n    static get DARKORCHID() { return new Lib.Color(\"#9932cc\"); }\n    static get DARKRED() { return new Lib.Color(\"#8b0000\"); }\n    static get DARKSALMON() { return new Lib.Color(\"#e9967a\"); }\n    static get DARKSEAGREEN() { return new Lib.Color(\"#8fbc8f\"); }\n    static get DARKSLATEBLUE() { return new Lib.Color(\"#483d8b\"); }\n    static get DARKSLATEGRAY() { return new Lib.Color(\"#2f4f4f\"); }\n    static get DARKSLATEGREY() { return new Lib.Color(\"#2f4f4f\"); }\n    static get DARKTURQUOISE() { return new Lib.Color(\"#00ced1\"); }\n    static get DARKVIOLET() { return new Lib.Color(\"#9400d3\"); }\n    static get DEEPPINK() { return new Lib.Color(\"#ff1493\"); }\n    static get DEEPSKYBLUE() { return new Lib.Color(\"#00bfff\"); }\n    static get DIMGRAY() { return new Lib.Color(\"#696969\"); }\n    static get DIMGREY() { return new Lib.Color(\"#696969\"); }\n    static get DODGERBLUE() { return new Lib.Color(\"#1e90ff\"); }\n    static get FIREBRICK() { return new Lib.Color(\"#b22222\"); }\n    static get FLORALWHITE() { return new Lib.Color(\"#fffaf0\"); }\n    static get FORESTGREEN() { return new Lib.Color(\"#228b22\"); }\n    static get GAINSBORO() { return new Lib.Color(\"#dcdcdc\"); }\n    static get GHOSTWHITE() { return new Lib.Color(\"#f8f8ff\"); }\n    static get GOLD() { return new Lib.Color(\"#ffd700\"); }\n    static get GOLDENROD() { return new Lib.Color(\"#daa520\"); }\n    static get GREENYELLOW() { return new Lib.Color(\"#adff2f\"); }\n    static get GREY() { return new Lib.Color(\"#808080\"); }\n    static get HONEYDEW() { return new Lib.Color(\"#f0fff0\"); }\n    static get HOTPINK() { return new Lib.Color(\"#ff69b4\"); }\n    static get INDIANRED() { return new Lib.Color(\"#cd5c5c\"); }\n    static get INDIGO() { return new Lib.Color(\"#4b0082\"); }\n    static get IVORY() { return new Lib.Color(\"#fffff0\"); }\n    static get KHAKI() { return new Lib.Color(\"#f0e68c\"); }\n    static get LAVENDER() { return new Lib.Color(\"#e6e6fa\"); }\n    static get LAVENDERBLUSH() { return new Lib.Color(\"#fff0f5\"); }\n    static get LAWNGREEN() { return new Lib.Color(\"#7cfc00\"); }\n    static get LEMONCHIFFON() { return new Lib.Color(\"#fffacd\"); }\n    static get LIGHTBLUE() { return new Lib.Color(\"#add8e6\"); }\n    static get LIGHTCORAL() { return new Lib.Color(\"#f08080\"); }\n    static get LIGHTCYAN() { return new Lib.Color(\"#e0ffff\"); }\n    static get LIGHTGOLDENRODYELLOW() { return new Lib.Color(\"#fafad2\"); }\n    static get LIGHTGRAY() { return new Lib.Color(\"#d3d3d3\"); }\n    static get LIGHTGREEN() { return new Lib.Color(\"#90ee90\"); }\n    static get LIGHTGREY() { return new Lib.Color(\"#d3d3d3\"); }\n    static get LIGHTPINK() { return new Lib.Color(\"#ffb6c1\"); }\n    static get LIGHTSALMON() { return new Lib.Color(\"#ffa07a\"); }\n    static get LIGHTSEAGREEN() { return new Lib.Color(\"#20b2aa\"); }\n    static get LIGHTSKYBLUE() { return new Lib.Color(\"#87cefa\"); }\n    static get LIGHTSLATEGRAY() { return new Lib.Color(\"#778899\"); }\n    static get LIGHTSLATEGREY() { return new Lib.Color(\"#778899\"); }\n    static get LIGHTSTEELBLUE() { return new Lib.Color(\"#b0c4de\"); }\n    static get LIGHTYELLOW() { return new Lib.Color(\"#ffffe0\"); }\n    static get LIMEGREEN() { return new Lib.Color(\"#32cd32\"); }\n    static get LINEN() { return new Lib.Color(\"#faf0e6\"); }\n    static get MAGENTA() { return new Lib.Color(\"#ff00ff\"); }\n    static get FUCHSIA() { return new Lib.Color(\"#ff00ff\"); }\n    static get MEDIUMAQUAMARINE() { return new Lib.Color(\"#66cdaa\"); }\n    static get MEDIUMBLUE() { return new Lib.Color(\"#0000cd\"); }\n    static get MEDIUMORCHID() { return new Lib.Color(\"#ba55d3\"); }\n    static get MEDIUMPURPLE() { return new Lib.Color(\"#9370db\"); }\n    static get MEDIUMSEAGREEN() { return new Lib.Color(\"#3cb371\"); }\n    static get MEDIUMSLATEBLUE() { return new Lib.Color(\"#7b68ee\"); }\n    static get MEDIUMSPRINGGREEN() { return new Lib.Color(\"#00fa9a\"); }\n    static get MEDIUMTURQUOISE() { return new Lib.Color(\"#48d1cc\"); }\n    static get MEDIUMVIOLETRED() { return new Lib.Color(\"#c71585\"); }\n    static get MIDNIGHTBLUE() { return new Lib.Color(\"#191970\"); }\n    static get MINTCREAM() { return new Lib.Color(\"#f5fffa\"); }\n    static get MISTYROSE() { return new Lib.Color(\"#ffe4e1\"); }\n    static get MOCCASIN() { return new Lib.Color(\"#ffe4b5\"); }\n    static get NAVAJOWHITE() { return new Lib.Color(\"#ffdead\"); }\n    static get OLDLACE() { return new Lib.Color(\"#fdf5e6\"); }\n    static get OLIVEDRAB() { return new Lib.Color(\"#6b8e23\"); }\n    static get ORANGERED() { return new Lib.Color(\"#ff4500\"); }\n    static get ORCHID() { return new Lib.Color(\"#da70d6\"); }\n    static get PALEGOLDENROD() { return new Lib.Color(\"#eee8aa\"); }\n    static get PALEGREEN() { return new Lib.Color(\"#98fb98\"); }\n    static get PALETURQUOISE() { return new Lib.Color(\"#afeeee\"); }\n    static get PALEVIOLETRED() { return new Lib.Color(\"#db7093\"); }\n    static get PAPAYAWHIP() { return new Lib.Color(\"#ffefd5\"); }\n    static get PEACHPUFF() { return new Lib.Color(\"#ffdab9\"); }\n    static get PERU() { return new Lib.Color(\"#cd853f\"); }\n    static get PINK() { return new Lib.Color(\"#ffc0cb\"); }\n    static get PLUM() { return new Lib.Color(\"#dda0dd\"); }\n    static get POWDERBLUE() { return new Lib.Color(\"#b0e0e6\"); }\n    static get ROSYBROWN() { return new Lib.Color(\"#bc8f8f\"); }\n    static get ROYALBLUE() { return new Lib.Color(\"#4169e1\"); }\n    static get SADDLEBROWN() { return new Lib.Color(\"#8b4513\"); }\n    static get SALMON() { return new Lib.Color(\"#fa8072\"); }\n    static get SANDYBROWN() { return new Lib.Color(\"#f4a460\"); }\n    static get SEAGREEN() { return new Lib.Color(\"#2e8b57\"); }\n    static get SEASHELL() { return new Lib.Color(\"#fff5ee\"); }\n    static get SIENNA() { return new Lib.Color(\"#a0522d\"); }\n    static get SKYBLUE() { return new Lib.Color(\"#87ceeb\"); }\n    static get SLATEBLUE() { return new Lib.Color(\"#6a5acd\"); }\n    static get SLATEGRAY() { return new Lib.Color(\"#708090\"); }\n    static get SLATEGREY() { return new Lib.Color(\"#708090\"); }\n    static get SNOW() { return new Lib.Color(\"#fffafa\"); }\n    static get SPRINGGREEN() { return new Lib.Color(\"#00ff7f\"); }\n    static get STEELBLUE() { return new Lib.Color(\"#4682b4\"); }\n    static get TAN() { return new Lib.Color(\"#d2b48c\"); }\n    static get THISTLE() { return new Lib.Color(\"#d8bfd8\"); }\n    static get TOMATO() { return new Lib.Color(\"#ff6347\"); }\n    static get TURQUOISE() { return new Lib.Color(\"#40e0d0\"); }\n    static get VIOLET() { return new Lib.Color(\"#ee82ee\"); }\n    static get WHEAT() { return new Lib.Color(\"#f5deb3\"); }\n    static get WHITESMOKE() { return new Lib.Color(\"#f5f5f5\"); }\n    static get YELLOWGREEN() { return new Lib.Color(\"#9acd32\"); }\n    static get REBECCAPURPLE() { return new Lib.Color(\"#663399\"); }\n}\nLib.Colors.Namespace=`Core.Lib`;\r\n_.Lib.Colors=Lib.Colors;\r\n","dependances":[{"fullName":"Core.Lib.Color","isStrong":false}],"fullName":"Core.Lib.Colors","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Data.DataTypes.Pdf=class Pdf extends AventusSharp.Data.AventusFile {\n    static get Fullname() { return \"Core.Data.DataTypes.Pdf, Core\"; }\n    Name = \"\";\n    Html = \"\";\n    Debug = false;\n}\nData.DataTypes.Pdf.Namespace=`Core.Data.DataTypes`;\r\nData.DataTypes.Pdf.$schema={...(AventusSharp.Data.AventusFile?.$schema ?? {}), \"Name\":\"string\",\"Html\":\"string\",\"Debug\":\"boolean\"};\r\nAventus.Converter.register(Data.DataTypes.Pdf.Fullname, Data.DataTypes.Pdf);\r\n_.Data.DataTypes.Pdf=Data.DataTypes.Pdf;\r\n","dependances":[{"fullName":"AventusSharp.Data.AventusFile","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Data.DataTypes.Pdf","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Lib.FontManager=class FontManager {\n    static async loadedFonts() {\n        let fonts = Array.from(document.fonts);\n        const result = [];\n        for (let font of fonts) {\n            if (font.status == 'loaded') {\n                if (!font['__src']) {\n                    let hasLoaded = await this.findFontInsideStylesheet(font);\n                    if (hasLoaded) {\n                        result.push(font);\n                    }\n                    else {\n                        console.warn(\"can't find src for \", font);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    static urlToBase64(url) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const response = await fetch(url);\n                const blob = await response.blob();\n                const reader = new FileReader();\n                reader.onloadend = () => resolve(reader.result);\n                reader.onerror = reject;\n                reader.readAsDataURL(blob);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    static async getFontRulesBase64() {\n        const fonts = await this.loadedFonts();\n        const props = {\n            'style': {\n                defaultValue: 'normal',\n                cssName: 'font-style'\n            },\n            'weight': {\n                defaultValue: 'normal',\n                cssName: 'font-weight'\n            },\n            'unicodeRange': {\n                defaultValue: 'U+0-10FFFF',\n                cssName: 'unicode-range'\n            },\n            'display': {\n                defaultValue: 'auto',\n                cssName: 'font-display'\n            },\n            'ascentOverride': {\n                defaultValue: 'normal',\n                cssName: 'ascent-override'\n            },\n            'descentOverride': {\n                defaultValue: 'normal',\n                cssName: 'descent-override'\n            },\n            'featureSettings': {\n                defaultValue: 'normal',\n                cssName: 'font-feature-settings'\n            },\n            'lineGapOverride': {\n                defaultValue: 'normal',\n                cssName: 'line-gap-override'\n            },\n            'stretch': {\n                defaultValue: 'normal',\n                cssName: 'font-stretch'\n            }\n        };\n        let txt = '';\n        for (let font of fonts) {\n            let txtFont = ['@font-face {'];\n            txtFont.push(\"font-family: \" + font.family + \";\");\n            txtFont.push(\"src: url(\\\"\" + await this.urlToBase64(font['__src']) + \"\\\");\");\n            for (let prop in props) {\n                if (font[prop] != props[prop].defaultValue) {\n                    txtFont.push(props[prop].cssName + \": \" + font[prop] + \";\");\n                }\n            }\n            txtFont.push(\"}\");\n            txt += txtFont.join(\"\\n\") + \"\\n\";\n        }\n        return txt;\n    }\n    static loadedStyles = {};\n    static async findFontInsideStylesheet(font) {\n        for (let i = 0; i < document.styleSheets.length; i++) {\n            let sheet = document.styleSheets[i];\n            try {\n                let rules = sheet.cssRules;\n            }\n            catch (e) {\n                if (sheet.href) {\n                    if (!this.loadedStyles[sheet.href]) {\n                        try {\n                            let response = await fetch(sheet.href);\n                            let txt = await response.text();\n                            this.loadedStyles[sheet.href] = new CSSStyleSheet();\n                            this.loadedStyles[sheet.href].replaceSync(txt);\n                        }\n                        catch (e2) {\n                            continue;\n                        }\n                    }\n                    sheet = this.loadedStyles[sheet.href] ?? null;\n                }\n                else {\n                    continue;\n                }\n            }\n            try {\n                for (let j = 0; j < sheet.cssRules.length; j++) {\n                    const rule = sheet.cssRules[j];\n                    if (rule instanceof CSSFontFaceRule) {\n                        let styleAny = rule.style;\n                        const family = rule.style.fontFamily.replace(/['\"]/g, '');\n                        if (family != font.family)\n                            continue;\n                        const otherCompares = {\n                            'fontStyle': 'style',\n                            'fontWeight': 'weight',\n                            'unicodeRange': 'unicodeRange',\n                            'fontDisplay': 'display',\n                            'ascentOverride': 'ascentOverride',\n                            'descentOverride': 'descentOverride',\n                            'fontFeatureSettings': 'featureSettings',\n                            'lineGapOverride': 'lineGapOverride',\n                            'fontStretch': 'stretch'\n                        };\n                        const defaultValue = {\n                            'fontStyle': 'normal',\n                            'fontWeight': 'normal',\n                            'unicodeRange': 'U+0-10FFFF',\n                            'fontDisplay': 'auto',\n                            'ascentOverride': 'normal',\n                            'descentOverride': 'normal',\n                            'fontFeatureSettings': 'normal',\n                            'lineGapOverride': 'normal',\n                            'fontStretch': 'normal'\n                        };\n                        let isSame = true;\n                        for (let otherCompare in otherCompares) {\n                            let v = otherCompares[otherCompare];\n                            if (styleAny[otherCompare] != font[v]) {\n                                if (styleAny[otherCompare] != '' || defaultValue[otherCompare] != font[v]) {\n                                    isSame = false;\n                                    break;\n                                }\n                            }\n                        }\n                        if (!isSame)\n                            continue;\n                        let resultMatch = /url\\(['|\"]?(.*?)['|\"]?\\)/g.exec(styleAny.src);\n                        if (resultMatch) {\n                            font['__src'] = resultMatch[1];\n                            return true;\n                        }\n                    }\n                }\n            }\n            catch (e) {\n                console.error(`Failed to access stylesheet: ${sheet.href}`, e);\n            }\n        }\n        return false;\n    }\n}\nLib.FontManager.Namespace=`Core.Lib`;\r\n_.Lib.FontManager=Lib.FontManager;\r\n","dependances":[{"fullName":"FontFace","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"CSSStyleSheet","isStrong":true}],"fullName":"Core.Lib.FontManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.SheetSplitter = class SheetSplitter extends Aventus.WebComponent {\n    get 'copy'() { return this.getStringAttr('copy') }\n    set 'copy'(val) { this.setStringAttr('copy', val) }\rget 'name'() { return this.getStringAttr('name') }\n    set 'name'(val) { this.setStringAttr('name', val) }\r    static __style = `:host{display:none}`;\n    __getStatic() {\n        return SheetSplitter;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(SheetSplitter.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"SheetSplitter\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('copy')){ this['copy'] = undefined; }\rif(!this.hasAttribute('name')){ this['name'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('copy');\rthis.__upgradeProperty('name');\r }\n}\nComponents.SheetSplitter.Namespace=`Core.Components`;\nComponents.SheetSplitter.Tag=`rk-sheet-splitter`;\n_.Components.SheetSplitter=Components.SheetSplitter;\nif(!window.customElements.get('rk-sheet-splitter')){window.customElements.define('rk-sheet-splitter', Components.SheetSplitter);Aventus.WebComponentInstance.registerDefinition(Components.SheetSplitter);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false}],"fullName":"Core.Components.SheetSplitter","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-sheet-splitter"},{"code":"Lib.DomTools=class DomTools {\n    static clearElement(element) {\n        const children = Array.from(element.children);\n        for (let child of children) {\n            child.remove();\n        }\n    }\n}\nLib.DomTools.Namespace=`Core.Lib`;\r\n_.Lib.DomTools=Lib.DomTools;\r\n","dependances":[{"fullName":"HTMLElement","isStrong":false},{"fullName":"ShadowRoot","isStrong":false}],"fullName":"Core.Lib.DomTools","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.DateTools=class DateTools {\n    static isSameDate(date1, date2) {\n        if (date1 == null && date2 == null)\n            return true;\n        if (date1 == null || date2 == null)\n            return false;\n        return date1.getDate() == date2.getDate() && date1.getMonth() == date2.getMonth() && date1.getFullYear() == date2.getFullYear();\n    }\n    static isSameDateTime(date1, date2) {\n        if (date1 == null && date2 == null)\n            return true;\n        if (date1 == null || date2 == null)\n            return false;\n        return date1.getDate() == date2.getDate() && date1.getMonth() == date2.getMonth() && date1.getFullYear() == date2.getFullYear() && date1.getHours() == date2.getHours() && date1.getMinutes() == date2.getMinutes();\n    }\n    static print(date, options, locale) {\n        if (!options) {\n            options = {\n                year: \"numeric\",\n                month: \"long\",\n                day: \"2-digit\"\n            };\n        }\n        return date.toLocaleDateString(locale, options);\n    }\n    static _localMonths = [];\n    static getMonthsName() {\n        if (this._localMonths.length == 0) {\n            for (let i = 0; i < 12; i++) {\n                this._localMonths.push(this.print(new Date(2024, i, 15), { month: \"long\" }));\n            }\n        }\n        return this._localMonths;\n    }\n    static getStartMonth(date) {\n        const start = new Date();\n        start.setTime(date.getTime());\n        start.setDate(1);\n        start.setHours(0);\n        start.setMinutes(0);\n        start.setSeconds(0);\n        start.setMilliseconds(0);\n        return start;\n    }\n    static getEndMonth(date) {\n        const end = this.getStartMonth(date);\n        end.setMonth(end.getMonth() + 1);\n        end.setDate(0);\n        end.setHours(23);\n        end.setMinutes(59);\n        end.setSeconds(59);\n        end.setMilliseconds(999);\n        return end;\n    }\n    static getStartWeek(date) {\n        const start = new Date();\n        start.setTime(date.getTime());\n        const day = start.getDay();\n        const diff = (day === 0) ? -6 : 1 - day;\n        const monday = start.getDate() + diff;\n        start.setDate(monday);\n        start.setHours(0);\n        start.setMinutes(0);\n        start.setSeconds(0);\n        start.setMilliseconds(0);\n        return start;\n    }\n    static getEndWeek(date) {\n        const end = this.getStartWeek(date);\n        end.setDate(end.getDate() + 7);\n        end.setHours(23);\n        end.setMinutes(59);\n        end.setSeconds(59);\n        end.setMilliseconds(999);\n        return end;\n    }\n    static getStartDay(date) {\n        const start = new Date();\n        start.setTime(date.getTime());\n        start.setHours(0);\n        start.setMinutes(0);\n        start.setSeconds(0);\n        start.setMilliseconds(0);\n        return start;\n    }\n    static getEndDay(date) {\n        const end = this.getStartDay(date);\n        end.setHours(23);\n        end.setMinutes(59);\n        end.setSeconds(59);\n        end.setMilliseconds(999);\n        return end;\n    }\n    static diffMinutes(d1, d2) {\n        const diffMs = Math.abs(d1.getTime() - d2.getTime());\n        return Math.floor(diffMs / (1000 * 60));\n    }\n    static diffHours(d1, d2) {\n        const diffMs = Math.abs(d1.getTime() - d2.getTime());\n        return Math.floor(diffMs / (1000 * 60 * 60));\n    }\n    static diffDays(d1, d2) {\n        const diffMs = Math.abs(d1.getTime() - d2.getTime());\n        return Math.floor(diffMs / (1000 * 60 * 60 * 24));\n    }\n}\nLib.DateTools.Namespace=`Core.Lib`;\r\n_.Lib.DateTools=Lib.DateTools;\r\n","dependances":[{"fullName":"Date","isStrong":false},{"fullName":"Intl.DateTimeFormatOptions","isStrong":false},{"fullName":"locale","isStrong":false}],"fullName":"Core.Lib.DateTools","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.ApplicationBreakPoint=class ApplicationBreakPoint {\n    static xs = 300;\n    static sm = 540;\n    static md = 720;\n    static lg = 960;\n    static xl = 1140;\n}\nSystem.ApplicationBreakPoint.Namespace=`Core.System`;\r\n_.System.ApplicationBreakPoint=System.ApplicationBreakPoint;\r\n","dependances":[],"fullName":"Core.System.ApplicationBreakPoint","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.PwaPromptIos = class PwaPromptIos extends Aventus.WebComponent {\n    get 'visible'() { return this.getBoolAttr('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\r    static get isStandalone() {\n        if (\"standalone\" in window.navigator && window.navigator.standalone) {\n            return true;\n        }\n        return false;\n    }\n    static get isiOS() {\n        let test1 = /iphone|ipad|ipod/.test(window.navigator.userAgent.toLowerCase());\n        let test2 = navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n        return test1 || test2;\n    }\n    static get isAvailable() {\n        return this.isiOS && !this.isStandalone;\n    }\n    static __style = `:host .noScroll{overflow:hidden}:host .pwaPromptOverlay{background-color:rgba(0,0,0,.8);left:0;min-height:100vh;min-height:-webkit-fill-available;opacity:0;pointer-events:none;position:fixed;top:0;touch-action:none;transition:opacity .2s ease-in;visibility:hidden;width:100vw;z-index:999999}:host .pwaPromptOverlay.modern{background:rgba(10,10,10,.5);color:rgba(235,235,245,.6)}:host .pwaPrompt{-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px);background-color:rgba(250,250,250,.8);border-radius:var(--border-radius);bottom:0;color:#000;filter:brightness(1.1);left:0;margin:0 8px 10px;overflow:hidden;pointer-events:none;position:fixed;touch-action:none;transform:translateY(calc(100% + 10px));transition:transform .4s cubic-bezier(0.4, 0.24, 0.3, 1);width:calc(100vw - 16px);z-index:999999}:host .pwaPrompt.modern{background:rgba(65,65,65,.7);filter:brightness(1.1)}:host .pwaPromptHeader{align-items:center;border-bottom:1px solid rgba(0,0,0,.1);border-left:0px;border-right:0px;border-top:0px;border-width:.5px;display:flex;flex-flow:row nowrap;justify-content:space-between;padding:13px 16px}:host .modern .pwaPromptHeader{border-color:rgba(140,140,140,.7)}:host .pwaPromptHeader .pwaPromptTitle{color:#333;font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-size:18px;font-weight:500;line-height:1.125;margin:0;padding:0}:host .modern .pwaPromptHeader .pwaPromptTitle{color:#fff}:host .pwaPromptHeader .pwaPromptCancel{background:rgba(0,0,0,0);border:0;color:#2d7cf6;font-size:16px;margin:0;padding:0}:host .modern .pwaPromptHeader .pwaPromptCancel{color:#0984ff}:host .pwaPromptBody{display:flex;width:100%}:host .pwaPromptBody .pwaPromptDescription{border-bottom:1px solid rgba(0,0,0,.1);border-left:0px;border-right:0px;border-top:0px;border-width:.5px;color:inherit;margin:0 16px;padding:16px;width:100%}:host .modern .pwaPromptBody .pwaPromptDescription{border-color:rgba(140,140,140,.7)}:host .pwaPromptCopy{color:#7b7b7a;font-family:-apple-system,system-ui,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif;font-size:13px;line-height:17px;margin:0;padding:0}:host .pwaPromptCopy.bold{font-weight:600}:host .modern .pwaPromptCopy{border-color:rgba(235,235,245,.6);color:rgba(235,235,245,.6)}:host .pwaPromptInstruction{color:inherit;margin:0 16px;padding:16px}:host .pwaPromptInstruction .pwaPromptInstructionStep{align-items:center;display:flex;flex-flow:row nowrap;justify-content:flex-start;margin-bottom:16px;text-align:left}:host .pwaPromptInstruction .pwaPromptInstructionStep:last-of-type{margin-bottom:0}:host .pwaPromptInstruction .pwaPromptShareIcon,:host .pwaPromptInstruction .pwaPromptHomeIcon{flex:0 0 auto;height:30px;margin-right:32px;width:25px}:host .pwaPromptInstruction .pwaPromptHomeIcon{color:#2d7cf6}:host .modern .pwaPromptInstruction .pwaPromptHomeIcon{color:#fff;fill:#fff}:host .pwaPromptInstruction .pwaPromptShareIcon{color:#2d7cf6;fill:#2d7cf6}:host .modern .pwaPromptInstruction .pwaPromptShareIcon{color:#0984ff;fill:#0984ff}:host([visible]) .pwaPromptOverlay{display:block;opacity:1;pointer-events:initial;touch-action:none;visibility:visible}:host([visible]) .pwaPrompt{display:block;pointer-events:initial;touch-action:none;transform:translateY(0)}`;\n    __getStatic() {\n        return PwaPromptIos;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PwaPromptIos.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div aria-label=\"Close\" role=\"button\" class=\"pwaPromptOverlay modern iOSPWA-overlay\" _id=\"pwapromptios_0\">\r</div><div class=\"pwaPrompt iOSPWA-container modern\" aria-describedby=\"description\" aria-labelledby=\"homescreen\" role=\"dialog\" _id=\"pwapromptios_1\">\r    <div class=\"pwaPromptHeader iOSPWA-header\">\r        <p class=\"pwaPromptTitle iOSPWA-title\">\r            Ajouter à la page d'accueil\r        </p>\r        <button class=\"pwaPromptCancel iOSPWA-cancel\" _id=\"pwapromptios_2\">\r            Fermer\r        </button>\r    </div>\r    <div class=\"pwaPromptBody iOSPWA-body\">\r        <div class=\"pwaPromptDescription iOSPWA-description\">\r            <p class=\"pwaPromptCopy iOSPWA-description-copy\">\r                Ce site web est doté d'une fonctionnalité d'application. Ajoutez-le à votre écran d'accueil pour l'utiliser en plein écran\r            </p>\r        </div>\r    </div>\r    <div class=\"pwaPromptInstruction iOSPWA-steps\">\r        <div class=\"pwaPromptInstructionStep iOSPWA-step1\">\r            <svg class=\"pwaPromptShareIcon iOSPWA-step1-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 566 670\">\r                <path d=\"M255 12c4-4 10-8 16-8s12 3 16 8l94 89c3 4 6 7 8 12 2 6 0 14-5 19-7 8-20 9-28 2l-7-7-57-60 2 54v276c0 12-10 22-22 22-12 1-24-10-23-22V110l1-43-60 65c-5 5-13 8-21 6a19 19 0 0 1-16-17c-1-7 2-13 7-18l95-91z\"></path>\r                <path d=\"M43 207c16-17 40-23 63-23h83v46h-79c-12 0-25 3-33 13-8 9-10 21-10 33v260c0 13 0 27 6 38 5 12 18 18 30 19l14 1h302c14 0 28 0 40-8 11-7 16-21 16-34V276c0-11-2-24-9-33-8-10-22-13-34-13h-78v-46h75c13 0 25 1 37 4 16 4 31 13 41 27 11 17 14 37 14 57v280c0 20-3 41-15 58a71 71 0 0 1-45 27c-11 2-23 3-34 3H109c-19-1-40-4-56-15-14-9-23-23-27-38-4-12-5-25-5-38V270c1-22 6-47 22-63z\"></path>\r            </svg>\r            <p class=\"pwaPromptCopy bold iOSPWA-step1-copy\">\r                1) Appuyez sur le bouton \"Partager\" dans la barre de menu.\r            </p>\r        </div>\r        <div class=\"pwaPromptInstructionStep iOSPWA-step2\">\r            <svg class=\"pwaPromptHomeIcon iOSPWA-step2-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 578 584\">\r                <path d=\"M101 35l19-1h333c12 0 23 0 35 3 17 3 34 12 44 27 13 16 16 38 16 58v329c0 19 0 39-8 57a65 65 0 0 1-37 37c-18 7-38 7-57 7H130c-21 1-44 0-63-10-14-7-25-20-30-34-6-15-8-30-8-45V121c1-21 5-44 19-61 13-16 33-23 53-25m7 46c-10 1-19 6-24 14-7 8-9 20-9 31v334c0 12 2 25 10 34 9 10 23 12 35 12h336c14 1 30-3 38-15 6-9 8-20 8-31V125c0-12-2-24-10-33-9-9-22-12-35-12H121l-13 1z\"></path>\r                <path d=\"M271 161c9-11 31-10 38 4 3 5 3 11 3 17v87h88c7 0 16 1 21 7 6 6 7 14 6 22a21 21 0 0 1-10 14c-5 4-11 5-17 5h-88v82c0 7-1 15-6 20-10 10-29 10-37-2-3-6-4-13-4-19v-81h-87c-8-1-17-3-23-9-5-6-6-15-4-22a21 21 0 0 1 11-14c6-3 13-3 19-3h84v-88c0-7 1-14 6-20z\"></path>\r            </svg>\r            <p class=\"pwaPromptCopy bold iOSPWA-step2-copy\">\r                2) Appuyez sur \"Ajouter à l'écran d'accueil\".\r            </p>\r        </div>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"overlay\",\n      \"ids\": [\n        \"pwapromptios_0\"\n      ]\n    },\n    {\n      \"name\": \"prompt\",\n      \"ids\": [\n        \"pwapromptios_1\"\n      ]\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"pwapromptios_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.close(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"PwaPromptIos\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('visible')) { this.attributeChangedCallback('visible', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('visible');\r }\n    __listBoolProps() { return [\"visible\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    close() {\n        this.addEventListener(\"transitionend\", () => {\n            this.remove();\n        });\n        this.visible = false;\n    }\n    postCreation() {\n        this.visible = true;\n    }\n}\nComponents.PwaPromptIos.Namespace=`Core.Components`;\nComponents.PwaPromptIos.Tag=`rk-pwa-prompt-ios`;\n_.Components.PwaPromptIos=Components.PwaPromptIos;\nif(!window.customElements.get('rk-pwa-prompt-ios')){window.customElements.define('rk-pwa-prompt-ios', Components.PwaPromptIos);Aventus.WebComponentInstance.registerDefinition(Components.PwaPromptIos);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Attribute","isStrong":false}],"fullName":"Core.Components.PwaPromptIos","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-pwa-prompt-ios"},{"code":"Libs.DateConverter=class DateConverter extends Aventus.DateConverter {\n    isStringDate(txt) {\n        return /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2})$/.exec(txt) !== null;\n    }\n    fromString(txt) {\n        return new Date(txt);\n    }\n    toString(date) {\n        if (date.getFullYear() < 100) {\n            return \"0001-01-01T00:00:00\";\n        }\n        const offset = date.getTimezoneOffset() * 60000;\n        const iso = new Date(date.getTime() - offset).toISOString();\n        const isoSplit = iso.split(\".\");\n        isoSplit.pop();\n        return isoSplit.join(\".\");\n    }\n}\nLibs.DateConverter.Namespace=`Core.Libs`;\r\n_.Libs.DateConverter=Libs.DateConverter;\r\n","dependances":[{"fullName":"Aventus.DateConverter","isStrong":true},{"fullName":"Date","isStrong":false}],"fullName":"Core.Libs.DateConverter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.Pointer=class Pointer {\n    static isTouch(e) {\n        if (window.TouchEvent && e instanceof TouchEvent) {\n            return true;\n        }\n        if (e instanceof PointerEvent && (e.pointerType == \"touch\" || e.pointerType == \"pen\")) {\n            return true;\n        }\n        return false;\n    }\n}\nLib.Pointer.Namespace=`Core.Lib`;\r\n_.Lib.Pointer=Lib.Pointer;\r\n","dependances":[{"fullName":"Event","isStrong":false}],"fullName":"Core.Lib.Pointer","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"(function (ApplicationPermission) {\n    ApplicationPermission[ApplicationPermission[\"AllowAccess\"] = 0] = \"AllowAccess\";\n})(Permissions.ApplicationPermission || (Permissions.ApplicationPermission = {}));\n_.Permissions.ApplicationPermission=Permissions.ApplicationPermission;\r\n","dependances":[],"fullName":"Core.Permissions.ApplicationPermission","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Lib.Geometry=class Geometry {\n    static getIntersectingRectangle(rect1, rect2) {\n        const [r1, r2] = [rect1, rect2].map(r => {\n            return {\n                x: [r.x1, r.x2].sort((a, b) => a - b),\n                y: [r.y1, r.y2].sort((a, b) => a - b)\n            };\n        });\n        const noIntersect = r2.x[0] > r1.x[1] || r2.x[1] < r1.x[0] ||\n            r2.y[0] > r1.y[1] || r2.y[1] < r1.y[0];\n        return noIntersect ? false : {\n            x1: Math.max(r1.x[0], r2.x[0]),\n            y1: Math.max(r1.y[0], r2.y[0]),\n            x2: Math.min(r1.x[1], r2.x[1]),\n            y2: Math.min(r1.y[1], r2.y[1])\n        };\n    }\n    static getRectangleArea(rect1) {\n        const w = Math.abs(rect1.x1 - rect1.x2);\n        const h = Math.abs(rect1.y1 - rect1.y2);\n        return w * h;\n    }\n}\nLib.Geometry.Namespace=`Core.Lib`;\r\n_.Lib.Geometry=Lib.Geometry;\r\n","dependances":[{"fullName":"Core.Lib.Rectangle","isStrong":false}],"fullName":"Core.Lib.Geometry","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.ApplicationStateManager=class ApplicationStateManager extends Aventus.StateManager {\n    application;\n    constructor(application) {\n        super();\n        this.application = application;\n    }\n    save() {\n        return this.application.saveApplicationHistory();\n    }\n    assignDefaultState(stateName) {\n        let el = new State.ApplicationEmptyState(stateName);\n        el.setManager(this);\n        return el;\n    }\n    setState(state) {\n        if (state instanceof State.ApplicationState) {\n            state.setManager(this);\n        }\n        return super.setState(state);\n    }\n}\nLib.ApplicationStateManager.Namespace=`Core.Lib`;\r\n_.Lib.ApplicationStateManager=Lib.ApplicationStateManager;\r\n","dependances":[{"fullName":"Aventus.StateManager","isStrong":true},{"fullName":"Aventus.IStateManager","isStrong":true},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Core.State.ApplicationEmptyState","isStrong":false},{"fullName":"Core.State.ApplicationState","isStrong":false},{"fullName":"Core.System.Application","isStrong":false}],"fullName":"Core.Lib.ApplicationStateManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"let Style=class Style {\n    colors = ['green', 'success', 'red', 'error', 'orange', 'warning', 'blue', 'information', 'primary', 'secondary'];\n}\nStyle.Namespace=`Core`;\r\n_.Style=Style;\r\n","dependances":[{"fullName":"Core.ColorsType","isStrong":false}],"fullName":"Core.Style","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.ButtonIcon = class ButtonIcon extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"icon\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'color'() { return this.getStringAttr('color') }\n    set 'color'(val) { this.setStringAttr('color', val) }\rget 'outline'() { return this.getBoolAttr('outline') }\n    set 'outline'(val) { this.setBoolAttr('outline', val) }\rget 'disabled'() { return this.getBoolAttr('disabled') }\n    set 'disabled'(val) { this.setBoolAttr('disabled', val) }\r    get 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\r    static __style = `:host{--_button-background-color: var(--button-background-color);--_button-background-color-hover: var(--button-background-color-hover, var(--darker));--_button-color: var(--button-color, currentcolor);--_button-box-shadow: var(--button-box-shadow);--_button-box-shadow-hover: var(--button-box-shadow-hover);--_button-border-radius: var(--button-border-radius, var(--border-radius-sm, 5px));--_button-padding: var(--button-padding, 0 16px);--_button-icon-fill-color: var(--button-icon-fill-color, --_button-color);--_button-icon-stroke-color: var(--button-icon-stroke-color, transparent);--_button-icon-margin: var(--button-icon-margin, 10px);--_button-background-color-disable: var(--button-background-color-disable, var(--disable-color));--_button-color-disable: var(--button-color-disable, var(--text-disable))}:host{background-color:var(--_button-background-color);border-radius:var(--_button-border-radius);box-shadow:var(--_button-box-shadow);color:var(--_button-color);cursor:pointer;height:36px;position:relative}:host .hider{background-color:var(--_button-background-color-hover);border-radius:var(--_button-border-radius);inset:0;opacity:0;position:absolute;transition:opacity .3s var(--bezier-curve),visibility .3s var(--bezier-curve);visibility:hidden;z-index:1}:host .content{align-items:center;display:flex;height:100%;justify-content:center;padding:var(--_button-padding);position:relative;z-index:2}:host .content .icon-before,:host .content .icon-after{--img-stroke-color: var(--_button-icon-stroke-color);--img-fill-color: var(--_button-icon-fill-color);display:none;height:100%;padding:10px 0}:host([disabled]){background-color:var(--_button-background-color-disable) !important;box-shadow:none;color:var(--_button-color-disable);cursor:not-allowed}:host([icon_before]) .icon-before{display:block;margin-right:var(--_button-icon-margin)}:host([icon_after]) .icon-after{display:block;margin-left:var(--_button-icon-margin)}:host([icon]) .icon-before{margin-right:0px}:host([outline]){background-color:rgba(0,0,0,0);border:1px solid var(--button-background-color);color:var(--text-color)}:host([color=primary]){background-color:var(--primary);color:var(--text-color-primary)}:host([outline][color=primary]){background-color:rgba(0,0,0,0);border:1px solid var(--primary);color:var(--text-color)}:host([color=secondary]){background-color:var(--secondary);color:var(--text-color-secondary)}:host([outline][color=secondary]){background-color:rgba(0,0,0,0);border:1px solid var(--secondary);color:var(--text-color)}:host([color=green]){background-color:var(--green);color:var(--text-color-green)}:host([outline][color=green]){background-color:rgba(0,0,0,0);border:1px solid var(--green);color:var(--text-color)}:host([color=success]){background-color:var(--success);color:var(--text-color-success)}:host([outline][color=success]){background-color:rgba(0,0,0,0);border:1px solid var(--success);color:var(--text-color)}:host([color=red]){background-color:var(--red);color:var(--text-color-red)}:host([outline][color=red]){background-color:rgba(0,0,0,0);border:1px solid var(--red);color:var(--text-color)}:host([color=error]){background-color:var(--error);color:var(--text-color-error)}:host([outline][color=error]){background-color:rgba(0,0,0,0);border:1px solid var(--error);color:var(--text-color)}:host([color=orange]){background-color:var(--orange);color:var(--text-color-orange)}:host([outline][color=orange]){background-color:rgba(0,0,0,0);border:1px solid var(--orange);color:var(--text-color)}:host([color=warning]){background-color:var(--warning);color:var(--text-color-warning)}:host([outline][color=warning]){background-color:rgba(0,0,0,0);border:1px solid var(--warning);color:var(--text-color)}:host([color=blue]){background-color:var(--blue);color:var(--text-color-blue)}:host([outline][color=blue]){background-color:rgba(0,0,0,0);border:1px solid var(--blue);color:var(--text-color)}:host([color=information]){background-color:var(--information);color:var(--text-color-information)}:host([outline][color=information]){background-color:rgba(0,0,0,0);border:1px solid var(--information);color:var(--text-color)}@media screen and (min-width: 1225px){:host(:not([disabled]):hover){box-shadow:var(--_button-box-shadow-hover)}:host(:not([disabled]):hover) .hider{opacity:1;visibility:visible}}:host{--_button-padding: var(--button-padding, 0)}:host{aspect-ratio:1/1;height:36px;min-width:auto;border-radius:var(--border-radius-round)}:host .hider{border-radius:var(--border-radius-round)}:host .content .icon{--img-fill-color: var(--_button-color);height:100%;padding:0}`;\n    __getStatic() {\n        return ButtonIcon;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ButtonIcon.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"hider\"></div><div class=\"content\">\r    <rk-img class=\"icon\" _id=\"buttonicon_0\"></rk-img>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"buttonicon_0°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__86a55d8d752358ce167fd0da93753a9emethod0())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"ButtonIcon\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('color')){ this['color'] = undefined; }\rif(!this.hasAttribute('outline')) { this.attributeChangedCallback('outline', false, false); }\rif(!this.hasAttribute('disabled')) { this.attributeChangedCallback('disabled', false, false); }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('color');\rthis.__upgradeProperty('outline');\rthis.__upgradeProperty('disabled');\rthis.__upgradeProperty('icon');\r }\n    __listBoolProps() { return [\"outline\",\"disabled\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    __86a55d8d752358ce167fd0da93753a9emethod0() {\n        return this.icon;\n    }\n}\nComponents.ButtonIcon.Namespace=`Core.Components`;\nComponents.ButtonIcon.Tag=`rk-button-icon`;\n_.Components.ButtonIcon=Components.ButtonIcon;\nif(!window.customElements.get('rk-button-icon')){window.customElements.define('rk-button-icon', Components.ButtonIcon);Aventus.WebComponentInstance.registerDefinition(Components.ButtonIcon);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.ColorsType","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.ButtonIcon","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-button-icon"},{"code":"Components.ButtonIconMi = class ButtonIconMi extends Components.ButtonIcon {\n    static get observedAttributes() {return [\"icon\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\r    static __style = `:host .content .icon{height:auto;padding:0;font-size:inherit}`;\n    __getStatic() {\n        return ButtonIconMi;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ButtonIconMi.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"hider\"></div><div class=\"content\">\r    <mi-icon class=\"icon\" _id=\"buttoniconmi_0\"></mi-icon>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"buttoniconmi_0°icon\": {\n      \"fct\": (c) => `${c.print(c.comp.__6bf11e2b799d6cfde945f27815605c6bmethod0())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"ButtonIconMi\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('icon')){ this['icon'] = \"square\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('icon');\r }\n    __6bf11e2b799d6cfde945f27815605c6bmethod0() {\n        return this.icon;\n    }\n}\nComponents.ButtonIconMi.Namespace=`Core.Components`;\nComponents.ButtonIconMi.Tag=`rk-button-icon-mi`;\n_.Components.ButtonIconMi=Components.ButtonIconMi;\nif(!window.customElements.get('rk-button-icon-mi')){window.customElements.define('rk-button-icon-mi', Components.ButtonIconMi);Aventus.WebComponentInstance.registerDefinition(Components.ButtonIconMi);}\n","dependances":[{"fullName":"Core.Components.ButtonIcon","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"OverrideView","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.IconType","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.ButtonIconMi","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-button-icon-mi"},{"code":"(function (ResizeDirection) {\n    ResizeDirection[ResizeDirection[\"Top\"] = 0] = \"Top\";\n    ResizeDirection[ResizeDirection[\"TopLeft\"] = 1] = \"TopLeft\";\n    ResizeDirection[ResizeDirection[\"Left\"] = 2] = \"Left\";\n    ResizeDirection[ResizeDirection[\"BottomLeft\"] = 3] = \"BottomLeft\";\n    ResizeDirection[ResizeDirection[\"Bottom\"] = 4] = \"Bottom\";\n    ResizeDirection[ResizeDirection[\"BottomRight\"] = 5] = \"BottomRight\";\n    ResizeDirection[ResizeDirection[\"Right\"] = 6] = \"Right\";\n    ResizeDirection[ResizeDirection[\"TopRight\"] = 7] = \"TopRight\";\n})(Components.ResizeDirection || (Components.ResizeDirection = {}));\n_.Components.ResizeDirection=Components.ResizeDirection;\r\n","dependances":[],"fullName":"Core.Components.ResizeDirection","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Websocket.Routes.DesktopRouter_RemoveDesktopIcon=class DesktopRouter_RemoveDesktopIcon extends AventusSharp.WebSocket.WsEvent {\n    /**\n     * @inheritdoc\n     */\n    path() {\n        return `${this.getPrefix()}/desktop/RemoveDesktopIcon`;\n    }\n    /**\n     * @inheritdoc\n     */\n    listenOnBoot() {\n        return true;\n    }\n}\nWebsocket.Routes.DesktopRouter_RemoveDesktopIcon.Namespace=`Core.Websocket.Routes`;\r\n_.Websocket.Routes.DesktopRouter_RemoveDesktopIcon=Websocket.Routes.DesktopRouter_RemoveDesktopIcon;\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.WsEvent","isStrong":true}],"fullName":"Core.Websocket.Routes.DesktopRouter_RemoveDesktopIcon","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"(function (LoginCode) {\n    LoginCode[LoginCode[\"OK\"] = 0] = \"OK\";\n    LoginCode[LoginCode[\"WrongCredentials\"] = 1] = \"WrongCredentials\";\n    LoginCode[LoginCode[\"Unknown\"] = 2] = \"Unknown\";\n    LoginCode[LoginCode[\"NotConnected\"] = 3] = \"NotConnected\";\n})(Errors.LoginCode || (Errors.LoginCode = {}));\n_.Errors.LoginCode=Errors.LoginCode;\r\n","dependances":[],"fullName":"Core.Errors.LoginCode","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Errors.LoginError=class LoginError extends Aventus.GenericError {\n    static get Fullname() { return \"Core.Logic.LoginError, Core\"; }\n}\nErrors.LoginError.Namespace=`Core.Errors`;\r\nErrors.LoginError.$schema={...(Aventus.GenericError?.$schema ?? {}), };\r\nAventus.Converter.register(Errors.LoginError.Fullname, Errors.LoginError);\r\n_.Errors.LoginError=Errors.LoginError;\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Core.Errors.LoginCode","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Errors.LoginError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Lib.HttpRouter=class HttpRouter extends Aventus.HttpRouter {\n}\nLib.HttpRouter.Namespace=`Core.Lib`;\r\n_.Lib.HttpRouter=Lib.HttpRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRouter","isStrong":true}],"fullName":"Core.Lib.HttpRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"(function (CoreErrorCode) {\n    CoreErrorCode[CoreErrorCode[\"NotImplemented\"] = 0] = \"NotImplemented\";\n    CoreErrorCode[CoreErrorCode[\"NotAvailable\"] = 1] = \"NotAvailable\";\n    CoreErrorCode[CoreErrorCode[\"Impossible\"] = 2] = \"Impossible\";\n    CoreErrorCode[CoreErrorCode[\"NotAllowed\"] = 3] = \"NotAllowed\";\n    CoreErrorCode[CoreErrorCode[\"NotLogin\"] = 4] = \"NotLogin\";\n    CoreErrorCode[CoreErrorCode[\"ConversionFailed\"] = 5] = \"ConversionFailed\";\n    CoreErrorCode[CoreErrorCode[\"SeederError\"] = 6] = \"SeederError\";\n    CoreErrorCode[CoreErrorCode[\"MigrationError\"] = 7] = \"MigrationError\";\n    CoreErrorCode[CoreErrorCode[\"UnknowError\"] = 8] = \"UnknowError\";\n    CoreErrorCode[CoreErrorCode[\"TransactionGuidMissmatch\"] = 9] = \"TransactionGuidMissmatch\";\n})(Errors.CoreErrorCode || (Errors.CoreErrorCode = {}));\n_.Errors.CoreErrorCode=Errors.CoreErrorCode;\r\n","dependances":[],"fullName":"Core.Errors.CoreErrorCode","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Websocket.MainEndPoint=class MainEndPoint extends AventusSharp.WebSocket.EndPoint {\n    /**\n     * Create a singleton\n     */\n    static getInstance() {\n        return Aventus.Instance.get(Websocket.MainEndPoint);\n    }\n    get path() {\n        return \"/ws\";\n    }\n}\nWebsocket.MainEndPoint.Namespace=`Core.Websocket`;\r\n_.Websocket.MainEndPoint=Websocket.MainEndPoint;\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.EndPoint","isStrong":true},{"fullName":"Core.Websocket.MainEndPoint","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false}],"fullName":"Core.Websocket.MainEndPoint","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"_n = Websocket.Events.ApplicationTestEvent;\r\nWebsocket.Events.ApplicationTestEvent=class ApplicationTestEvent extends AventusSharp.WebSocket.WsEvent {\n    /**\n     * @inheritdoc\n     */\n    path() {\n        return `${this.getPrefix()}Core.Websocket.Events.ApplicationTestEvent`;\n    }\n    constructor(endpoint, getPrefix) {\n        super(endpoint ?? Websocket.MainEndPoint.getInstance(), getPrefix);\n    }\n}\nWebsocket.Events.ApplicationTestEvent.Namespace=`Core.Websocket.Events`;\r\n_.Websocket.Events.ApplicationTestEvent=Websocket.Events.ApplicationTestEvent;\r\n\r\nObject.assign(Websocket.Events.ApplicationTestEvent, _n);\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.WsEvent","isStrong":true},{"fullName":"Core.Websocket.Events.ApplicationTestEvent.Body","isStrong":false},{"fullName":"AventusSharp.WebSocket.EndPoint","isStrong":false},{"fullName":"Core.Websocket.MainEndPoint","isStrong":false}],"fullName":"Core.Websocket.Events.ApplicationTestEvent","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Data.Permission=class Permission extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.Permission, Core\"; }\n    EnumName;\n    AdditionalInfo = \"\";\n    EnumValue;\n}\nData.Permission.Namespace=`Core.Data`;\r\nData.Permission.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"EnumName\":\"string\",\"AdditionalInfo\":\"string\",\"EnumValue\":\"Aventus.Enum\"};\r\nAventus.Converter.register(Data.Permission.Fullname, Data.Permission);\r\n_.Data.Permission=Data.Permission;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"EnumValue","isStrong":false},{"fullName":"Aventus.Enum","isStrong":false}],"fullName":"Core.Data.Permission","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.PermissionUser=class PermissionUser extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.PermissionUser, Core\"; }\n    Data;\n    Permission;\n    UserId;\n    Allow;\n}\nData.PermissionUser.Namespace=`Core.Data`;\r\nData.PermissionUser.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Permission\":\"Core.Data.Permission\",\"UserId\":\"number\",\"Allow\":\"boolean\"};\r\nAventus.Converter.register(Data.PermissionUser.Fullname, Data.PermissionUser);\r\n_.Data.PermissionUser=Data.PermissionUser;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.Permission","isStrong":false}],"fullName":"Core.Data.PermissionUser","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Permissions.Tree.PermissionTreeItem=class PermissionTreeItem extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Permissions.Tree.PermissionTreeItem, Core\"; }\n    DisplayName = \"\";\n    Description = \"\";\n    EnumName = \"\";\n    Value;\n    PermissionId;\n    Permissions = [];\n}\nPermissions.Tree.PermissionTreeItem.Namespace=`Core.Permissions.Tree`;\r\nPermissions.Tree.PermissionTreeItem.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"DisplayName\":\"string\",\"Description\":\"string\",\"EnumName\":\"string\",\"Value\":\"Aventus.Enum\",\"PermissionId\":\"number\",\"Permissions\":\"PermissionTreeItem\"};\r\nAventus.Converter.register(Permissions.Tree.PermissionTreeItem.Fullname, Permissions.Tree.PermissionTreeItem);\r\n_.Permissions.Tree.PermissionTreeItem=Permissions.Tree.PermissionTreeItem;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Aventus.Enum","isStrong":false},{"fullName":"Core.Permissions.Tree.PermissionTreeItem","isStrong":false}],"fullName":"Core.Permissions.Tree.PermissionTreeItem","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Components.Tracker=class Tracker {\n    velocityMultiplier = window.devicePixelRatio;\n    updateTime = Date.now();\n    delta = { x: 0, y: 0 };\n    velocity = { x: 0, y: 0 };\n    lastPosition = { x: 0, y: 0 };\n    constructor(touch) {\n        this.lastPosition = this.getPosition(touch);\n    }\n    update(touch) {\n        const { velocity, updateTime, lastPosition, } = this;\n        const now = Date.now();\n        const position = this.getPosition(touch);\n        const delta = {\n            x: -(position.x - lastPosition.x),\n            y: -(position.y - lastPosition.y),\n        };\n        const duration = (now - updateTime) || 16.7;\n        const vx = delta.x / duration * 16.7;\n        const vy = delta.y / duration * 16.7;\n        velocity.x = vx * this.velocityMultiplier;\n        velocity.y = vy * this.velocityMultiplier;\n        this.delta = delta;\n        this.updateTime = now;\n        this.lastPosition = position;\n    }\n    getPointerData(evt) {\n        return evt.touches ? evt.touches[evt.touches.length - 1] : evt;\n    }\n    getPosition(evt) {\n        const data = this.getPointerData(evt);\n        return {\n            x: data.clientX,\n            y: data.clientY,\n        };\n    }\n}\nComponents.Tracker.Namespace=`Core.Components`;\r\n_.Components.Tracker=Components.Tracker;\r\n","dependances":[{"fullName":"Touch","isStrong":false},{"fullName":"PointerEvent","isStrong":false},{"fullName":"MouseEvent","isStrong":false}],"fullName":"Core.Components.Tracker","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.Panel = class Panel extends Aventus.WebComponent {\n    static __style = `:host{background-color:var(--primary-color-opacity);border-radius:var(--border-radius)}@media screen and (max-width: 768px){:host{background-color:var(--primary-color)}}@media screen and (max-width: 1224px){:host{border-radius:0px}}`;\n    __getStatic() {\n        return Panel;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Panel.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Panel\";\n    }\n}\nSystem.Panel.Namespace=`Core.System`;\nSystem.Panel.Tag=`rk-panel`;\n_.System.Panel=System.Panel;\nif(!window.customElements.get('rk-panel')){window.customElements.define('rk-panel', System.Panel);Aventus.WebComponentInstance.registerDefinition(System.Panel);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.System.Panel","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-panel"},{"code":"(function (DesktopPermission) {\n    DesktopPermission[DesktopPermission[\"CanHaveVirtualDesktop\"] = 0] = \"CanHaveVirtualDesktop\";\n})(Permissions.DesktopPermission || (Permissions.DesktopPermission = {}));\n_.Permissions.DesktopPermission=Permissions.DesktopPermission;\r\n","dependances":[],"fullName":"Core.Permissions.DesktopPermission","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"System.DesktopActivableLogic=class DesktopActivableLogic {\n    static findDeskstop(el, desktop) {\n        if (desktop) {\n            return desktop;\n        }\n        else if (el instanceof HTMLElement) {\n            let desktopTemp = Aventus.ElementExtension.findParentByType(el, System.Desktop);\n            return desktopTemp;\n        }\n        return null;\n    }\n    static set(el, desktop) {\n        this.findDeskstop(el, desktop)?.setElementToActive(el);\n    }\n    static remove(el, desktop) {\n        this.findDeskstop(el, desktop)?.removeElementFromActive(el);\n    }\n}\nSystem.DesktopActivableLogic.Namespace=`Core.System`;\r\n_.System.DesktopActivableLogic=System.DesktopActivableLogic;\r\n","dependances":[{"fullName":"Core.System.IDesktopActivable","isStrong":false},{"fullName":"Aventus.ElementExtension","isStrong":false},{"fullName":"Core.System.Desktop","isStrong":false}],"fullName":"Core.System.DesktopActivableLogic","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"App.AppConfiguration=class AppConfiguration extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.App.AppConfiguration, Core\"; }\n    appsInstalled = [];\n    allApps = new Map();\n}\nApp.AppConfiguration.Namespace=`Core.App`;\r\nApp.AppConfiguration.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"appsInstalled\":\"string\",\"allApps\":\"Map\"};\r\nAventus.Converter.register(App.AppConfiguration.Fullname, App.AppConfiguration);\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Internal","isStrong":false},{"fullName":"Map","isStrong":false}],"fullName":"Core.App.AppConfiguration","required":false,"type":1,"isExported":false,"convertibleName":"Fullname"},{"code":"Routes.CoreRouter=class CoreRouter extends Aventus.HttpRouter {\n    defineOptions(options) {\n        options.url = location.protocol + \"//\" + location.host + \"\";\n        return options;\n    }\n}\nRoutes.CoreRouter.Namespace=`Core.Routes`;\r\n_.Routes.CoreRouter=Routes.CoreRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRouter","isStrong":true},{"fullName":"Aventus.HttpRouterOptions","isStrong":false}],"fullName":"Core.Routes.CoreRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Routes.SystemInfoRouter=class SystemInfoRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.GetSystemInfo = this.GetSystemInfo.bind(this);\n    }\n    async GetSystemInfo() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/getsysteminfo`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n}\nRoutes.SystemInfoRouter.Namespace=`Core.Routes`;\r\n_.Routes.SystemInfoRouter=Routes.SystemInfoRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Core.Data.SystemInfo","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false}],"fullName":"Core.Routes.SystemInfoRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Routes.PermissionUserRouter=class PermissionUserRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.GetAllByUser = this.GetAllByUser.bind(this);\n        this.EditPermission = this.EditPermission.bind(this);\n    }\n    async GetAllByUser(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissionuser/byuser`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n    async EditPermission(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissionuser/editpermission`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n}\nRoutes.PermissionUserRouter.Namespace=`Core.Routes`;\r\n_.Routes.PermissionUserRouter=Routes.PermissionUserRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Core.Data.PermissionUser","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false}],"fullName":"Core.Routes.PermissionUserRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Routes.PdfRouter=class PdfRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.Generate = this.Generate.bind(this);\n        this.Build = this.Build.bind(this);\n    }\n    async Generate(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/generate`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryVoid(this.router);\n    }\n    async Build(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/build`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryBlob(this.router);\n    }\n}\nRoutes.PdfRouter.Namespace=`Core.Routes`;\r\n_.Routes.PdfRouter=Routes.PdfRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.Data.DataTypes.Pdf","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.VoidWithError","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Blob","isStrong":false}],"fullName":"Core.Routes.PdfRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Routes.MainRouter=class MainRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.LoginAction = this.LoginAction.bind(this);\n        this.Logout = this.Logout.bind(this);\n        this.VapidPublicKey = this.VapidPublicKey.bind(this);\n        this.Register = this.Register.bind(this);\n        this.SendNotification = this.SendNotification.bind(this);\n        this.BeginTransaction = this.BeginTransaction.bind(this);\n        this.CommitTransaction = this.CommitTransaction.bind(this);\n        this.RollbackTransaction = this.RollbackTransaction.bind(this);\n        this.Restart = this.Restart.bind(this);\n    }\n    async LoginAction(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/login`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n    async Logout() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/logout`, Aventus.HttpMethod.POST);\n        return await request.queryVoid(this.router);\n    }\n    async VapidPublicKey() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/vapidPublicKey`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n    async Register(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/register`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryVoid(this.router);\n    }\n    async SendNotification() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/sendNotification`, Aventus.HttpMethod.GET);\n        return await request.queryVoid(this.router);\n    }\n    async BeginTransaction(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/core/transaction/begin`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n    async CommitTransaction(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/core/transaction/commit`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryVoid(this.router);\n    }\n    async RollbackTransaction(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/core/transaction/rollback`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryVoid(this.router);\n    }\n    async Restart() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/restart`, Aventus.HttpMethod.GET);\n        return await request.queryVoid(this.router);\n    }\n}\nRoutes.MainRouter.Namespace=`Core.Routes`;\r\n_.Routes.MainRouter=Routes.MainRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false},{"fullName":"AventusSharp.Tools.VoidWithError","isStrong":false},{"fullName":"PushSubscription","isStrong":false}],"fullName":"Core.Routes.MainRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.ServiceWorker=class ServiceWorker {\n    static getInstance() {\n        return AvInstance.get(Lib.ServiceWorker);\n    }\n    subscription;\n    async init(registration) {\n        // if(await this.getSubscription(registration)) {\n        //     this.subscribe();\n    }\n    async getSubscription(registration) {\n        try {\n            let subscription = await registration.pushManager.getSubscription();\n            if (subscription) {\n                this.subscription = subscription;\n                return false;\n            }\n            let response = await new Routes.MainRouter().VapidPublicKey();\n            if (response.success && response.result) {\n                const vapidPublicKey = response.result;\n                // Chrome doesn't accept the base64-encoded (string) vapidPublicKey yet\n                // urlBase64ToUint8Array() is defined in /tools.js\n                const convertedVapidKey = this.urlBase64ToUint8Array(vapidPublicKey);\n                // Otherwise, subscribe the user (userVisibleOnly allows to specify that we don't plan to\n                // send notifications that don't have a visible effect for the user).\n                this.subscription = await registration.pushManager.subscribe({\n                    userVisibleOnly: true,\n                    applicationServerKey: convertedVapidKey\n                });\n                return true;\n            }\n        }\n        catch (e) {\n            alert(e);\n        }\n        return false;\n    }\n    async subscribe() {\n        if (!this.subscription) {\n            return;\n        }\n        await new Routes.MainRouter().Register({\n            subscription: this.subscription\n        });\n    }\n    async unsubscribe() {\n        if (!this.subscription) {\n            return;\n        }\n        await this.subscription.unsubscribe();\n    }\n    urlBase64ToUint8Array(base64String) {\n        var padding = '='.repeat((4 - base64String.length % 4) % 4);\n        var base64 = (base64String + padding)\n            .replace(/\\-/g, '+')\n            .replace(/_/g, '/');\n        var rawData = window.atob(base64);\n        var outputArray = new Uint8Array(rawData.length);\n        for (var i = 0; i < rawData.length; ++i) {\n            outputArray[i] = rawData.charCodeAt(i);\n        }\n        return outputArray;\n    }\n}\nLib.ServiceWorker.Namespace=`Core.Lib`;\r\n_.Lib.ServiceWorker=Lib.ServiceWorker;\r\n","dependances":[{"fullName":"Core.Lib.ServiceWorker","isStrong":false},{"fullName":"PushSubscription","isStrong":false},{"fullName":"ServiceWorkerRegistration","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Routes.MainRouter","isStrong":false},{"fullName":"Uint8Array","isStrong":false}],"fullName":"Core.Lib.ServiceWorker","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Data.ApplicationData=class ApplicationData extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.ApplicationData, Core\"; }\n    Name = \"\";\n    DisplayName = \"\";\n    Version = 0;\n    LogoClassName = \"\";\n    LogoTagName = \"\";\n    Extension;\n}\nData.ApplicationData.Namespace=`Core.Data`;\r\nData.ApplicationData.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Name\":\"string\",\"DisplayName\":\"string\",\"Version\":\"number\",\"LogoClassName\":\"string\",\"LogoTagName\":\"string\",\"Extension\":\"string\"};\r\nAventus.Converter.register(Data.ApplicationData.Fullname, Data.ApplicationData);\r\n_.Data.ApplicationData=Data.ApplicationData;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Version","isStrong":false}],"fullName":"Core.Data.ApplicationData","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Components.PageCaseContainer = class PageCaseContainer extends Aventus.WebComponent {\n    static __style = `:host{display:block;float:left;height:100%;box-sizing:border-box;border-right:5px #000}`;\n    __getStatic() {\n        return PageCaseContainer;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PageCaseContainer.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"PageCaseContainer\";\n    }\n}\nComponents.PageCaseContainer.Namespace=`Core.Components`;\nComponents.PageCaseContainer.Tag=`rk-page-case-container`;\n_.Components.PageCaseContainer=Components.PageCaseContainer;\nif(!window.customElements.get('rk-page-case-container')){window.customElements.define('rk-page-case-container', Components.PageCaseContainer);Aventus.WebComponentInstance.registerDefinition(Components.PageCaseContainer);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.PageCaseContainer","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-page-case-container"},{"code":"Components.PageCaseSlot = class PageCaseSlot extends Aventus.WebComponent {\n    get 'no'() { return this.getNumberAttr('no') }\n    set 'no'(val) { this.setNumberAttr('no', val) }\r    item;\n    static __style = `:host{--internal-page-case-background: var(--page-case-background, transparent);--internal-page-case-background-active: var(--page-case-background-active, transparent);--internal-page-case-border-active: var(--page-case-border-active, none);--internal-page-case-border-radius:var(--page-case-border-radius, 0)}:host{display:block;width:var(--local-page-case-width);height:var(--local-page-case-height);background-color:var(--internal-page-case-background);border-radius:var(--internal-page-case-border-radius);margin:calc(var(--local-page-case-margin-top)/2) calc(var(--local-page-case-margin-left)/2);float:left;position:relative;box-sizing:border-box}:host ::slotted(*){position:absolute;top:0;left:0;width:var(--local-page-case-width);height:var(--local-page-case-height)}:host(.active){background-color:var(--internal-page-case-background-active);border:var(--internal-page-case-border-active)}`;\n    __getStatic() {\n        return PageCaseSlot;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PageCaseSlot.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"PageCaseSlot\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('no')){ this['no'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('no');\r }\n}\nComponents.PageCaseSlot.Namespace=`Core.Components`;\nComponents.PageCaseSlot.Tag=`rk-page-case-slot`;\n_.Components.PageCaseSlot=Components.PageCaseSlot;\nif(!window.customElements.get('rk-page-case-slot')){window.customElements.define('rk-page-case-slot', Components.PageCaseSlot);Aventus.WebComponentInstance.registerDefinition(Components.PageCaseSlot);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"HTMLElement","isStrong":false}],"fullName":"Core.Components.PageCaseSlot","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-page-case-slot"},{"code":"Data.ApplicationOpen=class ApplicationOpen extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Data.ApplicationOpen, Core\"; }\n    id;\n    applicationName;\n    number;\n    history;\n    isHidden;\n}\nData.ApplicationOpen.Namespace=`Core.Data`;\r\nData.ApplicationOpen.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"id\":\"string\",\"applicationName\":\"string\",\"number\":\"number\",\"history\":\"string\",\"isHidden\":\"boolean\"};\r\nAventus.Converter.register(Data.ApplicationOpen.Fullname, Data.ApplicationOpen);\r\n_.Data.ApplicationOpen=Data.ApplicationOpen;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Data.ApplicationOpen","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.ApplicationOpenInfo=class ApplicationOpenInfo extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Data.ApplicationOpenInfo, Core\"; }\n    DesktopId;\n    Info;\n}\nData.ApplicationOpenInfo.Namespace=`Core.Data`;\r\nData.ApplicationOpenInfo.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"DesktopId\":\"number\",\"Info\":\"ApplicationOpen\"};\r\nAventus.Converter.register(Data.ApplicationOpenInfo.Fullname, Data.ApplicationOpenInfo);\r\n_.Data.ApplicationOpenInfo=Data.ApplicationOpenInfo;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Info","isStrong":false},{"fullName":"Core.Data.ApplicationOpen","isStrong":false}],"fullName":"Core.Data.ApplicationOpenInfo","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Websocket.Routes.DesktopRouter_RemoveApp=class DesktopRouter_RemoveApp extends AventusSharp.WebSocket.WsEvent {\n    /**\n     * @inheritdoc\n     */\n    path() {\n        return `${this.getPrefix()}/desktop/RemoveApp`;\n    }\n    /**\n     * @inheritdoc\n     */\n    listenOnBoot() {\n        return true;\n    }\n}\nWebsocket.Routes.DesktopRouter_RemoveApp.Namespace=`Core.Websocket.Routes`;\r\n_.Websocket.Routes.DesktopRouter_RemoveApp=Websocket.Routes.DesktopRouter_RemoveApp;\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.WsEvent","isStrong":true},{"fullName":"Core.Data.ApplicationOpenInfo","isStrong":false}],"fullName":"Core.Websocket.Routes.DesktopRouter_RemoveApp","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"(function (DesktopLocation) {\n    DesktopLocation[DesktopLocation[\"Desktop\"] = 0] = \"Desktop\";\n    DesktopLocation[DesktopLocation[\"BottomBar\"] = 1] = \"BottomBar\";\n    DesktopLocation[DesktopLocation[\"HomeFav\"] = 2] = \"HomeFav\";\n})(Data.DesktopLocation || (Data.DesktopLocation = {}));\n_.Data.DesktopLocation=Data.DesktopLocation;\r\n","dependances":[],"fullName":"Core.Data.DesktopLocation","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"(function (BackgroundSize) {\n    BackgroundSize[BackgroundSize[\"Cover\"] = 0] = \"Cover\";\n    BackgroundSize[BackgroundSize[\"Contain\"] = 1] = \"Contain\";\n    BackgroundSize[BackgroundSize[\"Stretch\"] = 2] = \"Stretch\";\n})(Data.BackgroundSize || (Data.BackgroundSize = {}));\n_.Data.BackgroundSize=Data.BackgroundSize;\r\n","dependances":[],"fullName":"Core.Data.BackgroundSize","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Data.DataTypes.ImageFile=class ImageFile extends AventusSharp.Data.AventusFile {\n    static get Fullname() { return \"Core.Data.DataTypes.ImageFile, Core\"; }\n}\nData.DataTypes.ImageFile.Namespace=`Core.Data.DataTypes`;\r\nData.DataTypes.ImageFile.$schema={...(AventusSharp.Data.AventusFile?.$schema ?? {}), };\r\nAventus.Converter.register(Data.DataTypes.ImageFile.Fullname, Data.DataTypes.ImageFile);\r\n_.Data.DataTypes.ImageFile=Data.DataTypes.ImageFile;\r\n","dependances":[{"fullName":"AventusSharp.Data.AventusFile","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Data.DataTypes.ImageFile","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.Company=class Company extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.Company, Core\"; }\n    Name = \"\";\n    Logo = new Data.DataTypes.ImageFile();\n}\nData.Company.Namespace=`Core.Data`;\r\nData.Company.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Name\":\"string\",\"Logo\":\"Core.Data.DataTypes.ImageFile\"};\r\nAventus.Converter.register(Data.Company.Fullname, Data.Company);\r\n_.Data.Company=Data.Company;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.DataTypes.ImageFile","isStrong":false}],"fullName":"Core.Data.Company","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.User=class User extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.User, Core\"; }\n    Firstname = \"\";\n    Lastname = \"\";\n    Username = \"\";\n    Password = \"\";\n    Token = \"\";\n    Picture = new Data.DataTypes.ImageFile();\n    IsSuperAdmin = false;\n}\nData.User.Namespace=`Core.Data`;\r\nData.User.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Firstname\":\"string\",\"Lastname\":\"string\",\"Username\":\"string\",\"Password\":\"string\",\"Token\":\"string\",\"Picture\":\"Core.Data.DataTypes.ImageFile\",\"IsSuperAdmin\":\"boolean\"};\r\nAventus.Converter.register(Data.User.Fullname, Data.User);\r\n_.Data.User=Data.User;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.DataTypes.ImageFile","isStrong":false}],"fullName":"Core.Data.User","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.Group=class Group extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.Group, Core\"; }\n    Name = \"\";\n    Description = \"\";\n    Users = [];\n}\nData.Group.Namespace=`Core.Data`;\r\nData.Group.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Name\":\"string\",\"Description\":\"string\",\"Users\":\"Core.Data.User\"};\r\nAventus.Converter.register(Data.Group.Fullname, Data.Group);\r\n_.Data.Group=Data.Group;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.User","isStrong":false}],"fullName":"Core.Data.Group","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Routes.GroupRouter=class GroupRouter extends AventusSharp.Routes.StorableRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n    }\n    StorableName() {\n        return \"Group\";\n    }\n}\nRoutes.GroupRouter.Namespace=`Core.Routes`;\r\n_.Routes.GroupRouter=Routes.GroupRouter;\r\n","dependances":[{"fullName":"AventusSharp.Routes.StorableRoute","isStrong":true},{"fullName":"Core.Data.Group","isStrong":false},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false}],"fullName":"Core.Routes.GroupRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Routes.UserRouter=class UserRouter extends AventusSharp.Routes.StorableRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.GetConnected = this.GetConnected.bind(this);\n    }\n    async GetConnected() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/getconnected`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n    StorableName() {\n        return \"User\";\n    }\n}\nRoutes.UserRouter.Namespace=`Core.Routes`;\r\n_.Routes.UserRouter=Routes.UserRouter;\r\n","dependances":[{"fullName":"AventusSharp.Routes.StorableRoute","isStrong":true},{"fullName":"Core.Data.User","isStrong":false},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false}],"fullName":"Core.Routes.UserRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"let Addon=class Addon {\n    static dependances = {};\n    static need(application, addons) {\n        if (addons.length == 0)\n            return;\n        if (application instanceof System.AppIcon) {\n            let cst = application.constructor;\n            application = cst.Fullname.split(\".\")[0];\n        }\n        this.dependances[application] = addons;\n    }\n    static async loadForApp(application) {\n        if (!this.dependances[application])\n            return;\n        let proms = [];\n        for (let dep of this.dependances[application]) {\n            proms.push(this.load(dep));\n        }\n        await Promise.all(proms);\n    }\n    static async load(name) {\n        await Aventus.ResourceLoader.loadInHead({\n            url: \"/addon/\" + name + \".js?v=\" + coreVersion,\n            type: \"js\"\n        });\n    }\n}\nAddon.Namespace=`Core`;\r\n_.Addon=Addon;\r\n","dependances":[{"fullName":"Core.AddonsName","isStrong":true},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.ResourceLoader","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false}],"fullName":"Core.Addon","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"State.DesktopStateManager=class DesktopStateManager extends Aventus.StateManager {\n    /**\n     * Get the instance of the StateManager\n     */\n    static getInstance() {\n        return Aventus.Instance.get(State.DesktopStateManager);\n    }\n}\nState.DesktopStateManager.Namespace=`Core.State`;\r\n_.State.DesktopStateManager=State.DesktopStateManager;\r\n","dependances":[{"fullName":"Aventus.StateManager","isStrong":true},{"fullName":"Aventus.IStateManager","isStrong":true},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Core.State.DesktopStateManager","isStrong":false}],"fullName":"Core.State.DesktopStateManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"(function (SpecialTouch) {\n    SpecialTouch[SpecialTouch[\"Backspace\"] = 0] = \"Backspace\";\n    SpecialTouch[SpecialTouch[\"Insert\"] = 1] = \"Insert\";\n    SpecialTouch[SpecialTouch[\"End\"] = 2] = \"End\";\n    SpecialTouch[SpecialTouch[\"PageDown\"] = 3] = \"PageDown\";\n    SpecialTouch[SpecialTouch[\"PageUp\"] = 4] = \"PageUp\";\n    SpecialTouch[SpecialTouch[\"Escape\"] = 5] = \"Escape\";\n    SpecialTouch[SpecialTouch[\"AltGraph\"] = 6] = \"AltGraph\";\n    SpecialTouch[SpecialTouch[\"Control\"] = 7] = \"Control\";\n    SpecialTouch[SpecialTouch[\"Alt\"] = 8] = \"Alt\";\n    SpecialTouch[SpecialTouch[\"Shift\"] = 9] = \"Shift\";\n    SpecialTouch[SpecialTouch[\"CapsLock\"] = 10] = \"CapsLock\";\n    SpecialTouch[SpecialTouch[\"Tab\"] = 11] = \"Tab\";\n    SpecialTouch[SpecialTouch[\"Delete\"] = 12] = \"Delete\";\n    SpecialTouch[SpecialTouch[\"ArrowRight\"] = 13] = \"ArrowRight\";\n    SpecialTouch[SpecialTouch[\"ArrowLeft\"] = 14] = \"ArrowLeft\";\n    SpecialTouch[SpecialTouch[\"ArrowUp\"] = 15] = \"ArrowUp\";\n    SpecialTouch[SpecialTouch[\"ArrowDown\"] = 16] = \"ArrowDown\";\n    SpecialTouch[SpecialTouch[\"Enter\"] = 17] = \"Enter\";\n})(Lib.SpecialTouch || (Lib.SpecialTouch = {}));\n_.Lib.SpecialTouch=Lib.SpecialTouch;\r\n","dependances":[],"fullName":"Core.Lib.SpecialTouch","required":false,"type":6,"isExported":true,"convertibleName":""},{"code":"Components.ContextMenuSeparator = class ContextMenuSeparator extends Aventus.WebComponent {\n    priority = 0;\n    menu;\n    canBeRendered = () => true;\n    static __style = `:host{margin:5px 0px;background-color:var(--text-color);height:1px}`;\n    __getStatic() {\n        return ContextMenuSeparator;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ContextMenuSeparator.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"ContextMenuSeparator\";\n    }\n}\nComponents.ContextMenuSeparator.Namespace=`Core.Components`;\nComponents.ContextMenuSeparator.Tag=`rk-context-menu-separator`;\n_.Components.ContextMenuSeparator=Components.ContextMenuSeparator;\nif(!window.customElements.get('rk-context-menu-separator')){window.customElements.define('rk-context-menu-separator', Components.ContextMenuSeparator);Aventus.WebComponentInstance.registerDefinition(Components.ContextMenuSeparator);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"Core.Components.ContextMenuItem","isStrong":false},{"fullName":"Core.Components.ContextMenuSeparator","isStrong":false}],"fullName":"Core.Components.ContextMenuSeparator","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-context-menu-separator"},{"code":"Components.Collapse = class Collapse extends Aventus.WebComponent {\n    get 'open'() { return this.getBoolAttr('open') }\n    set 'open'(val) { this.setBoolAttr('open', val) }\rget 'no_animation'() { return this.getBoolAttr('no_animation') }\n    set 'no_animation'(val) { this.setBoolAttr('no_animation', val) }\r    change = new Aventus.Callback();\n    static __style = `:host{--_collapse-width: var(--collapse-width, 100%)}:host{width:var(--_collapse-width)}:host .title{cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0)}:host .collapse{display:grid;grid-template-rows:0fr;transition:.5s var(--bezier-curve) grid-template-rows;width:var(--_collapse-width)}:host .collapse .content{overflow:hidden;width:var(--_collapse-width)}:host([open]) .collapse{grid-template-rows:1fr}:host([no_animation]) .collapse{transition:none}`;\n    __getStatic() {\n        return Collapse;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Collapse.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'header':`<slot name=\"header\"></slot>`,'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"title\" _id=\"collapse_0\">\r    <slot name=\"header\"></slot>\r</div><div class=\"collapse\" _id=\"collapse_1\">\r    <div class=\"content\">\r        <slot></slot>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"events\": [\n    {\n      \"eventName\": \"transitionend\",\n      \"id\": \"collapse_1\",\n      \"fct\": (e, c) => c.comp.transitionEnd(e)\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"collapse_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleOpen(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Collapse\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('open')) { this.attributeChangedCallback('open', false, false); }\rif(!this.hasAttribute('no_animation')) { this.attributeChangedCallback('no_animation', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('open');\rthis.__upgradeProperty('no_animation');\r }\n    __listBoolProps() { return [\"open\",\"no_animation\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    transitionEnd(e) {\n        let cst = e.constructor;\n        const new_e = new cst(e.type, e);\n        this.dispatchEvent(new_e);\n    }\n    toggleOpen() {\n        this.open = !this.open;\n        this.change.trigger([this.open]);\n    }\n}\nComponents.Collapse.Namespace=`Core.Components`;\nComponents.Collapse.Tag=`rk-collapse`;\n_.Components.Collapse=Components.Collapse;\nif(!window.customElements.get('rk-collapse')){window.customElements.define('rk-collapse', Components.Collapse);Aventus.WebComponentInstance.registerDefinition(Components.Collapse);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Event","isStrong":false}],"fullName":"Core.Components.Collapse","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-collapse"},{"code":"Components.ContextMenuItem = class ContextMenuItem extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"text\", \"icon\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'text'() { return this.getStringProp('text') }\n    set 'text'(val) { this.setStringAttr('text', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\r    priority = 0;\n    action = () => { };\n    menu;\n    canBeRendered = () => true;\n    static __style = `:host{align-items:center;border-radius:var(--border-radius-sm);cursor:pointer;display:flex;font-size:var(--font-size);margin:0 5px;padding:5px 10px;-webkit-tap-highlight-color:rgba(0,0,0,0);transition:background-color .2s linear}:host .title{margin-left:30px}:host .icon{display:none;font-size:var(--font-size-sm);margin-right:10px;width:20px}:host([icon]) .title{margin-left:0px}:host([icon]) .icon{display:inline-block}@media screen and (min-width: 1225px){:host{font-size:var(--font-size)}:host .icon{font-size:var(--font-size)}:host(:hover){background-color:var(--darker)}}`;\n    constructor() { super(); \rthis.onPress=this.onPress.bind(this) }\n    __getStatic() {\n        return ContextMenuItem;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ContextMenuItem.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<template _id=\"contextmenuitem_0\"></template><div class=\"title\" _id=\"contextmenuitem_3\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"contextmenuitem_3°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__75e8d9b88cdfe8a028412b25f4042b69method3())}`,\n      \"once\": true\n    }\n  }\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r    <mi-icon class=\"icon\" _id=\"contextmenuitem_1\"></mi-icon>\r`);\rtempl0.setActions({\n  \"content\": {\n    \"contextmenuitem_1°icon\": {\n      \"fct\": (c) => `${c.print(c.comp.__75e8d9b88cdfe8a028412b25f4042b69method1())}`\n    }\n  }\n});\rconst templ1 = new Aventus.Template(this);\rtempl1.setTemplate(`\r    <rk-img class=\"icon\" _id=\"contextmenuitem_2\"></rk-img>\r`);\rtempl1.setActions({\n  \"content\": {\n    \"contextmenuitem_2°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__75e8d9b88cdfe8a028412b25f4042b69method2())}`,\n      \"once\": true\n    }\n  }\n});\rthis.__getStatic().__template.addIf({\n                    anchorId: 'contextmenuitem_0',\n                    parts: [{\n                    condition: (c) => c.comp.__75e8d9b88cdfe8a028412b25f4042b69method0(),\n                    template: templ0\n                },{once: true,\n                    condition: (c) => true,\n                    template: templ1\n                }]\n            });\r }\n    getClassName() {\n        return \"ContextMenuItem\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('text')){ this['text'] = \"\"; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('text');\rthis.__upgradeProperty('icon');\r }\n    onPress() {\n        this.action();\n        this.menu.close();\n    }\n    postCreation() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                this.onPress();\n            }\n        });\n    }\n    __75e8d9b88cdfe8a028412b25f4042b69method1() {\n        return this.icon?.replace('@mi:', '');\n    }\n    __75e8d9b88cdfe8a028412b25f4042b69method2() {\n        return this.icon;\n    }\n    __75e8d9b88cdfe8a028412b25f4042b69method3() {\n        return this.text;\n    }\n    __75e8d9b88cdfe8a028412b25f4042b69method0() {\n        return this.icon?.startsWith(\"@mi:\");\n    }\n}\nComponents.ContextMenuItem.Namespace=`Core.Components`;\nComponents.ContextMenuItem.Tag=`rk-context-menu-item`;\n_.Components.ContextMenuItem=Components.ContextMenuItem;\nif(!window.customElements.get('rk-context-menu-item')){window.customElements.define('rk-context-menu-item', Components.ContextMenuItem);Aventus.WebComponentInstance.registerDefinition(Components.ContextMenuItem);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"Core.Components.ContextMenuItem","isStrong":false},{"fullName":"Core.Components.ContextMenuSeparator","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.ContextMenuItem","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-context-menu-item"},{"code":"Components.ContextMenu = class ContextMenu extends Aventus.WebComponent {\n    static instance;\n    _items = [];\n    isTouch = false;\n    static __style = `:host{--scrollbar-container-display: flex;background-color:#fff;border-radius:var(--border-radius-sm);box-shadow:var(--elevation-3);cursor:pointer;display:flex;flex-direction:column;outline:none;overflow:hidden;position:absolute;-webkit-tap-highlight-color:rgba(0,0,0,0);z-index:502}:host .container{display:flex;flex-direction:column;padding:5px 0}`;\n    __getStatic() {\n        return ContextMenu;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ContextMenu.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<rk-scrollable floating_scroll>\r    <rk-collapse _id=\"contextmenu_0\">\r        <div class=\"container\" _id=\"contextmenu_1\">\r        </div>\r    </rk-collapse>\r</rk-scrollable>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"collapseEl\",\n      \"ids\": [\n        \"contextmenu_0\"\n      ]\n    },\n    {\n      \"name\": \"containerEl\",\n      \"ids\": [\n        \"contextmenu_1\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"ContextMenu\";\n    }\n    init(pageX, pageY, isTouch, element) {\n        let el = Aventus.ElementExtension.getElementAtPosition(pageX, pageY, element);\n        this.isTouch = isTouch;\n        while (el) {\n            let temp = el;\n            if (temp.onContextMenu) {\n                let stop = false;\n                temp.onContextMenu(this, () => {\n                    stop = true;\n                });\n                if (stop) {\n                    break;\n                }\n            }\n            if (el == element) {\n                break;\n            }\n            if (el instanceof ShadowRoot) {\n                el = el.host;\n            }\n            else {\n                el = el.parentNode;\n            }\n        }\n        if (this._items.length == 0) {\n            return;\n        }\n        this._items.sort((a, b) => b.priority - a.priority);\n        for (let i = 0; i < this._items.length; i++) {\n            if (!this._items[i].canBeRendered(this._items, this._items[i])) {\n                this._items.splice(i, 1);\n                i--;\n            }\n        }\n        // remove first separator\n        if (this._items[0] instanceof Components.ContextMenuSeparator) {\n            this._items.splice(0, 1);\n            if (this._items.length == 0) {\n                return;\n            }\n        }\n        // remove last separator\n        let lastIndex = this._items.length - 1;\n        if (this._items[lastIndex] instanceof Components.ContextMenuSeparator) {\n            this._items.splice(lastIndex, 1);\n            if (this._items.length == 0) {\n                return;\n            }\n        }\n        for (let item of this._items) {\n            item.menu = this;\n            this.containerEl.appendChild(item);\n        }\n        this.calculatePosition(pageX, pageY, element);\n        element.shadowRoot.appendChild(this);\n    }\n    calculatePosition(pageX, pageY, element) {\n        this.style.left = -1000 + 'px';\n        this.style.top = '0';\n        this.collapseEl.no_animation = true;\n        this.collapseEl.open = true;\n        document.body.appendChild(this);\n        let height = this.offsetHeight;\n        let width = this.offsetWidth;\n        this.collapseEl.open = false;\n        this.collapseEl.no_animation = false;\n        document.body.removeChild(this);\n        let top = '';\n        let left = '';\n        let bottom = '';\n        let right = '';\n        let maxHeight = element.offsetHeight;\n        if (height > element.offsetHeight) {\n            if (pageY > element.offsetHeight / 2) {\n                let bottomNb = element.offsetHeight - pageY;\n                bottom = bottomNb + 'px';\n                maxHeight = element.offsetHeight - bottomNb;\n            }\n            else {\n                top = pageY + 'px';\n                maxHeight = element.offsetHeight - pageY;\n            }\n        }\n        else {\n            if (pageY + height > element.offsetHeight) {\n                let bottomNb = element.offsetHeight - pageY;\n                bottom = bottomNb + 'px';\n                maxHeight = element.offsetHeight - bottomNb;\n            }\n            else {\n                top = pageY + 'px';\n                // maxHeight = element.offsetHeight - pageY;\n            }\n        }\n        if (pageX + width > element.offsetWidth) {\n            right = element.offsetWidth - pageX + 'px';\n        }\n        else {\n            left = pageX + 'px';\n        }\n        this.style.top = top;\n        this.style.left = left;\n        this.style.bottom = bottom;\n        this.style.right = right;\n        this.style.maxHeight = (maxHeight - 20) + 'px';\n    }\n    addItem(item) {\n        let converted;\n        if (!(item instanceof Components.ContextMenuItem)) {\n            let temp = new Components.ContextMenuItem();\n            temp.priority = item.priority ?? 0;\n            if (item.icon) {\n                temp.icon = item.icon;\n            }\n            else if (item.materialIcon) {\n                temp.icon = \"@mi:\" + item.materialIcon;\n            }\n            temp.text = item.text;\n            temp.action = item.action;\n            if (item.canBeRendered)\n                temp.canBeRendered = item.canBeRendered;\n            converted = temp;\n        }\n        else {\n            converted = item;\n        }\n        this._items.push(converted);\n    }\n    addSeparator(item) {\n        let converted;\n        if (!(item instanceof Components.ContextMenuSeparator)) {\n            let temp = new Components.ContextMenuSeparator();\n            temp.priority = item?.priority ?? 0;\n            if (item?.canBeRendered)\n                temp.canBeRendered = item.canBeRendered;\n            converted = temp;\n        }\n        else {\n            converted = item;\n        }\n        this._items.push(converted);\n    }\n    addFocus() {\n        this.setAttribute(\"tabindex\", \"-1\");\n        this.collapseEl.addEventListener(\"transitionend\", (event) => {\n            if (this.collapseEl.open) {\n                this.focus({ preventScroll: true });\n            }\n            else {\n                this.remove();\n            }\n        });\n        this.addEventListener(\"blur\", (e) => {\n            e.stopPropagation();\n            this.collapseEl.open = false;\n            Components.ContextMenu.instance = undefined;\n        });\n    }\n    close() {\n        this.collapseEl.open = false;\n        Components.ContextMenu.instance = undefined;\n    }\n    postCreation() {\n        if (Components.ContextMenu.instance) {\n            Components.ContextMenu.instance.collapseEl.open = false;\n        }\n        Components.ContextMenu.instance = this;\n        setTimeout(() => {\n            this.collapseEl.open = true;\n        }, 100);\n        this.addFocus();\n    }\n}\nComponents.ContextMenu.Namespace=`Core.Components`;\nComponents.ContextMenu.Tag=`rk-context-menu`;\n_.Components.ContextMenu=Components.ContextMenu;\nif(!window.customElements.get('rk-context-menu')){window.customElements.define('rk-context-menu', Components.ContextMenu);Aventus.WebComponentInstance.registerDefinition(Components.ContextMenu);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Collapse","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.ContextMenuItem","isStrong":false},{"fullName":"Core.Components.ContextMenuSeparator","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"ShadowRoot","isStrong":false},{"fullName":"Node","isStrong":false},{"fullName":"Aventus.ElementExtension","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"Core.Components.IContextMenu","isStrong":false},{"fullName":"Core.Components.ContextMenuItemOption","isStrong":false},{"fullName":"Core.Components.ContextMenuSeparatorOption","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Collapse","isStrong":false}],"fullName":"Core.Components.ContextMenu","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-context-menu"},{"code":"System.Loading = class Loading extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"text\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'background'() { return this.getBoolAttr('background') }\n    set 'background'(val) { this.setBoolAttr('background', val) }\r    get 'text'() { return this.getStringProp('text') }\n    set 'text'(val) { this.setStringAttr('text', val) }\r    static __style = `:host{--internal-dot-size: var(--dot-size, 12px);--internal-radius: var(--radius, 50px);--internal-loading-color: var(--loading-color, var(--primary-color, white));--internal-loading-background-color: var(--loading-background-color, var(--emphasize, rgba(0, 0, 0, 0.5)))}:host{align-items:center;background-color:var(--internal-loading-background-color);display:flex;flex-direction:column;height:100%;justify-content:center;left:0;position:absolute;top:0;width:100%;z-index:600}:host .dot-container{--center: (var(--internal-radius) - (var(--internal-dot-size) / 2));display:inline-block;height:calc(var(--internal-radius)*2);position:relative;width:calc(var(--internal-radius)*2);z-index:10}:host .dot-container .dot{animation:lds-default 1.2s linear infinite;background:var(--internal-loading-color);border-radius:var(--border-radius-round);height:var(--internal-dot-size);position:absolute;width:var(--internal-dot-size)}:host .dot-container .dot:nth-child(1){--angle: 0deg;animation-delay:0s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(2){--angle: -30deg;animation-delay:-0.1s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(3){--angle: -60deg;animation-delay:-0.2s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(4){--angle: -90deg;animation-delay:-0.3s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(5){--angle: -120deg;animation-delay:-0.4s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(6){--angle: -150deg;animation-delay:-0.5s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(7){--angle: 180deg;animation-delay:-0.6s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(8){--angle: 150deg;animation-delay:-0.7s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(9){--angle: 120deg;animation-delay:-0.8s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(10){--angle: 90deg;animation-delay:-0.9s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(11){--angle: 60deg;animation-delay:-1s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .dot-container .dot:nth-child(12){--angle: 30deg;animation-delay:-1.1s;left:calc(cos(var(--angle))*var(--internal-radius) + var(--center));top:calc(sin(var(--angle))*var(--internal-radius) + var(--center))}:host .text{color:var(--internal-loading-color);font-size:var(--font-size-lg);font-weight:bold;letter-spacing:1px;margin-top:25px;padding:0 15px;text-align:center;z-index:10}@keyframes lds-default{0%,20%,80%,100%{transform:scale(1)}50%{transform:scale(1.5)}}:host([background]){background-color:#08162e;background-image:url('data:image/svg+xml;utf8,<svg version=\"1.1\" viewBox=\"0 0 65.98 57.373\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"%23acf4d6\"><path d=\"M 33.949 5.731 L 22.7 5.731 L 22.7 0.001 L 33.788 0.001 C 45.619 0.001 46.363 17.934 36.124 20.216 C 35.379 20.428 34.637 20.48 33.788 20.48 L 28.483 20.48 L 28.483 20.534 L 28.483 34.433 L 22.7 34.433 L 22.7 14.697 L 28.483 20.534 L 42.491 34.433 L 50.342 34.433 L 30.605 14.697 L 33.949 14.697 C 38.883 14.697 38.883 5.731 33.949 5.731 Z\" style=\"\" /></g><g fill=\"%23FFF\"><path d=\"M 7.8 53.573 L 4.94 48.993 L 3.22 48.993 L 3.22 53.573 L 0 53.573 L 0 39.573 L 4.98 39.573 C 8.12 39.573 10.2 41.473 10.2 44.393 C 10.2 46.253 9.32 47.653 7.84 48.373 L 11.2 53.573 L 7.8 53.573 Z M 3.22 42.533 L 3.22 46.253 L 4.78 46.253 C 6.08 46.253 6.98 45.793 6.98 44.393 C 6.98 43.013 6.08 42.533 4.78 42.533 L 3.22 42.533 Z M 20.3 43.173 L 23.46 43.173 L 23.46 53.573 L 20.3 53.573 L 20.3 52.533 C 20.16 52.893 19.22 53.773 17.62 53.773 C 15.24 53.773 12.5 52.073 12.5 48.353 C 12.5 44.773 15.24 42.993 17.62 42.993 C 19.22 42.993 20.16 43.913 20.3 44.133 L 20.3 43.173 Z M 18.08 50.993 C 19.38 50.993 20.44 50.093 20.44 48.353 C 20.44 46.673 19.38 45.773 18.08 45.773 C 16.72 45.773 15.56 46.693 15.56 48.353 C 15.56 50.073 16.72 50.993 18.08 50.993 Z M 33.94 43.133 L 37.08 43.133 L 30.72 57.373 L 27.56 57.373 L 29.48 53.213 L 24.98 43.133 L 28.12 43.133 L 31.04 49.813 L 33.94 43.133 Z M 42.58 53.733 C 40.64 53.733 38.66 52.433 38.66 49.133 L 38.66 43.173 L 41.82 43.173 L 41.82 48.913 C 41.82 50.493 42.36 50.993 43.36 50.993 C 44.78 50.993 45.6 49.613 45.8 49.013 L 45.8 43.173 L 48.96 43.173 L 48.96 53.573 L 45.8 53.573 L 45.8 51.773 C 45.6 52.273 44.54 53.733 42.58 53.733 Z M 58.2 53.573 L 54.82 49.533 L 54.16 50.233 L 54.16 53.573 L 51 53.573 L 51 49.793 L 51 39.433 L 54.16 39.433 L 54.16 46.373 L 57.1 43.173 L 60.88 43.173 L 56.76 47.513 L 61.8 53.573 L 58.2 53.573 Z M 65.98 39.433 L 65.98 42.093 L 62.82 42.093 L 62.82 39.433 L 65.98 39.433 Z M 65.98 43.173 L 65.98 53.573 L 62.82 53.573 L 62.82 43.173 L 65.98 43.173 Z\" /></g></svg>');background-position:center center;background-repeat:no-repeat;background-size:50% 50%}:host([background])::after{content:\"\";position:absolute;inset:0;background-color:rgba(0,0,0,.5);z-index:1}`;\n    __getStatic() {\n        return Loading;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Loading.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"dot-container\">\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r    <div class=\"dot\"></div>\r</div><div class=\"text\" _id=\"loading_0\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"loading_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__f449123065aa1f6c0a81c7fbf3673938method0())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"Loading\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('background')) { this.attributeChangedCallback('background', false, false); }\rif(!this.hasAttribute('text')){ this['text'] = \"\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('background');\rthis.__upgradeProperty('text');\r }\n    __listBoolProps() { return [\"background\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    onContextMenu(contextMenu, stop) {\n        stop();\n    }\n    __f449123065aa1f6c0a81c7fbf3673938method0() {\n        return this.text;\n    }\n}\nSystem.Loading.Namespace=`Core.System`;\nSystem.Loading.Tag=`rk-loading`;\n_.System.Loading=System.Loading;\nif(!window.customElements.get('rk-loading')){window.customElements.define('rk-loading', System.Loading);Aventus.WebComponentInstance.registerDefinition(System.Loading);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.IContextMenu","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Core.System.Loading","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-loading"},{"code":"Components.ContextMenuElement = class ContextMenuElement extends Aventus.WebComponent {\n    static __style = `:host{display:block}`;\n    __getStatic() {\n        return ContextMenuElement;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ContextMenuElement.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"ContextMenuElement\";\n    }\n    onContextMenu(contextMenu, stop) {\n    }\n}\nComponents.ContextMenuElement.Namespace=`Core.Components`;\nComponents.ContextMenuElement.Tag=`rk-context-menu-element`;\n_.Components.ContextMenuElement=Components.ContextMenuElement;\nif(!window.customElements.get('rk-context-menu-element')){window.customElements.define('rk-context-menu-element', Components.ContextMenuElement);Aventus.WebComponentInstance.registerDefinition(Components.ContextMenuElement);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.IContextMenu","isStrong":true},{"fullName":"Core.Components.ContextMenu","isStrong":false}],"fullName":"Core.Components.ContextMenuElement","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-context-menu-element"},{"code":"Lib.ShortcutManager=class ShortcutManager {\n    static memory = {};\n    static isInit = false;\n    static arrayKeys = [];\n    static getText(combinaison) {\n        let allTouches = [];\n        for (let touch of combinaison) {\n            let realTouch = \"\";\n            if (typeof touch == \"number\" && Lib.SpecialTouch[touch] !== undefined) {\n                realTouch = Lib.SpecialTouch[touch];\n            }\n            else if (touch.match(/[a-zA-Z0-9]/g)) {\n                realTouch = touch;\n            }\n            else {\n                throw \"I can't use \" + touch + \" to add a shortcut\";\n            }\n            allTouches.push(realTouch);\n        }\n        allTouches.sort();\n        return allTouches.join(\"+\");\n    }\n    static subscribe(combinaison, cb) {\n        let key = this.getText(combinaison);\n        if (!Lib.ShortcutManager.memory[key]) {\n            Lib.ShortcutManager.memory[key] = [];\n        }\n        if (!Lib.ShortcutManager.memory[key].includes(cb)) {\n            Lib.ShortcutManager.memory[key].push(cb);\n        }\n        if (!Lib.ShortcutManager.isInit) {\n            Lib.ShortcutManager.init();\n        }\n    }\n    static unsubscribe(combinaison, cb) {\n        let key = this.getText(combinaison);\n        if (Lib.ShortcutManager.memory[key]) {\n            let index = Lib.ShortcutManager.memory[key].indexOf(cb);\n            if (index != -1) {\n                Lib.ShortcutManager.memory[key].splice(index, 1);\n                if (Lib.ShortcutManager.memory[key].length == 0) {\n                    delete Lib.ShortcutManager.memory[key];\n                }\n                if (Object.keys(Lib.ShortcutManager.memory).length == 0 && Lib.ShortcutManager.isInit) {\n                    Lib.ShortcutManager.uninit();\n                }\n            }\n        }\n    }\n    static onKeyDown(e) {\n        if (e.ctrlKey) {\n            let txt = Lib.SpecialTouch[Lib.SpecialTouch.Control];\n            if (!this.arrayKeys.includes(txt)) {\n                this.arrayKeys.push(txt);\n            }\n        }\n        if (e.altKey) {\n            let txt = Lib.SpecialTouch[Lib.SpecialTouch.Alt];\n            if (!this.arrayKeys.includes(txt)) {\n                this.arrayKeys.push(txt);\n            }\n        }\n        if (e.shiftKey) {\n            let txt = Lib.SpecialTouch[Lib.SpecialTouch.Shift];\n            if (!this.arrayKeys.includes(txt)) {\n                this.arrayKeys.push(txt);\n            }\n        }\n        if (e.key.match(/[a-zA-Z0-9]/g) && !this.arrayKeys.includes(e.key)) {\n            this.arrayKeys.push(e.key);\n        }\n        else if (Lib.SpecialTouch[e.key] !== undefined && !this.arrayKeys.includes(e.key)) {\n            this.arrayKeys.push(e.key);\n        }\n        this.arrayKeys.sort();\n        let key = this.arrayKeys.join(\"+\");\n        if (Lib.ShortcutManager.memory[key]) {\n            e.preventDefault();\n            this.arrayKeys = [];\n            for (let cb of Lib.ShortcutManager.memory[key]) {\n                cb();\n            }\n        }\n    }\n    static onKeyUp(e) {\n        let index = this.arrayKeys.indexOf(e.key);\n        if (index != -1) {\n            this.arrayKeys.splice(index, 1);\n        }\n    }\n    static init() {\n        Lib.ShortcutManager.isInit = true;\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onKeyUp = this.onKeyUp.bind(this);\n        window.addEventListener(\"blur\", () => {\n            this.arrayKeys = [];\n        });\n        document.body.addEventListener(\"keydown\", this.onKeyDown);\n        document.body.addEventListener(\"keyup\", this.onKeyUp);\n    }\n    static uninit() {\n        document.body.removeEventListener(\"keydown\", this.onKeyDown);\n        document.body.removeEventListener(\"keyup\", this.onKeyUp);\n        this.arrayKeys = [];\n        Lib.ShortcutManager.isInit = false;\n    }\n}\nLib.ShortcutManager.Namespace=`Core.Lib`;\r\n_.Lib.ShortcutManager=Lib.ShortcutManager;\r\n","dependances":[{"fullName":"Core.Lib.SpecialTouch","isStrong":false},{"fullName":"Core.Lib.ShortcutManager","isStrong":false},{"fullName":"KeyboardEvent","isStrong":false}],"fullName":"Core.Lib.ShortcutManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.ApplicationShortcut=class ApplicationShortcut {\n    application;\n    cmds = [];\n    is_cmd = false;\n    constructor(application) {\n        this.application = application;\n        this.startCmd = this.startCmd.bind(this);\n        this.stopCmd = this.stopCmd.bind(this);\n        this.printState = this.printState.bind(this);\n    }\n    init() {\n        this.cmds = this.defineCmds();\n    }\n    /**\n     *  Defines the keyboard shortcuts for the application.\n     */\n    defaultShortcut() {\n        return [\n            [[Lib.SpecialTouch.Control, Lib.SpecialTouch.ArrowLeft], this.application.moveApplicationToLeft],\n            [[Lib.SpecialTouch.Control, Lib.SpecialTouch.ArrowRight], this.application.moveApplicationToRight],\n            [[Lib.SpecialTouch.Control, 'k'], this.startCmd],\n        ];\n    }\n    manageShortcut() {\n        let shortcuts = this.defaultShortcut();\n        let customShortcut = this.application.defineShortcut();\n        for (let shortcut of customShortcut) {\n            shortcuts.push(shortcut);\n        }\n        if (this.application.is_desktop_active) {\n            for (let shortcut of shortcuts) {\n                Lib.ShortcutManager.subscribe(shortcut[0], shortcut[1]);\n            }\n        }\n        else {\n            for (let shortcut of shortcuts) {\n                Lib.ShortcutManager.unsubscribe(shortcut[0], shortcut[1]);\n            }\n        }\n    }\n    defineCmds() {\n        return [\n            [['s'], this.runCmd(this.printState)],\n        ];\n    }\n    startCmd() {\n        for (let cmd of this.cmds) {\n            Lib.ShortcutManager.subscribe(cmd[0], cmd[1]);\n        }\n        this.is_cmd = true;\n        setTimeout(() => {\n            this.stopCmd();\n        }, 2000);\n    }\n    stopCmd() {\n        if (!this.is_cmd)\n            return;\n        this.is_cmd = false;\n        for (let cmd of this.cmds) {\n            Lib.ShortcutManager.unsubscribe(cmd[0], cmd[1]);\n        }\n    }\n    runCmd(fct) {\n        return () => {\n            try {\n                fct();\n            }\n            catch {\n            }\n            this.stopCmd();\n        };\n    }\n    printState() {\n        console.log(this.application.navigator.getState());\n    }\n}\nSystem.ApplicationShortcut.Namespace=`Core.System`;\r\n_.System.ApplicationShortcut=System.ApplicationShortcut;\r\n","dependances":[{"fullName":"Core.Lib.SpecialTouch","isStrong":false},{"fullName":"Core.Lib.ShortcutManager","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.System.Application","isStrong":false}],"fullName":"Core.System.ApplicationShortcut","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Data.DekstopConfiguration=class DekstopConfiguration extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.DekstopConfiguration, Core\"; }\n    Background;\n    Data;\n    BackgroundSize = Data.BackgroundSize.Cover;\n    SyncDesktop = false;\n    SizeMobile = 85;\n    SizeTablet = 75;\n    SizeDesktop = 65;\n    BackgroundColor = undefined;\n}\nData.DekstopConfiguration.Namespace=`Core.Data`;\r\nData.DekstopConfiguration.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Background\":\"Core.Data.DataTypes.ImageFile\",\"BackgroundSize\":\"BackgroundSize\",\"SyncDesktop\":\"boolean\",\"SizeMobile\":\"number\",\"SizeTablet\":\"number\",\"SizeDesktop\":\"number\",\"BackgroundColor\":\"string\"};\r\nAventus.Converter.register(Data.DekstopConfiguration.Fullname, Data.DekstopConfiguration);\r\n_.Data.DekstopConfiguration=Data.DekstopConfiguration;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Background","isStrong":false},{"fullName":"Core.Data.DataTypes.ImageFile","isStrong":false},{"fullName":"Core.Data.BackgroundSize","isStrong":false}],"fullName":"Core.Data.DekstopConfiguration","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.DesktopAppIcon=class DesktopAppIcon extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.DesktopAppIcon, Core\"; }\n    Position;\n    DesktopId;\n    IconTag;\n    Location;\n}\nData.DesktopAppIcon.Namespace=`Core.Data`;\r\nData.DesktopAppIcon.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Position\":\"number\",\"DesktopId\":\"number\",\"IconTag\":\"string\",\"Location\":\"DesktopLocation\"};\r\nAventus.Converter.register(Data.DesktopAppIcon.Fullname, Data.DesktopAppIcon);\r\n_.Data.DesktopAppIcon=Data.DesktopAppIcon;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.DesktopLocation","isStrong":false}],"fullName":"Core.Data.DesktopAppIcon","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Websocket.Routes.DesktopRouter_SetDesktopIcon=class DesktopRouter_SetDesktopIcon extends AventusSharp.WebSocket.WsEvent {\n    /**\n     * @inheritdoc\n     */\n    path() {\n        return `${this.getPrefix()}/desktop/SetDesktopIcon`;\n    }\n    /**\n     * @inheritdoc\n     */\n    listenOnBoot() {\n        return true;\n    }\n}\nWebsocket.Routes.DesktopRouter_SetDesktopIcon.Namespace=`Core.Websocket.Routes`;\r\n_.Websocket.Routes.DesktopRouter_SetDesktopIcon=Websocket.Routes.DesktopRouter_SetDesktopIcon;\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.WsEvent","isStrong":true},{"fullName":"Core.Data.DesktopAppIcon","isStrong":false}],"fullName":"Core.Websocket.Routes.DesktopRouter_SetDesktopIcon","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Data.Desktop=class Desktop extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.Desktop, Core\"; }\n    Name;\n    Token;\n    UserId = undefined;\n    Configuration = new Data.DekstopConfiguration();\n    Icons = [];\n    Applications = [];\n}\nData.Desktop.Namespace=`Core.Data`;\r\nData.Desktop.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Name\":\"string\",\"Token\":\"string\",\"UserId\":\"number\",\"Configuration\":\"DekstopConfiguration\",\"Icons\":\"DesktopAppIcon\",\"Applications\":\"Core.Data.ApplicationOpen\"};\r\nAventus.Converter.register(Data.Desktop.Fullname, Data.Desktop);\r\n_.Data.Desktop=Data.Desktop;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.DekstopConfiguration","isStrong":false},{"fullName":"Core.Data.DesktopAppIcon","isStrong":false},{"fullName":"Core.Data.ApplicationOpen","isStrong":false}],"fullName":"Core.Data.Desktop","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Routes.DesktopRouter=class DesktopRouter extends AventusSharp.Routes.StorableRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n    }\n    StorableName() {\n        return \"Desktop\";\n    }\n}\nRoutes.DesktopRouter.Namespace=`Core.Routes`;\r\n_.Routes.DesktopRouter=Routes.DesktopRouter;\r\n","dependances":[{"fullName":"AventusSharp.Routes.StorableRoute","isStrong":true},{"fullName":"Core.Data.Desktop","isStrong":false},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false}],"fullName":"Core.Routes.DesktopRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.PageCase = class PageCase extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"case_width\", \"case_height\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'min_case_margin_left'() { return this.getNumberAttr('min_case_margin_left') }\n    set 'min_case_margin_left'(val) { this.setNumberAttr('min_case_margin_left', val) }\rget 'min_case_margin_top'() { return this.getNumberAttr('min_case_margin_top') }\n    set 'min_case_margin_top'(val) { this.setNumberAttr('min_case_margin_top', val) }\rget 'move_content'() { return this.getBoolAttr('move_content') }\n    set 'move_content'(val) { this.setBoolAttr('move_content', val) }\rget 'order_position'() { return this.getBoolAttr('order_position') }\n    set 'order_position'(val) { this.setBoolAttr('order_position', val) }\rget 'inverse'() { return this.getBoolAttr('inverse') }\n    set 'inverse'(val) { this.setBoolAttr('inverse', val) }\rget 'allow_scroll_outside'() { return this.getBoolAttr('allow_scroll_outside') }\n    set 'allow_scroll_outside'(val) { this.setBoolAttr('allow_scroll_outside', val) }\rget 'lock'() { return this.getBoolAttr('lock') }\n    set 'lock'(val) { this.setBoolAttr('lock', val) }\rget 'min_page_number'() { return this.getNumberAttr('min_page_number') }\n    set 'min_page_number'(val) { this.setNumberAttr('min_page_number', val) }\r    get 'case_width'() { return this.getNumberProp('case_width') }\n    set 'case_width'(val) { this.setNumberAttr('case_width', val) }\rget 'case_height'() { return this.getNumberProp('case_height') }\n    set 'case_height'(val) { this.setNumberAttr('case_height', val) }\r    casesEl = [];\n    pagesEl = [];\n    contentsEl = {};\n    nbCasePerPage = 0;\n    currentPageNumber = 0;\n    resizeObserver;\n    allow_resize = true;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"case_width\", ((target) => {\n    target.style.setProperty(\"--local-page-case-width\", target.case_width + 'px');\n    if (target.inverse) {\n        target.calculateGrid();\n    }\n}));\rthis.__addPropertyActions(\"case_height\", ((target) => {\n    target.style.setProperty(\"--local-page-case-height\", target.case_height + 'px');\n    if (target.inverse) {\n        target.calculateGrid();\n    }\n}));\r }\n    static __style = `:host{--internal-page-case-background: var(--page-case-background, transparent);--internal-page-case-background-active: var(--page-case-background-active, transparent);--internal-page-case-border-active: var(--page-case-border-active, none);--internal-page-case-border-radius:var(--page-case-border-radius, 0)}:host{display:block;width:100%;height:100%;position:relative;overflow:hidden}:host .page-hider{width:100%;height:100%;position:absolute;top:0;left:0}:host .slot-hider ::slotted(*){position:absolute;top:0;left:0;width:var(--local-page-case-width);height:var(--local-page-case-height)}:host([move_content]) .slot-hider{display:none}`;\n    __getStatic() {\n        return PageCase;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PageCase.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"page-hider\" _id=\"pagecase_0\">\r</div><div class=\"slot-hider\">\r    <slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"pageHider\",\n      \"ids\": [\n        \"pagecase_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"PageCase\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('min_case_margin_left')){ this['min_case_margin_left'] = 30; }\rif(!this.hasAttribute('min_case_margin_top')){ this['min_case_margin_top'] = 30; }\rif(!this.hasAttribute('move_content')) {this.setAttribute('move_content' ,'true'); }\rif(!this.hasAttribute('order_position')) { this.attributeChangedCallback('order_position', false, false); }\rif(!this.hasAttribute('inverse')) { this.attributeChangedCallback('inverse', false, false); }\rif(!this.hasAttribute('allow_scroll_outside')) { this.attributeChangedCallback('allow_scroll_outside', false, false); }\rif(!this.hasAttribute('lock')) { this.attributeChangedCallback('lock', false, false); }\rif(!this.hasAttribute('min_page_number')){ this['min_page_number'] = undefined; }\rif(!this.hasAttribute('case_width')){ this['case_width'] = 50; }\rif(!this.hasAttribute('case_height')){ this['case_height'] = 50; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('min_case_margin_left');\rthis.__upgradeProperty('min_case_margin_top');\rthis.__upgradeProperty('move_content');\rthis.__upgradeProperty('order_position');\rthis.__upgradeProperty('inverse');\rthis.__upgradeProperty('allow_scroll_outside');\rthis.__upgradeProperty('lock');\rthis.__upgradeProperty('min_page_number');\rthis.__upgradeProperty('case_width');\rthis.__upgradeProperty('case_height');\r }\n    __listBoolProps() { return [\"move_content\",\"order_position\",\"inverse\",\"allow_scroll_outside\",\"lock\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    addResizeObserver() {\n        this.resizeObserver = new Aventus.ResizeObserver(() => {\n            this.calculateGrid();\n        });\n        this.resizeObserver.observe(this);\n    }\n    calculateGrid() {\n        if (!this.allow_resize)\n            return;\n        let width = (this.offsetWidth - 1);\n        let height = this.offsetHeight;\n        if (width < 0) {\n            width = 0;\n        }\n        let columns = Math.floor(width / this.case_width);\n        let marginLeft = width - (this.case_width * columns);\n        marginLeft = Math.floor(marginLeft / columns);\n        while (marginLeft < this.min_case_margin_left) {\n            columns--;\n            marginLeft = width - (this.case_width * columns);\n            marginLeft = Math.floor(marginLeft / columns);\n            // if(marginLeft % 2 == 1) {\n            //     marginLeft--;\n            // }\n        }\n        let rows = Math.floor(height / this.case_height);\n        let marginTop = height - (this.case_height * rows);\n        marginTop = Math.floor(marginTop / rows);\n        while (marginTop < this.min_case_margin_top) {\n            rows--;\n            marginTop = height - (this.case_height * rows);\n            marginTop = Math.floor(marginTop / rows);\n            // if(marginTop % 2 == 1) {\n            //     marginTop--;\n            // }\n        }\n        this.style.setProperty(\"--local-page-case-margin-top\", marginTop + 'px');\n        this.style.setProperty(\"--local-page-case-margin-left\", marginLeft + 'px');\n        let nbCasePerPage = columns * rows;\n        this.nbCasePerPage = nbCasePerPage;\n        if (nbCasePerPage == 0) {\n            return;\n        }\n        let listInSlot = this.getElements();\n        let listInSlotLength = Object.keys(listInSlot).length;\n        let nbPage = Math.ceil(listInSlotLength / nbCasePerPage);\n        let min_page_number = this.min_page_number ?? 0;\n        if (nbPage < min_page_number) {\n            nbPage = min_page_number;\n        }\n        if (this.pageHider) {\n            this.pageHider.style.width = nbPage * 100 + '%';\n        }\n        let k = 0;\n        let maxRealCaseNumber = 0;\n        for (; k < nbPage; k++) {\n            var pageContainer;\n            if (k < this.pagesEl.length) {\n                pageContainer = this.pagesEl[k];\n                pageContainer.style.display = \"\";\n            }\n            else {\n                pageContainer = new Components.PageCaseContainer();\n                this.pageHider?.appendChild(pageContainer);\n                this.pagesEl.push(pageContainer);\n            }\n            pageContainer.style.width = (100 / nbPage) + '%';\n            for (var i = 0; i < nbCasePerPage; i++) {\n                var realCaseNumber = k * nbCasePerPage + i;\n                var realPosition = realCaseNumber;\n                if (this.inverse) {\n                    var tempRow = Math.floor(i / columns);\n                    var tempCol = i % columns;\n                    realPosition = tempCol * rows + tempRow;\n                    realPosition += k * nbCasePerPage;\n                }\n                if (realCaseNumber > maxRealCaseNumber) {\n                    maxRealCaseNumber = realCaseNumber;\n                }\n                var el;\n                if (realCaseNumber < this.casesEl.length) {\n                    el = this.casesEl[realCaseNumber];\n                }\n                else {\n                    el = new Components.PageCaseSlot();\n                    this.casesEl.push(el);\n                }\n                el.no = realPosition;\n                el.setAttribute(\"row\", Math.floor(i / columns) + \"\");\n                el.setAttribute(\"col\", i % columns + \"\");\n                pageContainer.appendChild(el);\n                if (listInSlot.hasOwnProperty(realPosition)) {\n                    el.item = listInSlot[realPosition];\n                    if (this.move_content) {\n                        el.appendChild(listInSlot[realPosition]);\n                    }\n                    else {\n                        el.item.style.transform = 'translateX(var(--page-container-scroll, 0))';\n                    }\n                }\n            }\n        }\n        for (; k < this.pagesEl.length; k++) {\n            this.pagesEl[k].style.display = 'none';\n        }\n        for (; maxRealCaseNumber + 1 < this.casesEl.length; maxRealCaseNumber++) {\n            this.casesEl[maxRealCaseNumber + 1].remove();\n        }\n        if (!this.move_content) {\n            this.recalculatePosition();\n        }\n    }\n    getElements() {\n        let listChild = this.getElementsInSlot();\n        listChild = [...Object.values(this.contentsEl), ...listChild];\n        const result = {};\n        if (this.order_position) {\n            for (var i = 0; i < listChild.length; i++) {\n                var position = Number(listChild[i].position ?? listChild[i].getAttribute(\"position\"));\n                if (isNaN(position)) {\n                    console.error(\"error position attribute isn't a number\");\n                }\n                else if (listChild[i].parentNode != null) {\n                    result[position] = listChild[i];\n                }\n            }\n        }\n        else {\n            for (var i = 0; i < listChild.length; i++) {\n                if (listChild[i].parentNode != null) {\n                    result[i] = listChild[i];\n                }\n            }\n        }\n        this.contentsEl = result;\n        return result;\n    }\n    recalculatePosition() {\n        for (var i = 0; i < this.casesEl.length; i++) {\n            var el = this.casesEl[i].item;\n            if (el) {\n                el.style.top = this.casesEl[i].offsetTop + 'px';\n                el.style.left = this.casesEl[i].offsetLeft + 'px';\n            }\n        }\n    }\n    addMoveAction() {\n        let max = 0;\n        let lastPosition = 0;\n        let firstPosition = 0;\n        if (!this.pageHider) {\n            return;\n        }\n        let pageHider = this.pageHider;\n        let stopProp = false;\n        let canApply = false;\n        new Aventus.DragAndDrop({\n            element: this.pageHider,\n            applyDrag: false,\n            stopPropagation: false,\n            isDragEnable: () => !this.lock,\n            onStart: () => {\n                max = (this.pagesEl.length - 1) * this.offsetWidth * -1;\n                firstPosition = pageHider.offsetLeft;\n                canApply = false;\n            },\n            onMove: (e, position) => {\n                if (!stopProp && (position.y > 20 || position.y < -20)) {\n                    canApply = true;\n                }\n                if (!canApply && (position.x > 20 || position.x < -20)) {\n                    stopProp = true;\n                }\n                if (canApply) {\n                    if (!this.allow_scroll_outside) {\n                        if (position.x > 0) {\n                            position.x = 0;\n                        }\n                        else if (position.x < max) {\n                            position.x = max;\n                        }\n                    }\n                    lastPosition = position.x;\n                    pageHider.style.left = position.x + 'px';\n                    this.style.setProperty(\"--page-container-scroll\", position.x + 'px');\n                }\n                if (stopProp) {\n                    e.stopImmediatePropagation();\n                }\n            },\n            onStop: () => {\n                stopProp = false;\n                var width = this.offsetWidth;\n                let diff = lastPosition - firstPosition;\n                if (diff < -300 || diff < (width / -4)) {\n                    //next page\n                    this.currentPageNumber += 1;\n                }\n                else if (diff > 300 || diff > (width / 4)) {\n                    this.currentPageNumber -= 1;\n                }\n                if (this.currentPageNumber < 0) {\n                    this.currentPageNumber = 0;\n                }\n                else if (this.currentPageNumber > this.pagesEl.length - 1) {\n                    this.currentPageNumber = this.pagesEl.length - 1;\n                }\n                this.displayCurrentPage();\n            }\n        });\n    }\n    displayCurrentPage() {\n        if (!this.pageHider) {\n            return;\n        }\n        let pageHider = this.pageHider;\n        var leftToGo = this.offsetWidth * this.currentPageNumber * -1;\n        var currentLeft = this.pageHider.offsetLeft;\n        var diff = leftToGo - currentLeft;\n        var step = diff / 50;\n        var i = 0;\n        if (!this.move_content) {\n            var interval = setInterval(() => {\n                currentLeft += step;\n                i++;\n                if (i == 50) {\n                    clearInterval(interval);\n                    pageHider.style.left = leftToGo + 'px';\n                    this.style.setProperty(\"--page-container-scroll\", leftToGo + 'px');\n                }\n                else {\n                    pageHider.style.left = currentLeft + 'px';\n                    this.style.setProperty(\"--page-container-scroll\", currentLeft + 'px');\n                }\n            }, 10);\n        }\n        else {\n            this.pageHider.style.transition = \"left 0.5s linear\";\n            setTimeout(() => {\n                pageHider.style.left = leftToGo + 'px';\n                setTimeout(() => {\n                    pageHider.style.transition = \"\";\n                }, 550);\n            });\n        }\n    }\n    reset() {\n        this.casesEl = [];\n        this.pagesEl = [];\n        this.contentsEl = {};\n        this.currentPageNumber = 0;\n        if (this.pageHider) {\n            this.pageHider.innerHTML = '';\n            this.pageHider.style.left = '';\n        }\n        this.style.removeProperty(\"--page-container-scroll\");\n        this.calculateGrid();\n    }\n    getElementAt(no) {\n        return this.contentsEl[no];\n    }\n    removeElementAt(no) {\n        const element = this.contentsEl[no];\n        if (element) {\n            delete this.contentsEl[no];\n            if (element.parentElement) {\n                element.remove();\n            }\n        }\n    }\n    postCreation() {\n        this.addResizeObserver();\n        this.addMoveAction();\n    }\n}\nComponents.PageCase.Namespace=`Core.Components`;\nComponents.PageCase.Tag=`rk-page-case`;\n_.Components.PageCase=Components.PageCase;\nif(!window.customElements.get('rk-page-case')){window.customElements.define('rk-page-case', Components.PageCase);Aventus.WebComponentInstance.registerDefinition(Components.PageCase);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.PageCase","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.PageCaseSlot","isStrong":false},{"fullName":"Core.Components.PageCaseContainer","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"Core.Components.IPositionable","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false}],"fullName":"Core.Components.PageCase","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-page-case"},{"code":"Routes.ApplicationRouter=class ApplicationRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.GetAll = this.GetAll.bind(this);\n        this.ConfigureAppData = this.ConfigureAppData.bind(this);\n        this.InstallDevApp = this.InstallDevApp.bind(this);\n        this.UninstallDevApp = this.UninstallDevApp.bind(this);\n        this.InstallApp = this.InstallApp.bind(this);\n    }\n    async GetAll() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/application`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n    async ConfigureAppData() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/configureApp/data`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n    async InstallDevApp(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/configureApp/install`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n    async UninstallDevApp(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/configureApp/uninstall`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryVoid(this.router);\n    }\n    async InstallApp(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/installApp`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryVoid(this.router);\n    }\n}\nRoutes.ApplicationRouter.Namespace=`Core.Routes`;\r\n_.Routes.ApplicationRouter=Routes.ApplicationRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Core.Data.ApplicationData","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false},{"fullName":"Core.App.AppConfiguration","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"AventusSharp.Tools.VoidWithError","isStrong":false},{"fullName":"File","isStrong":false}],"fullName":"Core.Routes.ApplicationRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"RAM.ApplicationRAM=class ApplicationRAM extends Aventus.Ram {\n    getAllDone = false;\n    /**\n     * Create a singleton to store data\n     */\n    static getInstance() {\n        return Aventus.Instance.get(RAM.ApplicationRAM);\n    }\n    /**\n     * @inheritdoc\n     */\n    defineIndexKey() {\n        return 'Id';\n    }\n    /**\n     * @inheritdoc\n     */\n    getTypeForData(objJson) {\n        return Data.ApplicationData;\n    }\n    getAllProms = [];\n    async wait() {\n        return new Promise((resolve) => {\n            this.getAllProms.push(() => {\n                resolve();\n            });\n        });\n    }\n    isLoading = false;\n    async beforeGetAll(result) {\n        if (!this.getAllDone) {\n            if (this.isLoading) {\n                await this.wait();\n            }\n            else {\n                this.isLoading = true;\n                let apps = await new Routes.ApplicationRouter().GetAll();\n                if (apps.success && apps.result) {\n                    for (let app of apps.result) {\n                        let resultTemp = new Aventus.ResultRamWithError();\n                        this.addOrUpdateData(app, resultTemp);\n                        if (!resultTemp.success) {\n                            result.errors = [...result.errors, ...resultTemp.errors];\n                        }\n                    }\n                    this.getAllDone = true;\n                }\n                else {\n                    result.errors = [...result.errors, ...apps.errors];\n                }\n                this.isLoading = false;\n                for (let cb of this.getAllProms) {\n                    cb();\n                }\n            }\n        }\n    }\n    async getApplicationByName(name) {\n        let items = await this.getList();\n        for (let item of items) {\n            if (item.Name == name) {\n                return item;\n            }\n        }\n        return null;\n    }\n}\nRAM.ApplicationRAM.Namespace=`Core.RAM`;\r\n_.RAM.ApplicationRAM=RAM.ApplicationRAM;\r\n","dependances":[{"fullName":"Aventus.Ram","isStrong":true},{"fullName":"Core.Data.ApplicationData","isStrong":false},{"fullName":"Aventus.IRam","isStrong":true},{"fullName":"Core.RAM.ApplicationRAM","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Aventus.KeysObject","isStrong":false},{"fullName":"Aventus.ResultRamWithError","isStrong":false},{"fullName":"Map","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Routes.ApplicationRouter","isStrong":false}],"fullName":"Core.RAM.ApplicationRAM","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.AppList = class AppList extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"show\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'no_transition'() { return this.getBoolAttr('no_transition') }\n    set 'no_transition'(val) { this.setBoolAttr('no_transition', val) }\r    get 'show'() { return this.getBoolProp('show') }\n    set 'show'(val) { this.setBoolAttr('show', val) }\r    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"show\", ((target) => {\n    target.onShowChange();\n}));\r }\n    static __style = `:host{--internal-app-list-case-border-radius: var(--app-list-case-border-radius, var(--app-icon-border-radius, 10px));--internal-app-list-case-border: var(--app-list-case-border, none);--internal-app-list-case-background-color: var(--app-list-case-background-color, transparent);--internal-app-list-case-border-selected: var(--app-list-case-border-selected, 2px solid red);--internal-app-list-case-background-color-selected: var(--app-list-case-background-color-selected, transparent)}:host{align-items:center;background-color:var(--lighter-active);display:flex;flex-direction:column;inset:0;position:absolute;top:100%;transition:top .5s var(--bezier-curve);z-index:5;height:100%}:host .search{align-items:center;display:flex;height:100px;justify-content:center;width:100%}:host .search input{background-color:var(--form-element-background);border:none;border-radius:var(--border-radius-round);box-shadow:var(--elevation-3);font-size:var(--form-element-font-size);line-height:var(--form-element-font-size);max-width:400px;outline:none;padding:10px 20px;width:calc(100% - 20px)}:host .app-list{--page-case-background: var(--internal-app-list-case-background-color);--page-case-background-active: var(--internal-app-list-case-background-color-selected);--page-case-border-active: var(--internal-app-list-case-border-selected);--page-case-border-radius: var(--internal-app-list-case-border-radius);flex-grow:1;max-width:1000px;width:100%}:host([show]){top:0}:host([no_transition]){transition:none}`;\n    constructor() { super(); \rthis.closeAppList=this.closeAppList.bind(this) }\n    __getStatic() {\n        return AppList;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(AppList.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"search\" _id=\"applist_0\">\r    <input type=\"text\" placeholder=\"Rechercher\" />\r</div><div class=\"app-list\">\r    <rk-page-case case_width=\"100\" case_height=\"100\" min_case_margin_left=\"20\" min_case_margin_top=\"20\" min_page_number=\"1\" _id=\"applist_1\">\r    </rk-page-case>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"searchContainer\",\n      \"ids\": [\n        \"applist_0\"\n      ]\n    },\n    {\n      \"name\": \"pageCaseEl\",\n      \"ids\": [\n        \"applist_1\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"AppList\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('no_transition')) { this.attributeChangedCallback('no_transition', false, false); }\rif(!this.hasAttribute('show')) { this.attributeChangedCallback('show', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('no_transition');\rthis.__upgradeProperty('show');\r }\n    __listBoolProps() { return [\"no_transition\",\"show\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    closeAppList() {\n        System.Os.instance.show_application_list = false;\n    }\n    onShowChange() {\n        if (this.show) {\n            Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Escape], this.closeAppList);\n        }\n        else {\n            Lib.ShortcutManager.unsubscribe([Lib.SpecialTouch.Escape], this.closeAppList);\n        }\n    }\n    async loadApps() {\n        let apps = await RAM.ApplicationRAM.getInstance().getList();\n        apps.sort((a, b) => a.Name < b.Name ? -1 : 1);\n        for (let app of apps) {\n            let icon = Aventus.WebComponentInstance.create(app.LogoTagName);\n            if (icon) {\n                this.pageCaseEl?.appendChild(icon);\n            }\n        }\n        this.pageCaseEl?.reset();\n    }\n    setIconSize(size) {\n        this.pageCaseEl.case_height = size;\n        this.pageCaseEl.case_width = size;\n    }\n    addClose() {\n        let apply = true;\n        new Aventus.DragAndDrop({\n            element: this,\n            offsetDrag: 20,\n            isDragEnable: () => apply,\n            correctPosition: (position) => {\n                position.x = 0;\n                if (position.y < 0) {\n                    position.y = 0;\n                }\n                return position;\n            },\n            onStart: () => {\n                this.no_transition = true;\n            },\n            onMove: (e, position) => {\n                if (position.y > 200) {\n                    this.no_transition = false;\n                    System.Os.instance.show_application_list = false;\n                    this.style.top = \"\";\n                    this.style.left = \"\";\n                    apply = false;\n                }\n            },\n            onStop: () => {\n                apply = true;\n                this.no_transition = false;\n                this.removeAttribute(\"style\");\n            }\n        });\n    }\n    postCreation() {\n        this.loadApps();\n        this.addClose();\n    }\n}\nSystem.AppList.Namespace=`Core.System`;\nSystem.AppList.Tag=`rk-app-list`;\n_.System.AppList=System.AppList;\nif(!window.customElements.get('rk-app-list')){window.customElements.define('rk-app-list', System.AppList);Aventus.WebComponentInstance.registerDefinition(System.AppList);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.System.AppList","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.PageCase","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"Core.Lib.ShortcutManager","isStrong":false},{"fullName":"Core.Lib.SpecialTouch","isStrong":false},{"fullName":"Core.RAM.ApplicationRAM","isStrong":false},{"fullName":"Aventus.WebComponentInstance","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"PageCase","isStrong":false}],"fullName":"Core.System.AppList","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-app-list"},{"code":"Permissions.PermissionQuery=class PermissionQuery {\n    $type;\n    value;\n    additionalInfo;\n    constructor(value, additionalInfo) {\n        this.$type = this.constructor['Fullname'];\n        this.value = value;\n        this.additionalInfo = additionalInfo;\n    }\n}\nPermissions.PermissionQuery.Namespace=`Core.Permissions`;\r\n_.Permissions.PermissionQuery=Permissions.PermissionQuery;\r\n","dependances":[{"fullName":"Core.Permissions.IPermissionQuery","isStrong":true},{"fullName":"Aventus.Enum","isStrong":false},{"fullName":"Aventus.EnumValue","isStrong":false}],"fullName":"Core.Permissions.PermissionQuery","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Permissions.DesktopPermissionQuery=class DesktopPermissionQuery extends Permissions.PermissionQuery {\n    static get Fullname() { return \"Core.Permissions.DesktopPermissionQuery, Core\"; }\n}\nPermissions.DesktopPermissionQuery.Namespace=`Core.Permissions`;\r\nPermissions.DesktopPermissionQuery.$schema={...(Permissions.PermissionQuery?.$schema ?? {}), };\r\nAventus.Converter.register(Permissions.DesktopPermissionQuery.Fullname, Permissions.DesktopPermissionQuery);\r\n_.Permissions.DesktopPermissionQuery=Permissions.DesktopPermissionQuery;\r\n","dependances":[{"fullName":"Core.Permissions.PermissionQuery","isStrong":true},{"fullName":"Core.Permissions.DesktopPermission","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Permissions.DesktopPermissionQuery","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Components.TouchRecord=class TouchRecord {\n    _activeTouchID;\n    _touchList = {};\n    get _primitiveValue() {\n        return { x: 0, y: 0 };\n    }\n    isActive() {\n        return this._activeTouchID !== undefined;\n    }\n    getDelta() {\n        const tracker = this._getActiveTracker();\n        if (!tracker) {\n            return this._primitiveValue;\n        }\n        return { ...tracker.delta };\n    }\n    getVelocity() {\n        const tracker = this._getActiveTracker();\n        if (!tracker) {\n            return this._primitiveValue;\n        }\n        return { ...tracker.velocity };\n    }\n    getNbOfTouches() {\n        return Object.values(this._touchList).length;\n    }\n    getTouches() {\n        return Object.values(this._touchList);\n    }\n    getEasingDistance(damping) {\n        const deAcceleration = 1 - damping;\n        let distance = {\n            x: 0,\n            y: 0,\n        };\n        const vel = this.getVelocity();\n        Object.keys(vel).forEach(dir => {\n            let v = Math.abs(vel[dir]) <= 10 ? 0 : vel[dir];\n            while (v !== 0) {\n                distance[dir] += v;\n                v = (v * deAcceleration) | 0;\n            }\n        });\n        return distance;\n    }\n    track(evt) {\n        if (evt instanceof TouchEvent) {\n            const { targetTouches, } = evt;\n            Array.from(targetTouches).forEach(touch => {\n                this._add(touch);\n            });\n        }\n        else {\n            this._add(evt);\n        }\n        return this._touchList;\n    }\n    update(evt) {\n        if (evt instanceof TouchEvent) {\n            const { touches, changedTouches, } = evt;\n            Array.from(touches).forEach(touch => {\n                this._renew(touch);\n            });\n            this._setActiveID(changedTouches);\n        }\n        else {\n            this._renew(evt);\n            this._setActiveID(evt);\n        }\n        return this._touchList;\n    }\n    release(evt) {\n        if (evt instanceof TouchEvent) {\n            Array.from(evt.changedTouches).forEach(touch => {\n                this._delete(touch);\n            });\n        }\n        else {\n            this._delete(evt);\n        }\n    }\n    _getIdentifier(touch) {\n        if (touch instanceof Touch)\n            return touch.identifier;\n        if (touch instanceof PointerEvent)\n            return touch.pointerId;\n        return touch.button;\n    }\n    _add(touch) {\n        if (this._has(touch)) {\n            this._delete(touch);\n        }\n        const tracker = new Components.Tracker(touch);\n        const identifier = this._getIdentifier(touch);\n        this._touchList[identifier] = tracker;\n    }\n    _renew(touch) {\n        if (!this._has(touch)) {\n            return;\n        }\n        const identifier = this._getIdentifier(touch);\n        const tracker = this._touchList[identifier];\n        tracker.update(touch);\n    }\n    _delete(touch) {\n        const identifier = this._getIdentifier(touch);\n        delete this._touchList[identifier];\n        if (this._activeTouchID == identifier) {\n            this._activeTouchID = undefined;\n        }\n    }\n    _has(touch) {\n        const identifier = this._getIdentifier(touch);\n        return this._touchList.hasOwnProperty(identifier);\n    }\n    _setActiveID(touches) {\n        if (touches instanceof PointerEvent || touches instanceof MouseEvent) {\n            this._activeTouchID = this._getIdentifier(touches);\n        }\n        else {\n            this._activeTouchID = touches[touches.length - 1].identifier;\n        }\n    }\n    _getActiveTracker() {\n        const { _touchList, _activeTouchID, } = this;\n        if (_activeTouchID !== undefined) {\n            return _touchList[_activeTouchID];\n        }\n        return undefined;\n    }\n}\nComponents.TouchRecord.Namespace=`Core.Components`;\r\n_.Components.TouchRecord=Components.TouchRecord;\r\n","dependances":[{"fullName":"Core.Components.Tracker","isStrong":false},{"fullName":"TouchEvent","isStrong":false},{"fullName":"PointerEvent","isStrong":false},{"fullName":"MouseEvent","isStrong":false},{"fullName":"Touch","isStrong":false},{"fullName":"TouchList","isStrong":false}],"fullName":"Core.Components.TouchRecord","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.Scrollable = class Scrollable extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"zoom\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'min_zoom'() { return this.getNumberAttr('min_zoom') }\n    set 'min_zoom'(val) { this.setNumberAttr('min_zoom', val) }\rget 'max_zoom'() { return this.getNumberAttr('max_zoom') }\n    set 'max_zoom'(val) { this.setNumberAttr('max_zoom', val) }\rget 'y_scroll_visible'() { return this.getBoolAttr('y_scroll_visible') }\n    set 'y_scroll_visible'(val) { this.setBoolAttr('y_scroll_visible', val) }\rget 'x_scroll_visible'() { return this.getBoolAttr('x_scroll_visible') }\n    set 'x_scroll_visible'(val) { this.setBoolAttr('x_scroll_visible', val) }\rget 'floating_scroll'() { return this.getBoolAttr('floating_scroll') }\n    set 'floating_scroll'(val) { this.setBoolAttr('floating_scroll', val) }\rget 'x_scroll'() { return this.getBoolAttr('x_scroll') }\n    set 'x_scroll'(val) { this.setBoolAttr('x_scroll', val) }\rget 'y_scroll'() { return this.getBoolAttr('y_scroll') }\n    set 'y_scroll'(val) { this.setBoolAttr('y_scroll', val) }\rget 'auto_hide'() { return this.getBoolAttr('auto_hide') }\n    set 'auto_hide'(val) { this.setBoolAttr('auto_hide', val) }\rget 'break'() { return this.getNumberAttr('break') }\n    set 'break'(val) { this.setNumberAttr('break', val) }\rget 'disable'() { return this.getBoolAttr('disable') }\n    set 'disable'(val) { this.setBoolAttr('disable', val) }\rget 'no_user_select'() { return this.getBoolAttr('no_user_select') }\n    set 'no_user_select'(val) { this.setBoolAttr('no_user_select', val) }\rget 'mouse_drag'() { return this.getBoolAttr('mouse_drag') }\n    set 'mouse_drag'(val) { this.setBoolAttr('mouse_drag', val) }\rget 'pinch'() { return this.getBoolAttr('pinch') }\n    set 'pinch'(val) { this.setBoolAttr('pinch', val) }\r    get 'zoom'() { return this.getNumberProp('zoom') }\n    set 'zoom'(val) { this.setNumberAttr('zoom', val) }\r    observer;\n    display = { x: 0, y: 0 };\n    max = {\n        x: 0,\n        y: 0\n    };\n    margin = {\n        x: 0,\n        y: 0\n    };\n    position = {\n        x: 0,\n        y: 0\n    };\n    momentum = { x: 0, y: 0 };\n    contentWrapperSize = { x: 0, y: 0 };\n    scroller = {\n        x: () => {\n            if (!this.horizontalScroller) {\n                throw 'can\\'t find the horizontalScroller';\n            }\n            return this.horizontalScroller;\n        },\n        y: () => {\n            if (!this.verticalScroller) {\n                throw 'can\\'t find the verticalScroller';\n            }\n            return this.verticalScroller;\n        }\n    };\n    scrollerContainer = {\n        x: () => {\n            if (!this.horizontalScrollerContainer) {\n                throw 'can\\'t find the horizontalScrollerContainer';\n            }\n            return this.horizontalScrollerContainer;\n        },\n        y: () => {\n            if (!this.verticalScrollerContainer) {\n                throw 'can\\'t find the verticalScrollerContainer';\n            }\n            return this.verticalScrollerContainer;\n        }\n    };\n    hideDelay = { x: 0, y: 0 };\n    touchRecord;\n    pointerCount = 0;\n    loadedOnce = false;\n    savedPercent;\n    isDragScroller = false;\n    cachedSvg;\n    previousMidPoint;\n    previousDistance;\n    startTranslate = { x: 0, y: 0 };\n    get x() {\n        return this.position.x;\n    }\n    get y() {\n        return this.position.y;\n    }\n    onScrollChange = new Aventus.Callback();\n    onZoomChange = new Aventus.Callback();\n    renderAnimation;\n    autoScrollInterval = {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    };\n    autoScrollSpeed = {\n        top: 0,\n        left: 0,\n        right: 0,\n        bottom: 0,\n    };\n    pressManager;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"zoom\", ((target) => {\n    target.changeZoom();\n}));\r }\n    static __style = `:host{--_scrollbar-container-color: var(--scrollbar-container-color, transparent);--_scrollbar-color: var(--scrollbar-color, #757575);--_scrollbar-active-color: var(--scrollbar-active-color, #858585);--_scrollbar-max-height: var(--scrollbar-max-height, 100%);--_scroller-width: var(--scroller-width, 6px);--_scroller-top: var(--scroller-top, 3px);--_scroller-bottom: var(--scroller-bottom, 3px);--_scroller-right: var(--scroller-right, 3px);--_scroller-left: var(--scroller-left, 3px);--_scrollbar-content-padding: var(--scrollbar-content-padding, 0);--_scrollbar-container-display: var(--scrollbar-container-display, inline-block)}:host{display:block;height:100%;min-height:inherit;min-width:inherit;overflow:hidden;position:relative;-webkit-user-drag:none;-khtml-user-drag:none;-moz-user-drag:none;-o-user-drag:none;width:100%}:host .scroll-main-container{display:block;height:100%;max-height:var(--_scrollbar-max-height);min-height:inherit;min-width:inherit;position:relative;width:100%}:host .scroll-main-container .content-zoom{display:block;height:100%;max-height:var(--_scrollbar-max-height);min-height:inherit;min-width:inherit;position:relative;transform-origin:0 0;width:100%;z-index:4}:host .scroll-main-container .content-zoom .content-hidder{display:block;height:100%;max-height:var(--_scrollbar-max-height);min-height:inherit;min-width:inherit;overflow:hidden;position:relative;width:100%}:host .scroll-main-container .content-zoom .content-hidder .content-wrapper{display:var(--_scrollbar-container-display);height:100%;min-height:inherit;min-width:inherit;padding:var(--_scrollbar-content-padding);position:relative;width:100%}:host .scroll-main-container .scroller-wrapper .container-scroller{display:none;overflow:hidden;position:absolute;transition:transform .2s linear;z-index:5}:host .scroll-main-container .scroller-wrapper .container-scroller .shadow-scroller{background-color:var(--_scrollbar-container-color);border-radius:var(--border-radius-sm)}:host .scroll-main-container .scroller-wrapper .container-scroller .shadow-scroller .scroller{background-color:var(--_scrollbar-color);border-radius:var(--border-radius-sm);cursor:pointer;position:absolute;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;z-index:5}:host .scroll-main-container .scroller-wrapper .container-scroller .scroller.active{background-color:var(--_scrollbar-active-color)}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical{height:calc(100% - var(--_scroller-bottom)*2 - var(--_scroller-width));padding-left:var(--_scroller-left);right:var(--_scroller-right);top:var(--_scroller-bottom);transform:0;width:calc(var(--_scroller-width) + var(--_scroller-left))}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical.hide{transform:translateX(calc(var(--_scroller-width) + var(--_scroller-left)))}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical .shadow-scroller{height:100%}:host .scroll-main-container .scroller-wrapper .container-scroller.vertical .shadow-scroller .scroller{width:calc(100% - var(--_scroller-left))}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal{bottom:var(--_scroller-bottom);height:calc(var(--_scroller-width) + var(--_scroller-top));left:var(--_scroller-right);padding-top:var(--_scroller-top);transform:0;width:calc(100% - var(--_scroller-right)*2 - var(--_scroller-width))}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal.hide{transform:translateY(calc(var(--_scroller-width) + var(--_scroller-top)))}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal .shadow-scroller{height:100%}:host .scroll-main-container .scroller-wrapper .container-scroller.horizontal .shadow-scroller .scroller{height:calc(100% - var(--_scroller-top))}:host([y_scroll]) .scroll-main-container .content-zoom .content-hidder .content-wrapper{height:auto}:host([x_scroll]) .scroll-main-container .content-zoom .content-hidder .content-wrapper{width:auto}:host([y_scroll_visible]) .scroll-main-container .scroller-wrapper .container-scroller.vertical{display:block}:host([x_scroll_visible]) .scroll-main-container .scroller-wrapper .container-scroller.horizontal{display:block}:host([no_user_select]) .content-wrapper *{user-select:none}:host([no_user_select]) ::slotted{user-select:none}`;\n    constructor() {\r            super();\r            this.renderAnimation = this.createAnimation();\r            this.onWheel = this.onWheel.bind(this);\r            this.onTouchStart = this.onTouchStart.bind(this);\r            this.onTouchMovePointer = this.onTouchMovePointer.bind(this);\r            this.onTouchMove = this.onTouchMove.bind(this);\r            this.onTouchMovePointer = this.onTouchMovePointer.bind(this);\r            this.onTouchEnd = this.onTouchEnd.bind(this);\r            this.onTouchEndPointer = this.onTouchEndPointer.bind(this);\r            this.touchRecord = new Components.TouchRecord();\r        }\n    __getStatic() {\n        return Scrollable;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Scrollable.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"scroll-main-container\" _id=\"scrollable_0\">\r    <div class=\"content-zoom\" _id=\"scrollable_1\">\r        <div class=\"content-hidder\" _id=\"scrollable_2\">\r            <div class=\"content-wrapper\" part=\"content-wrapper\" _id=\"scrollable_3\">\r                <slot></slot>\r            </div>\r        </div>\r    </div>\r    <div class=\"scroller-wrapper\">\r        <div class=\"container-scroller vertical\" _id=\"scrollable_4\">\r            <div class=\"shadow-scroller\">\r                <div class=\"scroller\" _id=\"scrollable_5\"></div>\r            </div>\r        </div>\r        <div class=\"container-scroller horizontal\" _id=\"scrollable_6\">\r            <div class=\"shadow-scroller\">\r                <div class=\"scroller\" _id=\"scrollable_7\"></div>\r            </div>\r        </div>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"mainContainer\",\n      \"ids\": [\n        \"scrollable_0\"\n      ]\n    },\n    {\n      \"name\": \"contentZoom\",\n      \"ids\": [\n        \"scrollable_1\"\n      ]\n    },\n    {\n      \"name\": \"contentHidder\",\n      \"ids\": [\n        \"scrollable_2\"\n      ]\n    },\n    {\n      \"name\": \"contentWrapper\",\n      \"ids\": [\n        \"scrollable_3\"\n      ]\n    },\n    {\n      \"name\": \"verticalScrollerContainer\",\n      \"ids\": [\n        \"scrollable_4\"\n      ]\n    },\n    {\n      \"name\": \"verticalScroller\",\n      \"ids\": [\n        \"scrollable_5\"\n      ]\n    },\n    {\n      \"name\": \"horizontalScrollerContainer\",\n      \"ids\": [\n        \"scrollable_6\"\n      ]\n    },\n    {\n      \"name\": \"horizontalScroller\",\n      \"ids\": [\n        \"scrollable_7\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Scrollable\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('min_zoom')){ this['min_zoom'] = 1; }\rif(!this.hasAttribute('max_zoom')){ this['max_zoom'] = undefined; }\rif(!this.hasAttribute('y_scroll_visible')) { this.attributeChangedCallback('y_scroll_visible', false, false); }\rif(!this.hasAttribute('x_scroll_visible')) { this.attributeChangedCallback('x_scroll_visible', false, false); }\rif(!this.hasAttribute('floating_scroll')) { this.attributeChangedCallback('floating_scroll', false, false); }\rif(!this.hasAttribute('x_scroll')) { this.attributeChangedCallback('x_scroll', false, false); }\rif(!this.hasAttribute('y_scroll')) {this.setAttribute('y_scroll' ,'true'); }\rif(!this.hasAttribute('auto_hide')) { this.attributeChangedCallback('auto_hide', false, false); }\rif(!this.hasAttribute('break')){ this['break'] = 0.1; }\rif(!this.hasAttribute('disable')) { this.attributeChangedCallback('disable', false, false); }\rif(!this.hasAttribute('no_user_select')) { this.attributeChangedCallback('no_user_select', false, false); }\rif(!this.hasAttribute('mouse_drag')) { this.attributeChangedCallback('mouse_drag', false, false); }\rif(!this.hasAttribute('pinch')) { this.attributeChangedCallback('pinch', false, false); }\rif(!this.hasAttribute('zoom')){ this['zoom'] = 1; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('x');\rthis.__correctGetter('y');\rthis.__upgradeProperty('min_zoom');\rthis.__upgradeProperty('max_zoom');\rthis.__upgradeProperty('y_scroll_visible');\rthis.__upgradeProperty('x_scroll_visible');\rthis.__upgradeProperty('floating_scroll');\rthis.__upgradeProperty('x_scroll');\rthis.__upgradeProperty('y_scroll');\rthis.__upgradeProperty('auto_hide');\rthis.__upgradeProperty('break');\rthis.__upgradeProperty('disable');\rthis.__upgradeProperty('no_user_select');\rthis.__upgradeProperty('mouse_drag');\rthis.__upgradeProperty('pinch');\rthis.__upgradeProperty('zoom');\r }\n    __listBoolProps() { return [\"y_scroll_visible\",\"x_scroll_visible\",\"floating_scroll\",\"x_scroll\",\"y_scroll\",\"auto_hide\",\"disable\",\"no_user_select\",\"mouse_drag\",\"pinch\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    createAnimation() {\n        return new Aventus.Animation({\n            fps: 60,\n            animate: () => {\n                const nextX = this.nextPosition('x');\n                const nextY = this.nextPosition('y');\n                this.momentum.x = nextX.momentum;\n                this.momentum.y = nextY.momentum;\n                this.scrollDirection('x', nextX.position);\n                this.scrollDirection('y', nextY.position);\n                if (!this.momentum.x && !this.momentum.y) {\n                    this.renderAnimation.stop();\n                }\n            },\n            stopped: () => {\n                if (this.momentum.x || this.momentum.y) {\n                    this.renderAnimation.start();\n                }\n            }\n        });\n    }\n    nextPosition(direction) {\n        const current = this.position[direction];\n        const remain = this.momentum[direction];\n        let result = {\n            momentum: 0,\n            position: 0,\n        };\n        if (Math.abs(remain) <= 0.1) {\n            result.position = current + remain;\n        }\n        else {\n            const _break = this.pointerCount > 0 ? 0.5 : this.break;\n            let nextMomentum = remain * (1 - _break);\n            nextMomentum |= 0;\n            result.momentum = nextMomentum;\n            result.position = current + remain - nextMomentum;\n        }\n        let correctPosition = this.correctScrollValue(result.position, direction);\n        if (correctPosition != result.position) {\n            result.position = correctPosition;\n            result.momentum = 0;\n        }\n        return result;\n    }\n    scrollDirection(direction, value) {\n        const max = this.max[direction];\n        if (max != 0) {\n            this.position[direction] = this.correctScrollValue(value, direction);\n        }\n        else {\n            this.position[direction] = 0;\n        }\n        let container = this.scrollerContainer[direction]();\n        let scroller = this.scroller[direction]();\n        if (this.auto_hide) {\n            container.classList.remove(\"hide\");\n            clearTimeout(this.hideDelay[direction]);\n            this.hideDelay[direction] = setTimeout(() => {\n                container.classList.add(\"hide\");\n            }, 1000);\n        }\n        let containerSize = direction == 'y' ? container.offsetHeight : container.offsetWidth;\n        if (this.contentWrapperSize[direction] != 0) {\n            let scrollPosition = this.position[direction] / this.contentWrapperSize[direction] * containerSize;\n            scroller.style.transform = `translate${direction.toUpperCase()}(${scrollPosition}px)`;\n            this.contentWrapper.style.transform = `translate3d(${-1 * this.x}px, ${-1 * this.y}px, 0)`;\n        }\n        this.triggerScrollChange();\n    }\n    scrollDirectionPercent(direction, percent) {\n        const max = this.max[direction];\n        this.scrollDirection(direction, max * percent / 100);\n    }\n    correctScrollValue(value, direction) {\n        if (value < 0) {\n            value = 0;\n        }\n        else if (value > this.max[direction]) {\n            value = this.max[direction];\n        }\n        return value;\n    }\n    triggerScrollChange() {\n        this.onScrollChange.trigger([this.x, this.y]);\n    }\n    scrollToPosition(x, y) {\n        this.scrollDirection('x', x);\n        this.scrollDirection('y', y);\n    }\n    scrollX(x) {\n        this.scrollDirection('x', x);\n    }\n    scrollXPercent(x) {\n        this.scrollDirectionPercent('x', x);\n    }\n    scrollY(y) {\n        this.scrollDirection('y', y);\n    }\n    scrollYPercent(y) {\n        this.scrollDirectionPercent('y', y);\n    }\n    startAutoScrollRight() {\n        if (!this.autoScrollInterval.right) {\n            this.stopAutoScrollLeft();\n            this.autoScrollInterval.right = setInterval(() => {\n                if (this.x == this.max.x) {\n                    this.stopAutoScrollRight();\n                    return;\n                }\n                this.addDelta({\n                    x: this.autoScrollSpeed.right,\n                    y: 0\n                });\n            }, 100);\n        }\n    }\n    autoScrollRight(percent = 50) {\n        let slow = this.max.x * 1 / 100;\n        let fast = this.max.x * 10 / 100;\n        this.autoScrollSpeed.right = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollRight();\n    }\n    stopAutoScrollRight() {\n        if (this.autoScrollInterval.right) {\n            clearInterval(this.autoScrollInterval.right);\n            this.autoScrollInterval.right = 0;\n        }\n    }\n    startAutoScrollLeft() {\n        if (!this.autoScrollInterval.left) {\n            this.stopAutoScrollRight();\n            this.autoScrollInterval.left = setInterval(() => {\n                if (this.x == 0) {\n                    this.stopAutoScrollLeft();\n                    return;\n                }\n                this.addDelta({\n                    x: this.autoScrollSpeed.left * -1,\n                    y: 0\n                });\n            }, 100);\n        }\n    }\n    autoScrollLeft(percent = 50) {\n        let slow = this.max.x * 1 / 100;\n        let fast = this.max.x * 10 / 100;\n        this.autoScrollSpeed.left = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollLeft();\n    }\n    stopAutoScrollLeft() {\n        if (this.autoScrollInterval.left) {\n            clearInterval(this.autoScrollInterval.left);\n            this.autoScrollInterval.left = 0;\n        }\n    }\n    startAutoScrollTop() {\n        if (!this.autoScrollInterval.top) {\n            this.stopAutoScrollBottom();\n            this.autoScrollInterval.top = setInterval(() => {\n                if (this.y == 0) {\n                    this.stopAutoScrollTop();\n                    return;\n                }\n                this.addDelta({\n                    x: 0,\n                    y: this.autoScrollSpeed.top * -1\n                });\n            }, 100);\n        }\n    }\n    autoScrollTop(percent = 50) {\n        let slow = this.max.y * 1 / 100;\n        let fast = this.max.y * 10 / 100;\n        this.autoScrollSpeed.top = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollTop();\n    }\n    stopAutoScrollTop() {\n        if (this.autoScrollInterval.top) {\n            clearInterval(this.autoScrollInterval.top);\n            this.autoScrollInterval.top = 0;\n        }\n    }\n    startAutoScrollBottom() {\n        if (!this.autoScrollInterval.bottom) {\n            this.stopAutoScrollTop();\n            this.autoScrollInterval.bottom = setInterval(() => {\n                if (this.y == this.max.y) {\n                    this.stopAutoScrollBottom();\n                    return;\n                }\n                this.addDelta({\n                    x: 0,\n                    y: this.autoScrollSpeed.bottom\n                });\n            }, 100);\n        }\n    }\n    autoScrollBottom(percent = 50) {\n        let slow = this.max.y * 1 / 100;\n        let fast = this.max.y * 10 / 100;\n        this.autoScrollSpeed.bottom = (fast - slow) * (percent / 100) + slow;\n        this.startAutoScrollBottom();\n    }\n    stopAutoScrollBottom() {\n        if (this.autoScrollInterval.bottom) {\n            clearInterval(this.autoScrollInterval.bottom);\n            this.autoScrollInterval.bottom = 0;\n        }\n    }\n    createMatrix() {\n        if (!this.cachedSvg) {\n            this.cachedSvg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        }\n        return this.cachedSvg.createSVGMatrix();\n    }\n    getMidPoint(a, b) {\n        return {\n            x: (a.lastPosition.x + b.lastPosition.x) / 2,\n            y: (a.lastPosition.y + b.lastPosition.y) / 2,\n        };\n    }\n    getDistance(a, b) {\n        return Math.sqrt((b.lastPosition.x - a.lastPosition.x) ** 2 + (b.lastPosition.y - a.lastPosition.y) ** 2);\n    }\n    zoomOnPoint(clientX, clientY, newZoom) {\n        let targetCoordinates = this.getBoundingClientRect();\n        let mousePositionRelativeToTarget = {\n            x: targetCoordinates.x - clientX,\n            y: targetCoordinates.y - clientY\n        };\n        let oldScale = this.zoom;\n        let newScale;\n        if (this.max_zoom > 0) {\n            newScale = Math.max(this.min_zoom, Math.min(this.max_zoom, newZoom));\n        }\n        else {\n            newScale = Math.max(this.min_zoom, newZoom);\n        }\n        let scaleDiff = newScale / oldScale;\n        const matrix = this.createMatrix()\n            .translate(this.x, this.y)\n            .translate(mousePositionRelativeToTarget.x, mousePositionRelativeToTarget.y)\n            .scale(scaleDiff)\n            .translate(-mousePositionRelativeToTarget.x, -mousePositionRelativeToTarget.y)\n            .scale(this.zoom);\n        const newZoomFinal = matrix.a || 1;\n        const newX = matrix.e || 0;\n        const newY = matrix.f || 0;\n        this.zoom = newZoomFinal;\n        this.onZoomChange.trigger([newZoomFinal]);\n        this.scrollDirection('x', newX);\n        this.scrollDirection('y', newY);\n    }\n    pinchAction() {\n        const touches = this.touchRecord.getTouches();\n        if (touches.length == 2) {\n            const newMidpoint = this.getMidPoint(touches[0], touches[1]);\n            const prevMidpoint = this.previousMidPoint ?? newMidpoint;\n            const positioningElRect = this.getBoundingClientRect();\n            const originX = (positioningElRect.left + this.x - this.startTranslate.x) - prevMidpoint.x;\n            const originY = (positioningElRect.top + this.y - this.startTranslate.y) - prevMidpoint.y;\n            const newDistance = this.getDistance(touches[0], touches[1]);\n            const prevDistance = this.previousDistance;\n            let scaleDiff = prevDistance ? newDistance / prevDistance : 1;\n            const panX = prevMidpoint.x - newMidpoint.x;\n            const panY = prevMidpoint.y - newMidpoint.y;\n            let oldScale = this.zoom;\n            let newScale;\n            if (this.max_zoom > 0) {\n                newScale = Math.max(this.min_zoom, Math.min(this.max_zoom, oldScale * scaleDiff));\n            }\n            else {\n                newScale = Math.max(this.min_zoom, oldScale * scaleDiff);\n            }\n            scaleDiff = newScale / oldScale;\n            const matrix = this.createMatrix()\n                .translate(panX, panY)\n                .translate(originX, originY)\n                .translate(this.x, this.y)\n                .scale(scaleDiff)\n                .translate(-originX, -originY)\n                .scale(this.zoom);\n            const newZoom = matrix.a || 1;\n            const newX = matrix.e || 0;\n            const newY = matrix.f || 0;\n            this.zoom = newZoom;\n            this.onZoomChange.trigger([newZoom]);\n            this.scrollDirection('x', newX);\n            this.scrollDirection('y', newY);\n            this.previousMidPoint = newMidpoint;\n            this.previousDistance = newDistance;\n        }\n        return null;\n    }\n    addAction() {\n        this.addEventListener(\"wheel\", this.onWheel, { passive: false });\n        this.pressManager = new Aventus.PressManager({\n            element: this,\n            offsetDrag: 0,\n            onPressStart: (e) => {\n                this.touchRecord.track(e.event);\n                this.pointerCount = this.touchRecord.getNbOfTouches();\n            },\n            onPressEnd: (e) => {\n                this.touchRecord.release(e.event);\n                this.pointerCount = this.touchRecord.getNbOfTouches();\n            },\n            onDragStart: (e) => {\n                if (!this.pinch && !this.x_scroll_visible && !this.y_scroll_visible) {\n                    return false;\n                }\n                return this.onTouchStartPointer(e);\n            },\n            onDrag: (e) => {\n                this.onTouchMovePointer(e);\n            },\n            onDragEnd: (e) => {\n                this.onTouchEndPointer(e);\n            }\n        });\n        // this.addEventListener(\"touchstart\", this.onTouchStart);\n        // this.addEventListener(\"trigger_pointer_pressstart\", this.onTouchStartPointer);\n        if (this.mouse_drag) {\n            // this.addEventListener(\"mousedown\", this.onTouchStart);\n        }\n        this.addScrollDrag('x');\n        this.addScrollDrag('y');\n    }\n    addActionMove() {\n        // document.body.addEventListener(\"touchmove\", this.onTouchMove);\n        // document.body.addEventListener(\"trigger_pointer_pressmove\", this.onTouchMovePointer);\n        // document.body.addEventListener(\"touchcancel\", this.onTouchEnd);\n        // document.body.addEventListener(\"touchend\", this.onTouchEnd);\n        // document.body.addEventListener(\"trigger_pointer_pressend\", this.onTouchEndPointer);\n        if (this.mouse_drag) {\n            // document.body.addEventListener(\"mousemove\", this.onTouchMove);\n            // document.body.addEventListener(\"mouseup\", this.onTouchEnd);\n        }\n    }\n    removeActionMove() {\n        // document.body.removeEventListener(\"touchmove\", this.onTouchMove);\n        // document.body.removeEventListener(\"trigger_pointer_pressmove\", this.onTouchMovePointer);\n        // document.body.removeEventListener(\"touchcancel\", this.onTouchEnd);\n        // document.body.removeEventListener(\"touchend\", this.onTouchEnd);\n        // document.body.removeEventListener(\"trigger_pointer_pressend\", this.onTouchEndPointer);\n        // document.body.removeEventListener(\"mousemove\", this.onTouchMove);\n        // document.body.removeEventListener(\"mouseup\", this.onTouchEnd);\n    }\n    addScrollDrag(direction) {\n        let scroller = this.scroller[direction]();\n        let startPosition = 0;\n        new Aventus.DragAndDrop({\n            element: scroller,\n            applyDrag: false,\n            usePercent: true,\n            offsetDrag: 0,\n            isDragEnable: () => !this.disable,\n            onStart: (e) => {\n                this.isDragScroller = true;\n                this.no_user_select = true;\n                scroller.classList.add(\"active\");\n                startPosition = this.position[direction];\n            },\n            onMove: (e, position) => {\n                let delta = position[direction] / 100 * this.contentWrapperSize[direction];\n                let value = startPosition + delta;\n                this.scrollDirection(direction, value);\n            },\n            onStop: () => {\n                this.no_user_select = false;\n                scroller.classList.remove(\"active\");\n                this.isDragScroller = false;\n            }\n        });\n    }\n    shouldStopPropagation(e, delta) {\n        if (!this.y_scroll && this.x_scroll) {\n            if ((delta.x > 0 && this.x != this.max.x) ||\n                (delta.x <= 0 && this.x != 0)) {\n                e.stopPropagation();\n            }\n        }\n        else {\n            if ((delta.y > 0 && this.y != this.max.y) ||\n                (delta.y <= 0 && this.y != 0)) {\n                e.stopPropagation();\n            }\n        }\n    }\n    addDelta(delta) {\n        if (this.disable) {\n            return;\n        }\n        this.momentum.x += delta.x;\n        this.momentum.y += delta.y;\n        this.renderAnimation?.start();\n    }\n    onWheel(e) {\n        if (e.ctrlKey) {\n            e.preventDefault();\n            e.stopPropagation();\n            if (this.pinch) {\n                let factor = 0.9;\n                if (e.deltaY < 0) {\n                    factor = 1.1;\n                }\n                this.zoomOnPoint(e.clientX, e.clientY, this.zoom * factor);\n            }\n            return;\n        }\n        const DELTA_MODE = [1.0, 28.0, 500.0];\n        const mode = DELTA_MODE[e.deltaMode] || DELTA_MODE[0];\n        let newValue = {\n            x: 0,\n            y: e.deltaY * mode,\n        };\n        if (!this.y_scroll && this.x_scroll) {\n            newValue = {\n                x: e.deltaY * mode,\n                y: 0,\n            };\n        }\n        else if (this.x_scroll && e.altKey) {\n            newValue = {\n                x: e.deltaY * mode,\n                y: 0,\n            };\n        }\n        this.shouldStopPropagation(e, newValue);\n        this.addDelta(newValue);\n    }\n    onTouchStartPointer(e) {\n        const ev = e.event;\n        if (ev instanceof TouchEvent) {\n            this.onTouchStart(ev);\n            return true;\n        }\n        else {\n            if (this.mouse_drag || ev.pointerType == \"touch\") {\n                this.onTouchStart(ev);\n                return true;\n            }\n        }\n        return false;\n    }\n    onTouchStart(e) {\n        if (this.isDragScroller)\n            return;\n        this.touchRecord.track(e);\n        this.momentum = {\n            x: 0,\n            y: 0\n        };\n        if (this.pointerCount === 0) {\n            this.addActionMove();\n        }\n        this.pointerCount = this.touchRecord.getNbOfTouches();\n        if (this.pinch && this.pointerCount == 2) {\n            this.startTranslate = { x: this.x, y: this.y };\n        }\n    }\n    onTouchMovePointer(e) {\n        const ev = e.event;\n        if (ev instanceof TouchEvent) {\n            this.onTouchMove(ev);\n        }\n        else {\n            if (this.mouse_drag || ev.pointerType == \"touch\") {\n                this.onTouchMove(ev);\n            }\n        }\n    }\n    onTouchMove(e) {\n        if (this.isDragScroller)\n            return;\n        this.touchRecord.update(e);\n        if (this.pinch && this.pointerCount == 2) {\n            // zoom\n            e.stopPropagation();\n            this.renderAnimation?.stop();\n            this.pinchAction();\n        }\n        else {\n            const delta = this.touchRecord.getDelta();\n            this.shouldStopPropagation(e, delta);\n            this.addDelta(delta);\n        }\n    }\n    onTouchEndPointer(e) {\n        const ev = e.event;\n        if (ev instanceof TouchEvent) {\n            this.onTouchEnd(ev);\n        }\n        else {\n            if (this.mouse_drag || ev.pointerType == \"touch\") {\n                this.onTouchEnd(ev);\n            }\n        }\n    }\n    onTouchEnd(e) {\n        if (this.isDragScroller)\n            return;\n        const delta = this.touchRecord.getEasingDistance(this.break);\n        this.shouldStopPropagation(e, delta);\n        this.addDelta(delta);\n        this.touchRecord.release(e);\n        this.pointerCount = this.touchRecord.getNbOfTouches();\n        if (this.pointerCount === 0) {\n            this.removeActionMove();\n        }\n        if (this.pointerCount < 2) {\n            this.previousMidPoint = undefined;\n            this.previousDistance = undefined;\n        }\n    }\n    calculateRealSize() {\n        if (!this.contentZoom || !this.mainContainer || !this.contentWrapper) {\n            return false;\n        }\n        const currentOffsetWidth = this.contentZoom.offsetWidth;\n        const currentOffsetHeight = this.contentZoom.offsetHeight;\n        let hasChanged = false;\n        if (this.contentWrapper.offsetWidth != this.contentWrapperSize.x || this.contentWrapper.offsetHeight != this.contentWrapperSize.y)\n            hasChanged = true;\n        this.contentWrapperSize.x = this.contentWrapper.offsetWidth;\n        this.contentWrapperSize.y = this.contentWrapper.offsetHeight;\n        if (this.zoom < 1) {\n            // scale the container for zoom\n            this.contentZoom.style.width = this.mainContainer.offsetWidth / this.zoom + 'px';\n            this.contentZoom.style.height = this.mainContainer.offsetHeight / this.zoom + 'px';\n            this.contentZoom.style.maxHeight = this.mainContainer.offsetHeight / this.zoom + 'px';\n            if (currentOffsetHeight != this.display.y || currentOffsetWidth != this.display.x)\n                hasChanged = true;\n            this.display.y = currentOffsetHeight;\n            this.display.x = currentOffsetWidth;\n        }\n        else {\n            const newX = currentOffsetWidth / this.zoom;\n            const newY = currentOffsetHeight / this.zoom;\n            if (newY != this.display.y || newX != this.display.x)\n                hasChanged = true;\n            this.display.y = newY;\n            this.display.x = newX;\n            this.contentZoom.style.width = '';\n            this.contentZoom.style.height = '';\n            this.contentZoom.style.maxHeight = '';\n        }\n        return hasChanged;\n    }\n    calculatePositionScrollerContainer(direction) {\n        if (direction == 'y') {\n            this.calculatePositionScrollerContainerY();\n        }\n        else {\n            this.calculatePositionScrollerContainerX();\n        }\n    }\n    calculatePositionScrollerContainerY() {\n        const leftMissing = this.mainContainer.offsetWidth - this.verticalScrollerContainer.offsetLeft;\n        if (leftMissing > 0 && this.y_scroll_visible && !this.floating_scroll) {\n            this.contentHidder.style.width = 'calc(100% - ' + leftMissing + 'px)';\n            this.contentHidder.style.marginRight = leftMissing + 'px';\n            this.margin.x = leftMissing;\n        }\n        else {\n            this.contentHidder.style.width = '';\n            this.contentHidder.style.marginRight = '';\n            this.margin.x = 0;\n        }\n    }\n    calculatePositionScrollerContainerX() {\n        const topMissing = this.mainContainer.offsetHeight - this.horizontalScrollerContainer.offsetTop;\n        if (topMissing > 0 && this.x_scroll_visible && !this.floating_scroll) {\n            this.contentHidder.style.height = 'calc(100% - ' + topMissing + 'px)';\n            this.contentHidder.style.marginBottom = topMissing + 'px';\n            this.margin.y = topMissing;\n        }\n        else {\n            this.contentHidder.style.height = '';\n            this.contentHidder.style.marginBottom = '';\n            this.margin.y = 0;\n        }\n    }\n    calculateSizeScroller(direction) {\n        const scrollerSize = ((this.display[direction] - this.margin[direction]) / this.contentWrapperSize[direction] * 100);\n        if (direction == \"y\") {\n            this.scroller[direction]().style.height = scrollerSize + '%';\n        }\n        else {\n            this.scroller[direction]().style.width = scrollerSize + '%';\n        }\n        let maxScrollContent = this.contentWrapperSize[direction] - this.display[direction];\n        if (maxScrollContent < 0) {\n            maxScrollContent = 0;\n        }\n        this.max[direction] = maxScrollContent + this.margin[direction];\n    }\n    changeZoom() {\n        this.contentZoom.style.transform = 'scale(' + this.zoom + ')';\n        this.dimensionRefreshed(true);\n    }\n    dimensionRefreshed(force = false) {\n        if (this.contentWrapper.offsetHeight > 0 && this.contentWrapper.offsetWidth > 0) {\n            this.loadedOnce = true;\n            if (this.savedPercent) {\n                this.position.x = this.contentWrapper.offsetWidth * this.savedPercent.x;\n                this.position.y = this.contentWrapper.offsetHeight * this.savedPercent.y;\n                this.savedPercent = undefined;\n            }\n        }\n        else if (this.loadedOnce) {\n            this.savedPercent = {\n                x: this.position.x / this.contentWrapperSize.x,\n                y: this.position.y / this.contentWrapperSize.y\n            };\n        }\n        if (!this.calculateRealSize() && !force) {\n            return;\n        }\n        if (this.contentWrapperSize.y - this.display.y > 0) {\n            if (!this.y_scroll_visible) {\n                this.y_scroll_visible = true;\n                this.calculatePositionScrollerContainer('y');\n            }\n            this.calculateSizeScroller('y');\n            this.scrollDirection('y', this.y);\n        }\n        else if (this.y_scroll_visible) {\n            this.y_scroll_visible = false;\n            this.calculatePositionScrollerContainer('y');\n            this.calculateSizeScroller('y');\n            this.scrollDirection('y', 0);\n        }\n        if (this.contentWrapperSize.x - this.display.x > 0) {\n            if (!this.x_scroll_visible) {\n                this.x_scroll_visible = true;\n                this.calculatePositionScrollerContainer('x');\n            }\n            this.calculateSizeScroller('x');\n            this.scrollDirection('x', this.x);\n        }\n        else if (this.x_scroll_visible) {\n            this.x_scroll_visible = false;\n            this.calculatePositionScrollerContainer('x');\n            this.calculateSizeScroller('x');\n            this.scrollDirection('x', 0);\n        }\n    }\n    createResizeObserver() {\n        let inProgress = false;\n        return new Aventus.ResizeObserver({\n            callback: entries => {\n                if (inProgress) {\n                    return;\n                }\n                inProgress = true;\n                this.dimensionRefreshed();\n                inProgress = false;\n            },\n            fps: 30\n        });\n    }\n    addResizeObserver() {\n        if (this.observer == undefined) {\n            this.observer = this.createResizeObserver();\n        }\n        this.observer.observe(this.contentWrapper);\n        this.observer.observe(this);\n    }\n    postCreation() {\n        this.dimensionRefreshed();\n        this.addResizeObserver();\n        this.addAction();\n    }\n    static lock(element) {\n        const container = element.findParentByType(Components.Scrollable);\n        if (container) {\n            container.disable = true;\n        }\n    }\n    static unlock(element) {\n        const container = element.findParentByType(Components.Scrollable);\n        if (container) {\n            container.disable = false;\n        }\n    }\n}\nComponents.Scrollable.Namespace=`Core.Components`;\nComponents.Scrollable.Tag=`rk-scrollable`;\n_.Components.Scrollable=Components.Scrollable;\nif(!window.customElements.get('rk-scrollable')){window.customElements.define('rk-scrollable', Components.Scrollable);Aventus.WebComponentInstance.registerDefinition(Components.Scrollable);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Core.Components.TouchRecord","isStrong":false},{"fullName":"SVGSVGElement","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.Animation","isStrong":false},{"fullName":"DOMMatrix","isStrong":false},{"fullName":"Core.Components.Tracker","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Event","isStrong":false},{"fullName":"WheelEvent","isStrong":false},{"fullName":"Aventus.NormalizedEvent","isStrong":false},{"fullName":"TouchEvent","isStrong":false},{"fullName":"PointerEvent","isStrong":false},{"fullName":"MouseEvent","isStrong":false}],"fullName":"Core.Components.Scrollable","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-scrollable"},{"code":"Components.Tabs = class Tabs extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"header_full_width\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'first_active'() { return this.getBoolAttr('first_active') }\n    set 'first_active'(val) { this.setBoolAttr('first_active', val) }\rget 'last_active'() { return this.getBoolAttr('last_active') }\n    set 'last_active'(val) { this.setBoolAttr('last_active', val) }\r    get 'header_full_width'() { return this.getBoolProp('header_full_width') }\n    set 'header_full_width'(val) { this.setBoolAttr('header_full_width', val) }\r    tabs = {};\n    activeHeader;\n    elements = [];\n    static __style = `:host{--_tabs-background-color: var(--tabs-background-color, #ffffff);--_tabs-header-background-color: var(--tabs-header-background-color, var(--darker-active, rgb(125, 125, 125)));--_tabs-header-background-color-active: var(--tabs-header-background-color-active, var(--_tabs-background-color));--_tabs-header-padding: var(--tabs-header-padding, 10px 10px);--_tabs-header-font-size: var(--tabs-header-font-size, calc(var(--font-size) * 0.855));--_tabs-body-padding: var(--tabs-body-padding, 10px 10px);--_tabs-spacing: var(--tabs-spacing, 5px);--_tabs-transition: var(--tabs-transition, background-color var(--bezier-curve) 0.2s);--_tabs-border-radius: var(--tabs-border-radius, var(--border-radius-sm, 0))}:host{display:flex;flex-direction:column;overflow:hidden;width:100%}:host .header .header-wrapper{align-items:center;display:flex;flex-direction:row;flex-wrap:nowrap;gap:var(--_tabs-spacing);padding-bottom:var(--_tabs-spacing)}:host .body{background-color:var(--_tabs-background-color);border-radius:var(--_tabs-border-radius);padding:var(--_tabs-body-padding);width:100%}:host([first_active]) .body{border-top-left-radius:0px}:host([last_active]) .body{border-top-right-radius:0px}:host([header_full_width]) .header .header-wrapper>*{flex-grow:1}`;\n    constructor() { super(); \rthis.validateCorner=this.validateCorner.bind(this) }\n    __getStatic() {\n        return Tabs;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Tabs.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<rk-scrollable y_scroll=\"false\" class=\"header\" floating_scroll auto_hide _id=\"tabs_0\">\r    <div class=\"header-wrapper\" _id=\"tabs_1\"></div>\r</rk-scrollable><div class=\"body\" _id=\"tabs_2\">\r    <slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"headerScrollEl\",\n      \"ids\": [\n        \"tabs_0\"\n      ]\n    },\n    {\n      \"name\": \"headerEl\",\n      \"ids\": [\n        \"tabs_1\"\n      ]\n    },\n    {\n      \"name\": \"bodyEl\",\n      \"ids\": [\n        \"tabs_2\"\n      ]\n    }\n  ],\n  \"injection\": [\n    {\n      \"id\": \"tabs_0\",\n      \"injectionName\": \"x_scroll\",\n      \"inject\": (c) => c.comp.__83b521fae0adf34c398cd02a022cfc5fmethod0(),\n      \"once\": true\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Tabs\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('first_active')) { this.attributeChangedCallback('first_active', false, false); }\rif(!this.hasAttribute('last_active')) { this.attributeChangedCallback('last_active', false, false); }\rif(!this.hasAttribute('header_full_width')) { this.attributeChangedCallback('header_full_width', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('first_active');\rthis.__upgradeProperty('last_active');\rthis.__upgradeProperty('header_full_width');\r }\n    __listBoolProps() { return [\"first_active\",\"last_active\",\"header_full_width\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    loadTabs() {\n        // let elements = this.elements;\n        let elements = this.getElementsInSlot();\n        let first = null;\n        for (let element of elements) {\n            element.style.display = 'none';\n            if (element instanceof Components.Tab) {\n                this.tabs[element.label] = element;\n                let header = new (this.defineTabHeader())();\n                this.headerEl.appendChild(header);\n                header.init(element, this);\n                if (first == null) {\n                    first = header;\n                }\n            }\n        }\n        if (first) {\n            this.displayActive(first);\n        }\n    }\n    displayActive(tabHeader) {\n        if (this.activeHeader) {\n            this.activeHeader.active = false;\n            this.activeHeader.tab.style.display = 'none';\n        }\n        this.activeHeader = tabHeader;\n        this.activeHeader.active = true;\n        this.activeHeader.tab.style.display = '';\n        this.validateCorner();\n    }\n    defineTabHeader() {\n        return Components.TabHeader;\n    }\n    validateCorner() {\n        this.first_active = this.headerScrollEl.x == 0 && this.activeHeader == this.headerEl.children[0];\n        this.last_active = this.headerScrollEl['contentWrapper'].offsetWidth >= this.offsetWidth && this.headerScrollEl.x == this.headerScrollEl['max'].x && this.activeHeader == this.headerEl.children[this.headerEl.children.length - 1];\n    }\n    postCreation() {\n        super.postCreation();\n        this.headerScrollEl.onScrollChange.add(this.validateCorner);\n        this.loadTabs();\n    }\n    __83b521fae0adf34c398cd02a022cfc5fmethod0() {\n        return !this.header_full_width;\n    }\n}\nComponents.Tabs.Namespace=`Core.Components`;\nComponents.Tabs.Tag=`rk-tabs`;\n_.Components.Tabs=Components.Tabs;\nif(!window.customElements.get('rk-tabs')){window.customElements.define('rk-tabs', Components.Tabs);Aventus.WebComponentInstance.registerDefinition(Components.Tabs);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.Tab","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Core.Components.TabHeader","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Scrollable","isStrong":false}],"fullName":"Core.Components.Tabs","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-tabs"},{"code":"Permissions.Tree.PermissionTree=class PermissionTree extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Permissions.Tree.PermissionTree, Core\"; }\n    AppName;\n    IconTagName;\n    PermissionId;\n    Permissions = [];\n}\nPermissions.Tree.PermissionTree.Namespace=`Core.Permissions.Tree`;\r\nPermissions.Tree.PermissionTree.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"AppName\":\"string\",\"IconTagName\":\"string\",\"PermissionId\":\"number\",\"Permissions\":\"PermissionTreeItem\"};\r\nAventus.Converter.register(Permissions.Tree.PermissionTree.Fullname, Permissions.Tree.PermissionTree);\r\n_.Permissions.Tree.PermissionTree=Permissions.Tree.PermissionTree;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Permissions.Tree.PermissionTreeItem","isStrong":false}],"fullName":"Core.Permissions.Tree.PermissionTree","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.PermissionGroup=class PermissionGroup extends AventusSharp.Data.Storable {\n    static get Fullname() { return \"Core.Data.PermissionGroup, Core\"; }\n    Data;\n    Permission;\n    GroupId;\n}\nData.PermissionGroup.Namespace=`Core.Data`;\r\nData.PermissionGroup.$schema={...(AventusSharp.Data.Storable?.$schema ?? {}), \"Permission\":\"Core.Data.Permission\",\"GroupId\":\"number\"};\r\nAventus.Converter.register(Data.PermissionGroup.Fullname, Data.PermissionGroup);\r\n_.Data.PermissionGroup=Data.PermissionGroup;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":true},{"fullName":"Aventus.IData","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.Permission","isStrong":false}],"fullName":"Core.Data.PermissionGroup","required":false,"type":2,"isExported":true,"convertibleName":"Fullname"},{"code":"Routes.PermissionGroupRouter=class PermissionGroupRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.GetAllByGroup = this.GetAllByGroup.bind(this);\n        this.EditPermission = this.EditPermission.bind(this);\n    }\n    async GetAllByGroup(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissiongroup/bygroup`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n    async EditPermission(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissiongroup/editpermission`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n}\nRoutes.PermissionGroupRouter.Namespace=`Core.Routes`;\r\n_.Routes.PermissionGroupRouter=Routes.PermissionGroupRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Core.Data.PermissionGroup","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false}],"fullName":"Core.Routes.PermissionGroupRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Permissions.PermissionForUser=class PermissionForUser extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Logic.PermissionForUser, Core\"; }\n    permissionGroups = [];\n    permissionUsers = [];\n}\nPermissions.PermissionForUser.Namespace=`Core.Permissions`;\r\nPermissions.PermissionForUser.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"permissionGroups\":\"Core.Data.PermissionGroup\",\"permissionUsers\":\"Core.Data.PermissionUser\"};\r\nAventus.Converter.register(Permissions.PermissionForUser.Fullname, Permissions.PermissionForUser);\r\n_.Permissions.PermissionForUser=Permissions.PermissionForUser;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.PermissionGroup","isStrong":false},{"fullName":"Core.Data.PermissionUser","isStrong":false}],"fullName":"Core.Permissions.PermissionForUser","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Routes.PermissionRouter=class PermissionRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.Can = this.Can.bind(this);\n        this.GetPermissionsTree = this.GetPermissionsTree.bind(this);\n        this.GetPermissionsForUser = this.GetPermissionsForUser.bind(this);\n    }\n    async Can(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/can`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n    async GetPermissionsTree() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/getpermissionstree`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n    async GetPermissionsForUser(idUser) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/permissions/GetPermissionsForUser/${idUser}`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n}\nRoutes.PermissionRouter.Namespace=`Core.Routes`;\r\n_.Routes.PermissionRouter=Routes.PermissionRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false},{"fullName":"Core.Permissions.Tree.PermissionTree","isStrong":false},{"fullName":"Core.Permissions.PermissionForUser","isStrong":false},{"fullName":"Core.Permissions.IPermissionQuery","isStrong":false}],"fullName":"Core.Routes.PermissionRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Permissions.Permission=class Permission {\n    static saved = {};\n    static async can(query) {\n        if (!query.additionalInfo) {\n            query.additionalInfo = \"\";\n        }\n        let key = query.$type + \"$\" + query.value + \"$\" + query.additionalInfo;\n        if (Object.keys(this.saved).includes(key)) {\n            return this.saved[key];\n        }\n        let response = await new Routes.PermissionRouter().Can({ permissionQuery: query });\n        if (response.success && response.result !== undefined) {\n            this.saved[key] = response.result;\n            return this.saved[key];\n        }\n        else {\n            console.log(response.errors);\n        }\n        return false;\n    }\n    static clear() {\n        this.saved = {};\n    }\n}\nPermissions.Permission.Namespace=`Core.Permissions`;\r\n_.Permissions.Permission=Permissions.Permission;\r\n","dependances":[{"fullName":"Core.Permissions.IPermissionQuery","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Routes.PermissionRouter","isStrong":false}],"fullName":"Core.Permissions.Permission","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"_n = Websocket.Events.TransactionCancelledEvent;\r\nWebsocket.Events.TransactionCancelledEvent=class TransactionCancelledEvent extends AventusSharp.WebSocket.WsEvent {\n    /**\n     * @inheritdoc\n     */\n    path() {\n        return `${this.getPrefix()}Core.Websocket.Events.TransactionCancelledEvent`;\n    }\n    constructor(endpoint, getPrefix) {\n        super(endpoint ?? Websocket.MainEndPoint.getInstance(), getPrefix);\n    }\n}\nWebsocket.Events.TransactionCancelledEvent.Namespace=`Core.Websocket.Events`;\r\n_.Websocket.Events.TransactionCancelledEvent=Websocket.Events.TransactionCancelledEvent;\r\n\r\nObject.assign(Websocket.Events.TransactionCancelledEvent, _n);\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.WsEvent","isStrong":true},{"fullName":"Core.Websocket.Events.TransactionCancelledEvent.Body","isStrong":false},{"fullName":"AventusSharp.WebSocket.EndPoint","isStrong":false},{"fullName":"Core.Websocket.MainEndPoint","isStrong":false}],"fullName":"Core.Websocket.Events.TransactionCancelledEvent","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Websocket.Events.TransactionCancelledEvent.Body=class Body extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Websocket.Events.TransactionCancelledEvent+Body, Core\"; }\n    guid;\n}\nWebsocket.Events.TransactionCancelledEvent.Body.Namespace=`Core.Websocket.Events.TransactionCancelledEvent`;\r\nWebsocket.Events.TransactionCancelledEvent.Body.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"guid\":\"string\"};\r\nAventus.Converter.register(Websocket.Events.TransactionCancelledEvent.Body.Fullname, Websocket.Events.TransactionCancelledEvent.Body);\r\n_.Websocket.Events.TransactionCancelledEvent.Body=Websocket.Events.TransactionCancelledEvent.Body;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Websocket.Events.TransactionCancelledEvent.Body","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Lib.Platform=class Platform {\n    static onScreenChange = new Aventus.Callback();\n    static init() {\n        let currentDevice = this.device;\n        let screenObserver = new Aventus.ResizeObserver(() => {\n            let newDevice = this.device;\n            if (currentDevice != newDevice) {\n                currentDevice = newDevice;\n                this.onScreenChange.trigger([newDevice]);\n            }\n        });\n        screenObserver.observe(document.body);\n        const wsInstance = Websocket.MainEndPoint.getInstance();\n        wsInstance.onOpen.add(() => {\n            if (!this._isConnected) {\n                this._isConnected = true;\n                this.onReconnect.trigger([]);\n            }\n        });\n        wsInstance.onClose.add(() => {\n            if (this._isConnected) {\n                this._isConnected = false;\n                this.onDisconnect.trigger([]);\n            }\n        });\n    }\n    static onScreenChangeAndRun(cb) {\n        this.onScreenChange.add(cb);\n        cb(this.device);\n    }\n    static get device() {\n        if (document.body.offsetWidth > 1224) {\n            return \"pc\";\n        }\n        else if (document.body.offsetWidth > 768) {\n            return \"tablet\";\n        }\n        return \"mobile\";\n    }\n    static get isStandalone() {\n        if (\"standalone\" in window.navigator && window.navigator.standalone) {\n            return true;\n        }\n        else if (window.matchMedia('(display-mode: standalone)').matches) {\n            return true;\n        }\n        return false;\n    }\n    static get isiOS() {\n        let test1 = /iphone|ipad|ipod/.test(window.navigator.userAgent.toLowerCase());\n        let test2 = navigator.platform === \"MacIntel\" && navigator.maxTouchPoints > 1;\n        return test1 || test2;\n    }\n    static getRatio(element) {\n        return element.offsetWidth + \" / \" + element.offsetHeight;\n    }\n    static _isConnected = true;\n    static get isConnected() {\n        return Websocket.MainEndPoint.getInstance().isReady();\n    }\n    static onDisconnect = new Aventus.Callback();\n    static onReconnect = new Aventus.Callback();\n}\nLib.Platform.Namespace=`Core.Lib`;\r\n_.Lib.Platform=Lib.Platform;\r\n","dependances":[{"fullName":"Aventus.Callback","isStrong":true},{"fullName":"Core.Lib.DeviceType","isStrong":true},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Core.Websocket.MainEndPoint","isStrong":false},{"fullName":"HTMLElement","isStrong":false}],"fullName":"Core.Lib.Platform","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.Tooltip = class Tooltip extends Aventus.WebComponent {\n    get 'visible'() { return this.getBoolAttr('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\rget 'position'() { return this.getStringAttr('position') }\n    set 'position'(val) { this.setStringAttr('position', val) }\rget 'color'() { return this.getStringAttr('color') }\n    set 'color'(val) { this.setStringAttr('color', val) }\rget 'use_absolute'() { return this.getBoolAttr('use_absolute') }\n    set 'use_absolute'(val) { this.setBoolAttr('use_absolute', val) }\rget 'delay'() { return this.getNumberAttr('delay') }\n    set 'delay'(val) { this.setNumberAttr('delay', val) }\rget 'delay_touch'() { return this.getNumberAttr('delay_touch') }\n    set 'delay_touch'(val) { this.setNumberAttr('delay_touch', val) }\r    parent = null;\n    parentEv = null;\n    isDestroyed = false;\n    timeoutEnter = false;\n    timeout = 0;\n    pressManager;\n    static __style = `:host{--local-tooltip-from-y: 0;--local-tooltip-from-x: 0;--local-tooltip-to-y: 0;--local-tooltip-to-x: 0;--_tooltip-background-color: var(--tooltip-background-color, var(--primary-color));--_tooltip-elevation: var(--tooltip-elevation, var(--elevation-4));--_tooltip-color: var(--tooltip-color, var(--text-color))}:host{background-color:var(--_tooltip-background-color);border-radius:var(--border-radius-sm);box-shadow:var(--elevation-4);color:var(--_tooltip-color);opacity:0;padding:5px 15px;pointer-events:none;position:absolute;transition:.5s opacity var(--bezier-curve),.5s visibility var(--bezier-curve),.5s top var(--bezier-curve),.5s bottom var(--bezier-curve),.5s right var(--bezier-curve),.5s left var(--bezier-curve),.5s transform var(--bezier-curve);visibility:hidden;width:max-content;z-index:1}:host::after{content:\"\";position:absolute}:host([visible]){opacity:1;visibility:visible}:host([position=bottom]){transform:translateX(-50%)}:host([position=bottom])::after{border-bottom:9px solid var(--_tooltip-background-color);border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);left:50%;top:-8px;transform:translateX(-50%)}:host([use_absolute][position=bottom]){left:var(--local-tooltip-from-x);top:var(--local-tooltip-from-y);max-height:calc(100% - var(--local-tooltip-to-y) - 10px)}:host([use_absolute][visible][position=bottom]){top:var(--local-tooltip-to-y)}:host([position=bottom]:not([use_absolute])){bottom:0px;left:50%;transform:translateX(-50%) translateY(calc(100% - 10px))}:host([position=bottom][visible]:not([use_absolute])){transform:translateX(-50%) translateY(calc(100% + 10px))}:host([position=top]){transform:translateX(-50%)}:host([position=top])::after{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:9px solid var(--_tooltip-background-color);bottom:-8px;left:50%;transform:translateX(-50%)}:host([use_absolute][position=top]){bottom:var(--local-tooltip-from-y);left:var(--local-tooltip-from-x);max-height:calc(100% - var(--local-tooltip-to-y) - 10px)}:host([use_absolute][visible][position=top]){bottom:var(--local-tooltip-to-y)}:host([position=top]:not([use_absolute])){left:50%;top:0px;transform:translateX(-50%) translateY(calc(-100% + 10px))}:host([position=top][visible]:not([use_absolute])){transform:translateX(-50%) translateY(calc(-100% - 10px))}:host([position=right]){transform:translateY(-50%)}:host([position=right])::after{border-bottom:6px solid rgba(0,0,0,0);border-right:9px solid var(--_tooltip-background-color);border-top:6px solid rgba(0,0,0,0);left:-8px;top:50%;transform:translateY(-50%)}:host([use_absolute][position=right]){left:var(--local-tooltip-from-x);top:var(--local-tooltip-from-y);max-width:calc(100% - var(--local-tooltip-to-x) - 10px)}:host([use_absolute][visible][position=right]){left:var(--local-tooltip-to-x)}:host([position=right]:not([use_absolute])){right:0;top:50%;transform:translateX(calc(100% - 10px)) translateY(-50%)}:host([visible][position=right]:not([use_absolute])){transform:translateX(calc(100% + 10px)) translateY(-50%)}:host([position=left]){right:var(--local-tooltip-from-x);top:var(--local-tooltip-from-y);transform:translateY(-50%)}:host([position=left])::after{border-bottom:6px solid rgba(0,0,0,0);border-left:9px solid var(--_tooltip-background-color);border-top:6px solid rgba(0,0,0,0);right:-8px;top:50%;transform:translateY(-50%)}:host([use_absolute][position=left]){right:var(--local-tooltip-from-x);top:var(--local-tooltip-from-y);max-width:calc(100% - var(--local-tooltip-to-x) - 10px)}:host([use_absolute][visible][position=left]){right:var(--local-tooltip-to-x)}:host([position=left]:not([use_absolute])){left:0;top:50%;transform:translateX(calc(-100% + 10px)) translateY(-50%)}:host([visible][position=left]:not([use_absolute])){transform:translateX(calc(-100% - 10px)) translateY(-50%)}:host([color=primary]){--_tooltip-background-color: var(--primary);--_tooltip-color: var(--text-color-primary)}:host([color=secondary]){--_tooltip-background-color: var(--secondary);--_tooltip-color: var(--text-color-secondary)}:host([color=green]){--_tooltip-background-color: var(--green);--_tooltip-color: var(--text-color-green)}:host([color=success]){--_tooltip-background-color: var(--success);--_tooltip-color: var(--text-color-success)}:host([color=red]){--_tooltip-background-color: var(--red);--_tooltip-color: var(--text-color-red)}:host([color=error]){--_tooltip-background-color: var(--error);--_tooltip-color: var(--text-color-error)}:host([color=orange]){--_tooltip-background-color: var(--orange);--_tooltip-color: var(--text-color-orange)}:host([color=warning]){--_tooltip-background-color: var(--warning);--_tooltip-color: var(--text-color-warning)}:host([color=blue]){--_tooltip-background-color: var(--blue);--_tooltip-color: var(--text-color-blue)}:host([color=information]){--_tooltip-background-color: var(--information);--_tooltip-color: var(--text-color-information)}`;\n    constructor() { super(); \rthis.onMouseEnter=this.onMouseEnter.bind(this)\rthis.onMouseLeave=this.onMouseLeave.bind(this)\rthis.onTransitionEnd=this.onTransitionEnd.bind(this) }\n    __getStatic() {\n        return Tooltip;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Tooltip.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Tooltip\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('visible')) { this.attributeChangedCallback('visible', false, false); }\rif(!this.hasAttribute('position')){ this['position'] = 'top'; }\rif(!this.hasAttribute('color')){ this['color'] = undefined; }\rif(!this.hasAttribute('use_absolute')) { this.attributeChangedCallback('use_absolute', false, false); }\rif(!this.hasAttribute('delay')){ this['delay'] = 50; }\rif(!this.hasAttribute('delay_touch')){ this['delay_touch'] = 500; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('visible');\rthis.__upgradeProperty('position');\rthis.__upgradeProperty('color');\rthis.__upgradeProperty('use_absolute');\rthis.__upgradeProperty('delay');\rthis.__upgradeProperty('delay_touch');\r }\n    __listBoolProps() { return [\"visible\",\"use_absolute\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    calculatePosition() {\n        if (!this.parentEv || !this.use_absolute)\n            return;\n        let rect = this.parentEv.getBoundingClientRect();\n        let center = {\n            x: rect.left + rect.width / 2,\n            y: rect.y + rect.height / 2\n        };\n        if (this.position == 'bottom') {\n            let bottom = rect.y + rect.height;\n            this.style.setProperty(\"--local-tooltip-from-y\", bottom - 10 + 'px');\n            this.style.setProperty(\"--local-tooltip-from-x\", center.x + 'px');\n            this.style.setProperty(\"--local-tooltip-to-x\", center.x + 'px');\n            this.style.setProperty(\"--local-tooltip-to-y\", bottom + 10 + 'px');\n        }\n        else if (this.position == 'top') {\n            let bottom = document.body.offsetHeight - rect.top;\n            this.style.setProperty(\"--local-tooltip-from-y\", bottom - 10 + 'px');\n            this.style.setProperty(\"--local-tooltip-from-x\", center.x + 'px');\n            this.style.setProperty(\"--local-tooltip-to-x\", center.x + 'px');\n            this.style.setProperty(\"--local-tooltip-to-y\", bottom + 10 + 'px');\n        }\n        else if (this.position == 'right') {\n            let left = rect.x + rect.width;\n            this.style.setProperty(\"--local-tooltip-from-y\", center.y + 'px');\n            this.style.setProperty(\"--local-tooltip-from-x\", left - 10 + 'px');\n            this.style.setProperty(\"--local-tooltip-to-x\", left + 10 + 'px');\n            this.style.setProperty(\"--local-tooltip-to-y\", center.y + 10 + 'px');\n        }\n        else if (this.position == 'left') {\n            let left = document.body.offsetWidth - rect.left;\n            this.style.setProperty(\"--local-tooltip-from-y\", center.y + 'px');\n            this.style.setProperty(\"--local-tooltip-from-x\", left - 10 + 'px');\n            this.style.setProperty(\"--local-tooltip-to-x\", left + 10 + 'px');\n            this.style.setProperty(\"--local-tooltip-to-y\", center.y + 'px');\n        }\n    }\n    onMouseEnter() {\n        this.calculatePosition();\n        let delay = this.delay == 0 ? 50 : this.delay;\n        if (this.use_absolute) {\n            document.body.appendChild(this);\n            this.timeoutEnter = false;\n            this.timeout = setTimeout(() => {\n                this.timeoutEnter = true;\n                this.visible = true;\n            }, delay);\n        }\n        else {\n            if (delay == 0) {\n                this.visible = true;\n            }\n            else {\n                this.timeoutEnter = false;\n                this.timeout = setTimeout(() => {\n                    this.timeoutEnter = true;\n                    this.visible = true;\n                }, delay);\n            }\n        }\n    }\n    onMouseLeave() {\n        this.visible = false;\n        if (this.use_absolute) {\n            if (!this.timeoutEnter) {\n                clearTimeout(this.timeout);\n                this.onTransitionEnd();\n            }\n        }\n        else if (this.delay != 0) {\n            if (!this.timeoutEnter) {\n                clearTimeout(this.timeout);\n                this.onTransitionEnd();\n            }\n        }\n    }\n    onTransitionEnd() {\n        if (!this.use_absolute || this.visible)\n            return;\n        if (this.parent && !this.isDestroyed)\n            this.parent?.appendChild(this);\n        else\n            this.remove();\n    }\n    onLongPress() {\n        this.calculatePosition();\n        if (this.use_absolute) {\n            document.body.appendChild(this);\n            this.timeoutEnter = false;\n            this.timeout = setTimeout(() => {\n                this.timeoutEnter = true;\n                this.visible = true;\n            }, 50);\n        }\n        else {\n            this.visible = true;\n        }\n    }\n    registerAction() {\n        if (!this.parentEv)\n            return;\n        if (Lib.Platform.device != \"pc\") {\n            this.pressManager = new Aventus.PressManager({\n                element: this.parentEv,\n                onLongPress: () => {\n                    this.onLongPress();\n                },\n                onPressEnd: () => {\n                    this.onMouseLeave();\n                },\n                delayLongPress: this.delay_touch\n            });\n        }\n        else {\n            this.parentEv.addEventListener(\"mouseenter\", this.onMouseEnter);\n            this.parentEv.addEventListener(\"mouseleave\", this.onMouseLeave);\n        }\n        this.addEventListener(\"transitionend\", this.onTransitionEnd);\n    }\n    postCreation() {\n        let parentEv = this.parentNode;\n        if (parentEv instanceof ShadowRoot) {\n            parentEv = parentEv.host;\n        }\n        if (parentEv instanceof HTMLElement) {\n            this.parentEv = parentEv;\n        }\n        this.parent = this.parentNode;\n        this.registerAction();\n    }\n    postDestruction() {\n        this.isDestroyed = true;\n        super.postDestruction();\n        if (!this.parentEv)\n            return;\n        this.parentEv.removeEventListener(\"mouseenter\", this.onMouseEnter);\n        this.parentEv.removeEventListener(\"mouseleave\", this.onMouseLeave);\n    }\n}\nComponents.Tooltip.Namespace=`Core.Components`;\nComponents.Tooltip.Tag=`rk-tooltip`;\n_.Components.Tooltip=Components.Tooltip;\nif(!window.customElements.get('rk-tooltip')){window.customElements.define('rk-tooltip', Components.Tooltip);Aventus.WebComponentInstance.registerDefinition(Components.Tooltip);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.ColorsType","isStrong":false},{"fullName":"Node","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.Lib.Platform","isStrong":false}],"fullName":"Core.Components.Tooltip","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-tooltip"},{"code":"Errors.CoreError=class CoreError extends Aventus.GenericError {\n    static get Fullname() { return \"Core.Tools.CoreError, Core\"; }\n}\nErrors.CoreError.Namespace=`Core.Errors`;\r\nErrors.CoreError.$schema={...(Aventus.GenericError?.$schema ?? {}), };\r\nAventus.Converter.register(Errors.CoreError.Fullname, Errors.CoreError);\r\n_.Errors.CoreError=Errors.CoreError;\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Core.Errors.CoreErrorCode","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Errors.CoreError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Lib.TransactionManager=class TransactionManager {\n    static mainRouter;\n    static mutex;\n    static cancelEvent;\n    static guid;\n    static onTransactionBegin = new Aventus.Callback();\n    static onTransactionEnd = new Aventus.Callback();\n    static init() {\n        this.mainRouter = new Routes.MainRouter();\n        this.mutex = new Aventus.Mutex();\n        Lib.Platform.onDisconnect.add(async () => {\n            this.mutex.dispose();\n            if (this.guid) {\n                this.guid = undefined;\n                try {\n                    await this.onTransactionEnd.trigger([false]);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n            }\n        });\n        this.cancelEvent = new Websocket.Events.TransactionCancelledEvent();\n        this.cancelEvent.listen();\n        this.cancelEvent.onTrigger.add(async (body) => {\n            return;\n            if (body.guid == this.guid) {\n                this.guid = undefined;\n                try {\n                    await this.onTransactionEnd.trigger([false]);\n                }\n                catch (e) {\n                    console.error(e);\n                }\n                this.mutex.release();\n            }\n        });\n    }\n    static async begin(ms = 5000) {\n        await this.mutex.waitOne();\n        const result = await this.mainRouter.BeginTransaction({ ms });\n        if (result.success && result.result) {\n            try {\n                this.guid = result.result;\n                await this.onTransactionBegin.trigger([]);\n            }\n            catch (e) {\n                result.errors.push(new Errors.CoreError(Errors.CoreErrorCode.UnknowError, e));\n            }\n        }\n        return result;\n    }\n    static isActive(guid) {\n        return this.guid == guid;\n    }\n    static async commit(guid) {\n        if (this.guid != guid) {\n            const err = new AventusSharp.Tools.VoidWithError();\n            err.errors.push(new Errors.CoreError(Errors.CoreErrorCode.TransactionGuidMissmatch, \"Les ids de transaction sont différents\"));\n            return err;\n        }\n        this.guid = undefined;\n        const result = await this.mainRouter.CommitTransaction({ guid });\n        try {\n            await this.onTransactionEnd.trigger([result.success]);\n        }\n        catch (e) {\n            result.errors.push(new Errors.CoreError(Errors.CoreErrorCode.UnknowError, e));\n        }\n        this.mutex.release();\n        return result;\n    }\n    static async rollback(guid) {\n        if (this.guid != guid) {\n            const err = new AventusSharp.Tools.VoidWithError();\n            err.errors.push(new Errors.CoreError(Errors.CoreErrorCode.TransactionGuidMissmatch, \"Les ids de transaction sont différents\"));\n            return err;\n        }\n        this.guid = undefined;\n        const result = await this.mainRouter.RollbackTransaction({ guid });\n        try {\n            await this.onTransactionEnd.trigger([false]);\n        }\n        catch (e) {\n            result.errors.push(new Errors.CoreError(Errors.CoreErrorCode.UnknowError, e));\n        }\n        this.mutex.release();\n        return result;\n    }\n}\nLib.TransactionManager.Namespace=`Core.Lib`;\r\n_.Lib.TransactionManager=Lib.TransactionManager;\r\n","dependances":[{"fullName":"Core.Routes.MainRouter","isStrong":true},{"fullName":"Aventus.Mutex","isStrong":true},{"fullName":"Core.Websocket.Events.TransactionCancelledEvent","isStrong":true},{"fullName":"Aventus.Callback","isStrong":true},{"fullName":"Aventus.Asyncable","isStrong":true},{"fullName":"Core.Lib.Platform","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Core.Errors.CoreError","isStrong":false},{"fullName":"Core.Errors.CoreErrorCode","isStrong":false},{"fullName":"AventusSharp.Tools.VoidWithError","isStrong":false}],"fullName":"Core.Lib.TransactionManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"RAM.RamWithTransaction=class RamWithTransaction {\n    memoryUpdateDelete = new Map();\n    memoryCreate = new Map();\n    memoryId = [];\n    isTransactionActive = false;\n    ram;\n    constructor(ram) {\n        this.ram = ram;\n        this.onTransactionBegin = this.onTransactionBegin.bind(this);\n        this.onTransactionEnd = this.onTransactionEnd.bind(this);\n        this.beforeRecordDelete = this.beforeRecordDelete.bind(this);\n        this.beforeRecordSet = this.beforeRecordSet.bind(this);\n        Lib.TransactionManager.onTransactionBegin.add(this.onTransactionBegin);\n        Lib.TransactionManager.onTransactionEnd.add(this.onTransactionEnd);\n        ram.beforeRecordDelete = this.beforeRecordDelete;\n        ram.beforeRecordSet = this.beforeRecordSet;\n    }\n    onTransactionBegin() {\n        this.isTransactionActive = true;\n    }\n    async onTransactionEnd(success) {\n        this.isTransactionActive = false;\n        if (!success) {\n            for (const [id, item] of this.memoryUpdateDelete) {\n                let resultTemp = new Aventus.ResultRamWithError();\n                let type = this.ram.records.has(id) ? 'updated' : 'created';\n                await this.ram.addOrUpdateData(item, resultTemp);\n                if (resultTemp.result)\n                    this.ram.publish(type, resultTemp.result);\n            }\n            this.memoryUpdateDelete.clear();\n            for (const [id, item] of this.memoryCreate) {\n                this.ram.records.delete(id);\n                this.ram.publish('deleted', item);\n            }\n            this.memoryCreate.clear();\n            this.memoryId = [];\n        }\n    }\n    async beforeRecordSet(item) {\n        if (this.isTransactionActive) {\n            if (this.memoryId.includes(item.Id))\n                return;\n            this.memoryId.push(item.Id);\n            if (this.ram.records.has(item.Id)) {\n                this.memoryUpdateDelete.set(item.Id, item.clone());\n            }\n            else {\n                this.memoryCreate.set(item.Id, item);\n            }\n        }\n    }\n    async beforeRecordDelete(item) {\n        if (this.isTransactionActive) {\n            if (this.memoryId.includes(item.Id))\n                return;\n            this.memoryId.push(item.Id);\n            this.memoryUpdateDelete.set(item.Id, item.clone());\n        }\n    }\n}\nRAM.RamWithTransaction.Namespace=`Core.RAM`;\r\n_.RAM.RamWithTransaction=RAM.RamWithTransaction;\r\n","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Map","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Core.RAM.RamWithTransactionInjector","isStrong":false},{"fullName":"Core.Lib.TransactionManager","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.ResultRamWithError","isStrong":false}],"fullName":"Core.RAM.RamWithTransaction","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"RAM.RamWebSocket=class RamWebSocket extends AventusSharp.RAM.RamWebSocket {\n    constructor() {\n        super();\n        new RAM.RamWithTransaction(this);\n    }\n}\nRAM.RamWebSocket.Namespace=`Core.RAM`;\r\n_.RAM.RamWebSocket=RAM.RamWebSocket;\r\n","dependances":[{"fullName":"AventusSharp.RAM.RamWebSocket","isStrong":true},{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Core.RAM.RamWithTransaction","isStrong":false},{"fullName":"Core.RAM.RamWithTransactionInjector","isStrong":false}],"fullName":"Core.RAM.RamWebSocket","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"RAM.RamHttp=class RamHttp extends AventusSharp.RAM.RamHttp {\n    constructor() {\n        super();\n        new RAM.RamWithTransaction(this);\n    }\n}\nRAM.RamHttp.Namespace=`Core.RAM`;\r\n_.RAM.RamHttp=RAM.RamHttp;\r\n","dependances":[{"fullName":"AventusSharp.RAM.RamHttp","isStrong":true},{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Core.RAM.RamWithTransaction","isStrong":false},{"fullName":"Core.RAM.RamWithTransactionInjector","isStrong":false}],"fullName":"Core.RAM.RamHttp","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"RAM.UserRAM=class UserRAM extends RAM.RamHttp {\n    connectedUserId;\n    /**\n     * Create a singleton to store data\n     */\n    static getInstance() {\n        return Aventus.Instance.get(RAM.UserRAM);\n    }\n    /**\n     * @inheritdoc\n     */\n    defineIndexKey() {\n        return 'Id';\n    }\n    /**\n     * @inheritdoc\n     */\n    getTypeForData(objJson) {\n        return this.addUserMethod(Data.User);\n    }\n    /**\n     * @inheritdoc\n     */\n    defineRoutes() {\n        return new Routes.UserRouter(new Lib.HttpRouter());\n    }\n    async getConnected() {\n        return this.actionGuard.run([\"getConnected\"], async () => {\n            let result = new Aventus.ResultWithError();\n            if (!this.connectedUserId) {\n                let query = await new Routes.UserRouter().GetConnected();\n                if (!query.success || !query.result) {\n                    result.errors = query.errors;\n                    return result;\n                }\n                this.connectedUserId = query.result.Id;\n                this.addOrUpdateData(query.result, result);\n                if (!result.success) {\n                    return result;\n                }\n            }\n            return this.getByIdWithError(this.connectedUserId);\n        });\n    }\n    /**\n     * Mixin pattern to add methods\n     */\n    addUserMethod(Base) {\n        return class Extension extends Base {\n            static get className() {\n                return Base.className || Base.name;\n            }\n            get className() {\n                return Base.className || Base.name;\n            }\n        };\n    }\n}\nRAM.UserRAM.Namespace=`Core.RAM`;\r\n_.RAM.UserRAM=RAM.UserRAM;\r\n","dependances":[{"fullName":"Core.RAM.RamHttp","isStrong":true},{"fullName":"Core.RAM.UserExtended","isStrong":false},{"fullName":"Aventus.IRam","isStrong":true},{"fullName":"Core.RAM.UserRAM","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Aventus.KeysObject","isStrong":false},{"fullName":"Core.Data.User","isStrong":false},{"fullName":"Core.Routes.UserRouter","isStrong":false},{"fullName":"Core.Lib.HttpRouter","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"B","isStrong":false},{"fullName":"Base","isStrong":false}],"fullName":"Core.RAM.UserRAM","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Lib.SessionManager=class SessionManager {\n    static async logout() {\n        try {\n            await new Routes.MainRouter().Logout();\n            Permissions.Permission.clear();\n        }\n        catch { }\n        window.location.reload();\n    }\n    static getUserId() {\n        return userIdConnected;\n    }\n    static async getUser() {\n        let result = await RAM.UserRAM.getInstance().getConnected();\n        if (result.containsCode(Errors.LoginCode.NotConnected, Errors.LoginError)) {\n            this.logout();\n        }\n        else if (!result.success) {\n        }\n        return result.result;\n    }\n}\nLib.SessionManager.Namespace=`Core.Lib`;\r\n_.Lib.SessionManager=Lib.SessionManager;\r\n","dependances":[{"fullName":"Core.Routes.MainRouter","isStrong":false},{"fullName":"Core.Permissions.Permission","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Core.RAM.UserExtended","isStrong":false},{"fullName":"Core.RAM.UserRAM","isStrong":false},{"fullName":"Core.Errors.LoginCode","isStrong":false},{"fullName":"Core.Errors.LoginError","isStrong":false}],"fullName":"Core.Lib.SessionManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.HomePanel = class HomePanel extends System.Panel {\n    get 'currentUser'() {\n\t\t\t\t\t\treturn this.__watch[\"currentUser\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'currentUser'(val) {\n\t\t\t\t\t\tthis.__watch[\"currentUser\"] = val;\n\t\t\t\t\t}\r    btn;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"currentUser\");\r    super.__registerWatchesActions();\n}\n    static __style = `:host{display:flex;flex-direction:column;left:-9px;position:absolute;width:min(500px,var(--os-width));box-shadow:var(--elevation-3)}:host .content{flex-grow:1;max-height:calc(100% - 57px)}:host .content rk-row{height:100%}:host .content rk-row rk-col{height:100%}:host .content rk-row rk-col .title{font-weight:700;height:30px;padding:5px}:host .content rk-row rk-col .scrollable{--scroller-right: 0;height:calc(100% - 30px);width:100%}:host .content rk-row rk-col .recent{width:100%}:host .content rk-row rk-col .recent .recent-container *{background-color:var(--primary-color);border-radius:var(--border-radius-sm);margin:10px;overflow:hidden}:host .content rk-row rk-col .favoris{width:100%}:host .content rk-row rk-col .favoris .favoris-container .grid{display:flex;flex-wrap:wrap;gap:10px;padding:10px}:host .content rk-row rk-col .favoris .favoris-container .grid *{aspect-ratio:1/1;flex-shrink:0;height:auto;width:calc(33.3333333333% - 6.6666666667px)}:host .footer{align-items:center;border-top:1px solid var(--lighter-active);display:flex;gap:10px;height:57px;justify-content:space-between;width:100%}:host .footer .person{align-items:center;border-radius:var(--border-radius-sm);display:flex;margin:10px 10px;padding:8px 10px;transition:background-color .2s var(--bezier-curve)}:host .footer .person .icon{height:30px;width:30px}:host .footer .person .name{margin-left:10px}:host .footer .person:hover{background-color:var(--lighter)}:host .footer .actions{align-items:center;display:flex}:host .footer .actions rk-pwa-button{color:var(--text-color-success);background-color:var(--success);height:36px;width:36px}:host .footer .actions rk-button{--button-padding: 0px 8px;--button-icon-stroke-color: var(--text-color-red);--button-icon-fill-color: transparent;--button-background-color: var(--red);--button-background-color-hover: transparent;border:none;height:36px;width:36px;box-shadow:var(--elevation-2);margin:10px 10px;min-width:auto}@media screen and (max-width: 768px){:host{left:-10px}:host .content rk-row{flex-direction:column}:host .content rk-row rk-col{width:100%;height:50%}}`;\n    __getStatic() {\n        return HomePanel;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(HomePanel.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"content\">\r    <rk-row>\r        <rk-col size=\"6\">\r            <div class=\"recent\">\r                <div class=\"title\">\r                    Récents\r                </div>\r                <rk-scrollable class=\"scrollable recent-container\" floating_scroll _id=\"homepanel_0\">\r                </rk-scrollable>\r            </div>\r        </rk-col>\r        <rk-col size=\"6\">\r            <div class=\"favoris\">\r                <div class=\"title\">\r                    Mes favoris\r                </div>\r                <rk-scrollable class=\"scrollable favoris-container\" floating_scroll>\r                    <div class=\"grid\" _id=\"homepanel_1\"></div>\r                </rk-scrollable>\r            </div>\r        </rk-col>\r    </rk-row>\r</div><div class=\"footer\">\r    <div class=\"person touch\" _id=\"homepanel_2\">\r        <rk-user-profil-picture class=\"icon\" _id=\"homepanel_3\"></rk-user-profil-picture>\r        <div class=\"name\" _id=\"homepanel_4\"></div>\r    </div>\r    <div class=\"actions\">\r        <rk-pwa-button>\r            <rk-tooltip position=\"top\" delay=\"1000\" use_absolute color=\"green\">Installer l'application</rk-tooltip>\r        </rk-pwa-button>\r        <rk-button icon=\"/img/icons/power-off.svg\" _id=\"homepanel_5\"></rk-button>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"recentContainer\",\n      \"ids\": [\n        \"homepanel_0\"\n      ]\n    },\n    {\n      \"name\": \"favorisContainer\",\n      \"ids\": [\n        \"homepanel_1\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"homepanel_3°uri\": {\n      \"fct\": (c) => `${c.print(c.comp.__71121dd8c2837747a91ecf75da806c7amethod0())}`\n    },\n    \"homepanel_4°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__71121dd8c2837747a91ecf75da806c7amethod1())} ${c.print(c.comp.__71121dd8c2837747a91ecf75da806c7amethod2())}`\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"homepanel_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.openProfil(e, pressInstance); }\n    },\n    {\n      \"id\": \"homepanel_5\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.logout(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"HomePanel\";\n    }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"currentUser\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('currentUser');\r }\n    openProfil() {\n        let desktop = this.findParentByType(System.Desktop);\n        if (desktop) {\n            desktop.openUrl(\"Settings\", \"/\", \"/profil\");\n            this.btn.active = false;\n        }\n    }\n    async logout() {\n        Lib.SessionManager.logout();\n    }\n    async displayRecent() {\n        // for(let i = 0; i < 20; i++) {\n        //     let test = new AppIconInline();\n        //     let icon = Aventus.WebComponentInstance.create<AppIcon>(\"Cave.System.AppIcon\");\n        //     let app = await ApplicationRAM.getInstance().getApplicationByName(\"Cave\");\n        //     if(icon && app) {\n        //         test.setIcon(icon);\n        //         test.text = app.DisplayName;\n        //     }\n        //     this.recentContainer.appendChild(test);\n        // }\n    }\n    async displayFavoris() {\n        // for(let i = 0; i < 20; i++) {\n        //     let icon = Aventus.WebComponentInstance.create<AppIcon>(\"Cave.System.AppIcon\");\n        //     if(icon) {\n        //         this.favorisContainer.appendChild(icon);\n        //     }\n        // }\n    }\n    async getUser() {\n        this.currentUser = await Lib.SessionManager.getUser();\n    }\n    postCreation() {\n        this.getUser();\n        this.displayRecent();\n        this.displayFavoris();\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => { },\n            onDrag: () => { },\n        });\n    }\n    __71121dd8c2837747a91ecf75da806c7amethod0() {\n        return this.currentUser?.Picture.Uri;\n    }\n    __71121dd8c2837747a91ecf75da806c7amethod1() {\n        return this.currentUser?.Firstname;\n    }\n    __71121dd8c2837747a91ecf75da806c7amethod2() {\n        return this.currentUser?.Lastname;\n    }\n}\nSystem.HomePanel.Namespace=`Core.System`;\nSystem.HomePanel.Tag=`rk-home-panel`;\n_.System.HomePanel=System.HomePanel;\nif(!window.customElements.get('rk-home-panel')){window.customElements.define('rk-home-panel', System.HomePanel);Aventus.WebComponentInstance.registerDefinition(System.HomePanel);}\n","dependances":[{"fullName":"Core.System.Panel","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Data.User","isStrong":false},{"fullName":"Core.System.HomeBtn","isStrong":false},{"fullName":"Core.System.Desktop","isStrong":false},{"fullName":"Core.Lib.SessionManager","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Row","isStrong":false},{"fullName":"Col","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"UserProfilPicture","isStrong":false},{"fullName":"PwaButton","isStrong":false},{"fullName":"Tooltip","isStrong":false},{"fullName":"Button","isStrong":false}],"fullName":"Core.System.HomePanel","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-home-panel"},{"code":"System.HomeBtn = class HomeBtn extends Aventus.WebComponent {\n    get 'active'() { return this.getBoolAttr('active') }\n    set 'active'(val) { this.setBoolAttr('active', val) }\r    static __style = `:host{position:relative}:host .icon{border-radius:var(--border-radius-sm);cursor:pointer;margin:0 3px;height:var(--desktop-bottom-bar-element);width:var(--desktop-bottom-bar-element);padding:7px;transition:background-color .2s var(--bezier-curve)}:host rk-home-panel{bottom:calc(100% + 5px);height:0;overflow:hidden;transition:bottom var(--bezier-curve) .5s,height var(--bezier-curve) .5s}:host([active]) .icon{background-color:var(--text-color)}:host([active]) .icon rk-img{--img-fill-color: var(--primary-color-opacity)}:host([active]) rk-home-panel{bottom:calc(100% + (var(--desktop-bottom-bar) - var(--desktop-bottom-bar-element))/2 + 3px);height:400px}@media screen and (min-width: 1225px){:host(:not([active])) .icon:hover{background-color:var(--lighter-active)}}@media screen and (max-width: 768px){:host{margin-right:10px}:host([active]) rk-home-panel{bottom:calc(100% + 12px);height:calc(var(--os-height) - 69px)}}`;\n    __getStatic() {\n        return HomeBtn;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(HomeBtn.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"icon\" _id=\"homebtn_0\">\r    <rk-img mode=\"contains\" src=\"/img/icons/house.svg\" class=\"touch\"></rk-img>\r</div><rk-home-panel _id=\"homebtn_1\"></rk-home-panel>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"homePanel\",\n      \"ids\": [\n        \"homebtn_1\"\n      ]\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"homebtn_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleActive(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"HomeBtn\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('active')) { this.attributeChangedCallback('active', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('active');\r }\n    __listBoolProps() { return [\"active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    toggleActive() {\n        this.active = !this.active;\n    }\n    postCreation() {\n        this.homePanel.btn = this;\n    }\n}\nSystem.HomeBtn.Namespace=`Core.System`;\nSystem.HomeBtn.Tag=`rk-home-btn`;\n_.System.HomeBtn=System.HomeBtn;\nif(!window.customElements.get('rk-home-btn')){window.customElements.define('rk-home-btn', System.HomeBtn);Aventus.WebComponentInstance.registerDefinition(System.HomeBtn);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.System.HomePanel","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"HomePanel","isStrong":false}],"fullName":"Core.System.HomeBtn","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-home-btn"},{"code":"Websocket.Routes.DesktopRouter_RegisterOpenApp=class DesktopRouter_RegisterOpenApp extends AventusSharp.WebSocket.WsEvent {\n    /**\n     * @inheritdoc\n     */\n    path() {\n        return `${this.getPrefix()}/desktop/RegisterOpenApp`;\n    }\n    /**\n     * @inheritdoc\n     */\n    listenOnBoot() {\n        return true;\n    }\n}\nWebsocket.Routes.DesktopRouter_RegisterOpenApp.Namespace=`Core.Websocket.Routes`;\r\n_.Websocket.Routes.DesktopRouter_RegisterOpenApp=Websocket.Routes.DesktopRouter_RegisterOpenApp;\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.WsEvent","isStrong":true},{"fullName":"Core.Data.ApplicationOpenInfo","isStrong":false}],"fullName":"Core.Websocket.Routes.DesktopRouter_RegisterOpenApp","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Websocket.Routes.DesktopRouter=class DesktopRouter extends AventusSharp.WebSocket.Route {\n    events;\n    constructor(endpoint) {\n        super(endpoint ?? Websocket.MainEndPoint.getInstance());\n        this.events = {\n            RegisterOpenApp: new Websocket.Routes.DesktopRouter_RegisterOpenApp(this.endpoint, this.getPrefix),\n            RemoveApp: new Websocket.Routes.DesktopRouter_RemoveApp(this.endpoint, this.getPrefix),\n            SetDesktopIcon: new Websocket.Routes.DesktopRouter_SetDesktopIcon(this.endpoint, this.getPrefix),\n            RemoveDesktopIcon: new Websocket.Routes.DesktopRouter_RemoveDesktopIcon(this.endpoint, this.getPrefix),\n        };\n        for (let key in this.events) {\n            this.events[key].init();\n        }\n    }\n    async RegisterOpenApp(body, options = {}) {\n        const info = {\n            channel: `${this.getPrefix()}/desktop/RegisterOpenApp`,\n            body: body,\n            ...options,\n        };\n        return await this.endpoint.sendMessageAndWait(info);\n    }\n    async RemoveApp(body, options = {}) {\n        const info = {\n            channel: `${this.getPrefix()}/desktop/RemoveApp`,\n            body: body,\n            ...options,\n        };\n        return await this.endpoint.sendMessageAndWait(info);\n    }\n    async SetDesktopIcon(body, options = {}) {\n        const info = {\n            channel: `${this.getPrefix()}/desktop/SetDesktopIcon`,\n            body: body,\n            ...options,\n        };\n        return await this.endpoint.sendMessageAndWait(info);\n    }\n    async RemoveDesktopIcon(body, options = {}) {\n        const info = {\n            channel: `${this.getPrefix()}/desktop/RemoveDesktopIcon`,\n            body: body,\n            ...options,\n        };\n        return await this.endpoint.sendMessageAndWait(info);\n    }\n}\nWebsocket.Routes.DesktopRouter.Namespace=`Core.Websocket.Routes`;\r\n_.Websocket.Routes.DesktopRouter=Websocket.Routes.DesktopRouter;\r\n","dependances":[{"fullName":"AventusSharp.WebSocket.Route","isStrong":true},{"fullName":"Core.Websocket.Routes.DesktopRouter_RegisterOpenApp","isStrong":false},{"fullName":"Core.Websocket.Routes.DesktopRouter_RemoveApp","isStrong":false},{"fullName":"Core.Websocket.Routes.DesktopRouter_SetDesktopIcon","isStrong":false},{"fullName":"Core.Websocket.Routes.DesktopRouter_RemoveDesktopIcon","isStrong":false},{"fullName":"AventusSharp.WebSocket.EndPoint","isStrong":false},{"fullName":"Core.Websocket.MainEndPoint","isStrong":false},{"fullName":"Core.Data.ApplicationOpenInfo","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"AventusSharp.WebSocket.WsRouteSendOptions","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.ExtractResponse","isStrong":false},{"fullName":"AventusSharp.WebSocket.SocketSendMessageOptions","isStrong":false},{"fullName":"Core.Data.DesktopAppIcon","isStrong":false}],"fullName":"Core.Websocket.Routes.DesktopRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.BottomBar = class BottomBar extends Aventus.WebComponent {\n    get 'permissions'() {\n\t\t\t\t\t\treturn this.__watch[\"permissions\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'permissions'(val) {\n\t\t\t\t\t\tthis.__watch[\"permissions\"] = val;\n\t\t\t\t\t}\r    get desktop() {\n        if (this.parentNode instanceof ShadowRoot) {\n            if (this.parentNode.host instanceof System.Desktop) {\n                return this.parentNode.host;\n            }\n        }\n        throw \"impossible\";\n    }\n    is_desktop_active = false;\n    timeoutOverHome = 0;\n    emptyIcon;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"permissions\");\r    super.__registerWatchesActions();\n}\n    static __style = `:host{align-items:center;background-color:var(--primary-color-opacity);border-radius:var(--border-radius);bottom:10px;box-shadow:var(--elevation-3);color:var(--text-color);display:flex;font-size:var(--font-size);height:calc(var(--desktop-bottom-bar, 50px) + var(--safe-area-bottom));left:100px;outline:none;padding:0 10px;padding-bottom:var(--safe-area-bottom);position:absolute;transition:opacity var(--bezier-curve) .5s,visibility var(--bezier-curve) .5s,transform 1s var(--bezier-curve);width:calc(100% - 200px);z-index:100}:host .section{align-items:center;display:flex;height:100%}:host .section .icon{--img-stroke-color: transparent;--img-fill-color: var(--text-color);border-radius:var(--border-radius-sm);cursor:pointer;margin:0 3px;max-height:var(--desktop-bottom-bar-element);max-width:var(--desktop-bottom-bar-element);padding:7px;transition:background-color .2s var(--bezier-curve)}:host .section rk-app-icon{margin:0 5px}:host .separator{background-color:var(--text-color);display:inline-block;height:50%;margin:0 13px;width:1px}:host .applications{flex-grow:1;gap:10px;position:relative}:host .applications .empty-icon{background-color:var(--darker-active);border-radius:var(--border-radius-sm);height:var(--desktop-bottom-bar-element);width:var(--desktop-bottom-bar-element)}:host .applications>*{height:var(--desktop-bottom-bar-element);width:var(--desktop-bottom-bar-element)}:host .nb-notifications{align-items:center;background-color:var(--text-color);border-radius:var(--border-radius-round);color:var(--primary-color-opacity);display:flex;font-size:14px;font-weight:bold;height:25px;justify-content:center;letter-spacing:-1px;padding-right:1px;width:25px}:host .safe-hider{bottom:0;height:var(--safe-area-bottom);left:0;position:absolute;width:100%}@media screen and (min-width: 1225px){:host .section .icon:hover{background-color:var(--lighter-active)}}@media screen and (max-width: 1224px){:host{border-radius:0;border-bottom-left-radius:0;border-bottom-right-radius:0;bottom:0px;left:0px;width:100%}}@media screen and (max-width: 768px){:host .basic-action>*{display:none}:host .basic-action rk-home-btn{display:inline-block}:host .addons>*{display:none}:host .separator{display:none}}`;\n    constructor() { super(); \rthis.setAppPositionTemp=this.setAppPositionTemp.bind(this)\rthis.clearAppPositionTemp=this.clearAppPositionTemp.bind(this)\rthis.setAppPosition=this.setAppPosition.bind(this)\rthis.removeAppPosition=this.removeAppPosition.bind(this) }\n    __getStatic() {\n        return BottomBar;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(BottomBar.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"section basic-action\">\r    <rk-home-btn></rk-home-btn>\r    <rk-img mode=\"contains\" src=\"/img/icons/application-panel.svg\" class=\"touch icon\" _id=\"bottombar_0\"></rk-img>\r    <template _id=\"bottombar_1\"></template>\r</div><div class=\"separator\"></div><div class=\"section applications\" _id=\"bottombar_3\"></div><div class=\"separator\"></div><div class=\"section addons\">\r    <rk-add-on-time></rk-add-on-time>\r</div><div class=\"safe-hider\" _id=\"bottombar_4\"></div>` }\n    });\n}\n    __createStates() { super.__createStates(); let that = this;  this.__createStatesList(State.MoveApplication.state, State.DesktopStateManager);this.__addActiveState(State.MoveApplication.state, State.DesktopStateManager, (state, slugs) => { that.__inactiveDefaultState(State.DesktopStateManager); that.onMoveApplication(state, slugs);})\rthis.__addInactiveState(State.MoveApplication.state, State.DesktopStateManager, (state, nextState, slugs) => { that.onStopMovingApplication(state, nextState, slugs);that.__activeDefaultState(nextState, State.DesktopStateManager);})\r }\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"applicationsContainer\",\n      \"ids\": [\n        \"bottombar_3\"\n      ]\n    },\n    {\n      \"name\": \"safeHider\",\n      \"ids\": [\n        \"bottombar_4\"\n      ]\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"bottombar_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showAppList(e, pressInstance); }\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r        <rk-img mode=\"contains\" src=\"/img/icons/layout-fluid.svg\" class=\"touch icon\" _id=\"bottombar_2\"></rk-img>\r    `);\rtempl0.setActions({\n  \"pressEvents\": [\n    {\n      \"id\": \"bottombar_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showDesktops(e, pressInstance); }\n    }\n  ]\n});\rthis.__getStatic().__template.addIf({\n                    anchorId: 'bottombar_1',\n                    parts: [{once: true,\n                    condition: (c) => c.comp.__caf7651d66630d65b331758f2e732cb4method0(),\n                    template: templ0\n                }]\n            });\r }\n    getClassName() {\n        return \"BottomBar\";\n    }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"permissions\"] = {\r                CanHaveVirtualDesktop: false\r            };\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('desktop');\rthis.__correctGetter('permissions');\r }\n    async getPermissions() {\n        this.permissions.CanHaveVirtualDesktop = await can(new Permissions.DesktopPermissionQuery(Permissions.DesktopPermission.CanHaveVirtualDesktop));\n    }\n    addSwipe() {\n        let enable = true;\n        let startY = 0;\n        new Aventus.PressManager({\n            element: this.safeHider,\n            offsetDrag: 0,\n            onDrag: () => { }\n        });\n        new Aventus.DragAndDrop({\n            element: this,\n            applyDrag: false,\n            offsetDrag: 50,\n            isDragEnable: () => enable,\n            onStart: (e) => {\n                startY = e.pageY;\n            },\n            onMove: (e) => {\n                let positionY = startY - e.pageY;\n                if (positionY > 50) {\n                    enable = false;\n                    this.showAppList();\n                }\n            },\n            onStop: () => {\n                enable = true;\n            }\n        });\n    }\n    showAppList() {\n        System.Os.instance.show_application_list = true;\n    }\n    showDesktops() {\n        System.Os.instance.desktop_list = true;\n    }\n    addFocus() {\n        this.setAttribute(\"tabindex\", \"-1\");\n        this.addEventListener(\"focus\", (e) => {\n            e.stopPropagation();\n            this.setDesktopActive();\n        });\n    }\n    setAppPositionTemp(shadow, x, y, state) {\n        let caseEl = this.shadowRoot.elementFromPoint(x, y);\n        if (caseEl && this.shadowRoot.contains(caseEl)) {\n            shadow.style.width = \"\";\n            shadow.style.height = \"\";\n            if (caseEl instanceof System.HomeBtn) {\n                if (!this.timeoutOverHome && !caseEl.active) {\n                    this.timeoutOverHome = setTimeout(() => {\n                        let caseEl = this.shadowRoot.elementFromPoint(state.lastX, state.lastY);\n                        if (caseEl instanceof System.HomeBtn) {\n                            caseEl.active = true;\n                        }\n                    }, 2000);\n                }\n                return false;\n            }\n            if (this.timeoutOverHome) {\n                clearTimeout(this.timeoutOverHome);\n                this.timeoutOverHome = 0;\n            }\n            let rect = this.applicationsContainer.getBoundingClientRect();\n            if (x >= rect.x && x <= rect.x + rect.width) {\n                if (!this.emptyIcon) {\n                    this.emptyIcon = document.createElement(\"DIV\");\n                    this.emptyIcon.classList.add(\"empty-icon\");\n                }\n                let children = Array.from(this.applicationsContainer.children);\n                let found = false;\n                for (let i = 0; i < children.length; i++) {\n                    let child = children[i];\n                    if (child instanceof System.AppIcon) {\n                        if (x < rect.x + child.offsetLeft + (child.offsetWidth / 2)) {\n                            this.applicationsContainer.insertBefore(this.emptyIcon, child);\n                            found = true;\n                            break;\n                        }\n                    }\n                }\n                if (!found) {\n                    this.applicationsContainer.appendChild(this.emptyIcon);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    clearAppPositionTemp(state) {\n        if (this.timeoutOverHome) {\n            let caseEl = this.shadowRoot.elementFromPoint(state.lastX, state.lastY);\n            if (!(caseEl instanceof System.HomeBtn)) {\n                clearTimeout(this.timeoutOverHome);\n                this.timeoutOverHome = 0;\n            }\n        }\n        if (this.emptyIcon?.parentNode) {\n            this.emptyIcon.remove();\n        }\n    }\n    async setAppPosition(icon, x, y) {\n        if (this.emptyIcon?.parentNode) {\n            let children = this.emptyIcon.parentNode?.children ?? [];\n            let no = Array.from(children).indexOf(this.emptyIcon);\n            if (no == -1)\n                return;\n            this.applicationsContainer.insertBefore(icon, this.emptyIcon);\n            this.emptyIcon.remove();\n            let desktopIcon = new Data.DesktopAppIcon();\n            desktopIcon.DesktopId = this.desktop.desktop_id;\n            desktopIcon.Position = no;\n            desktopIcon.IconTag = icon.tag;\n            desktopIcon.Location = Data.DesktopLocation.BottomBar;\n            desktopIcon.Id = icon.iconId;\n            let result = await new Websocket.Routes.DesktopRouter().SetDesktopIcon({\n                icon: desktopIcon\n            });\n            if (result.success && result.result) {\n                icon.iconId = result.result.Id;\n                icon.position = result.result.Position;\n                icon.can_remove = true;\n            }\n            no++;\n            for (; no < children.length; no++) {\n                let child = children[no];\n                if (child instanceof System.AppIcon) {\n                    let desktopIcon = new Data.DesktopAppIcon();\n                    desktopIcon.DesktopId = this.desktop.desktop_id;\n                    desktopIcon.Position = no;\n                    desktopIcon.IconTag = child.tag;\n                    desktopIcon.Location = Data.DesktopLocation.BottomBar;\n                    desktopIcon.Id = child.iconId;\n                    let result = await new Websocket.Routes.DesktopRouter().SetDesktopIcon({\n                        icon: desktopIcon\n                    });\n                    if (result.success) {\n                        child.position = no;\n                    }\n                }\n            }\n        }\n    }\n    async removeAppPosition(icon, x, y) {\n        let caseEl = this.shadowRoot.elementFromPoint(x, y);\n        if (caseEl && this.shadowRoot.contains(caseEl)) {\n            let children = icon.parentNode?.children ?? [];\n            let no = Array.from(children).indexOf(icon);\n            let desktopIcon = new Data.DesktopAppIcon();\n            desktopIcon.Id = icon.iconId;\n            let result = await new Websocket.Routes.DesktopRouter().RemoveDesktopIcon({\n                icon: desktopIcon\n            });\n            if (result.success) {\n                icon.remove();\n                for (; no < children.length; no++) {\n                    let child = children[no];\n                    if (child instanceof System.AppIcon) {\n                        let desktopIcon = new Data.DesktopAppIcon();\n                        desktopIcon.DesktopId = this.desktop.desktop_id;\n                        desktopIcon.Position = no;\n                        desktopIcon.IconTag = child.tag;\n                        desktopIcon.Location = Data.DesktopLocation.BottomBar;\n                        desktopIcon.Id = child.iconId;\n                        let result = await new Websocket.Routes.DesktopRouter().SetDesktopIcon({\n                            icon: desktopIcon\n                        });\n                        if (result.success) {\n                            child.position = no;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    onMoveApplication(state, slugs) {\n        if (!this.desktop?.is_active) {\n            return;\n        }\n        if (state instanceof State.MoveApplication) {\n            state.registerProvider(this);\n        }\n    }\n    onStopMovingApplication(state, nextState, slugs) {\n        if (!this.desktop?.is_active) {\n            return;\n        }\n    }\n    setApplication(el) {\n        this.applicationsContainer.appendChild(el);\n    }\n    setDesktopActive() {\n        System.DesktopActivableLogic.set(this);\n    }\n    removeDesktopActive() {\n        System.DesktopActivableLogic.remove(this);\n    }\n    postCreation() {\n        this.getPermissions();\n        this.addSwipe();\n        this.addFocus();\n    }\n    __caf7651d66630d65b331758f2e732cb4method0() {\n        return this.permissions.CanHaveVirtualDesktop;\n    }\n}\nSystem.BottomBar.Namespace=`Core.System`;\nSystem.BottomBar.Tag=`rk-bottom-bar`;\n_.System.BottomBar=System.BottomBar;\nif(!window.customElements.get('rk-bottom-bar')){window.customElements.define('rk-bottom-bar', System.BottomBar);Aventus.WebComponentInstance.registerDefinition(System.BottomBar);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.State.MoveApplicationProvider","isStrong":true},{"fullName":"Core.System.IDesktopActivable","isStrong":true},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.System.Desktop","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Permissions.DesktopPermissionQuery","isStrong":false},{"fullName":"Core.Permissions.DesktopPermission","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false},{"fullName":"Core.State.MoveApplication","isStrong":false},{"fullName":"Core.System.HomeBtn","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Data.DesktopAppIcon","isStrong":false},{"fullName":"Core.Data.DesktopLocation","isStrong":false},{"fullName":"Core.Websocket.Routes.DesktopRouter","isStrong":false},{"fullName":"StateActive","isStrong":false},{"fullName":"Core.State.DesktopStateManager","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Aventus.StateSlug","isStrong":false},{"fullName":"StateInactive","isStrong":false},{"fullName":"Core.System.DesktopActivableLogic","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"HomeBtn","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"AddOnTime","isStrong":false}],"fullName":"Core.System.BottomBar","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-bottom-bar"},{"code":"Components.Resize = class Resize extends Aventus.WebComponent {\n    get 'min_width'() { return this.getNumberAttr('min_width') }\n    set 'min_width'(val) { this.setNumberAttr('min_width', val) }\rget 'min_height'() { return this.getNumberAttr('min_height') }\n    set 'min_height'(val) { this.setNumberAttr('min_height', val) }\rget 'max_width'() { return this.getNumberAttr('max_width') }\n    set 'max_width'(val) { this.setNumberAttr('max_width', val) }\rget 'max_height'() { return this.getNumberAttr('max_height') }\n    set 'max_height'(val) { this.setNumberAttr('max_height', val) }\r    _target;\n    get target() {\n        if (this._target)\n            return this._target;\n        throw 'no target defined';\n    }\n    onPointerDown = new Aventus.Callback();\n    onStart = new Aventus.Callback();\n    onMove = new Aventus.Callback();\n    onStop = new Aventus.Callback();\n    onPointerUp = new Aventus.Callback();\n    static __style = `:host{--_resize-z-index:var(--resize-z-index, 1)}:host{--width: 10px;--space: 10px}:host div{position:absolute;z-index:var(--_resize-z-index)}:host .top{height:var(--width);left:var(--space);right:var(--space);top:calc(var(--width)/-2);cursor:ns-resize}:host .top-left{top:calc(var(--width)/-2);left:calc(var(--width)/-2);width:calc(var(--width)/2 + var(--space));height:calc(var(--width)/2 + var(--space));cursor:se-resize}:host .left{bottom:var(--space);top:var(--space);width:var(--width);left:calc(var(--width)/-2);cursor:ew-resize}:host .bottom-left{bottom:calc(var(--width)/-2);left:calc(var(--width)/-2);width:calc(var(--width)/2 + var(--space));height:calc(var(--width)/2 + var(--space));cursor:ne-resize}:host .bottom{height:var(--width);left:var(--space);right:var(--space);bottom:calc(var(--width)/-2);cursor:ns-resize}:host .bottom-right{bottom:calc(var(--width)/-2);right:calc(var(--width)/-2);width:calc(var(--width)/2 + var(--space));height:calc(var(--width)/2 + var(--space));cursor:se-resize}:host .right{bottom:var(--space);top:var(--space);width:var(--width);right:calc(var(--width)/-2);cursor:ew-resize}:host .top-right{top:calc(var(--width)/-2);right:calc(var(--width)/-2);width:calc(var(--width)/2 + var(--space));height:calc(var(--width)/2 + var(--space));cursor:ne-resize}`;\n    __getStatic() {\n        return Resize;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Resize.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"top\" _id=\"resize_0\"></div><div class=\"top-left\" _id=\"resize_1\"></div><div class=\"left\" _id=\"resize_2\"></div><div class=\"bottom-left\" _id=\"resize_3\"></div><div class=\"bottom\" _id=\"resize_4\"></div><div class=\"bottom-right\" _id=\"resize_5\"></div><div class=\"right\" _id=\"resize_6\"></div><div class=\"top-right\" _id=\"resize_7\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"top\",\n      \"ids\": [\n        \"resize_0\"\n      ]\n    },\n    {\n      \"name\": \"top_left\",\n      \"ids\": [\n        \"resize_1\"\n      ]\n    },\n    {\n      \"name\": \"left\",\n      \"ids\": [\n        \"resize_2\"\n      ]\n    },\n    {\n      \"name\": \"bottom_left\",\n      \"ids\": [\n        \"resize_3\"\n      ]\n    },\n    {\n      \"name\": \"bottom\",\n      \"ids\": [\n        \"resize_4\"\n      ]\n    },\n    {\n      \"name\": \"bottom_right\",\n      \"ids\": [\n        \"resize_5\"\n      ]\n    },\n    {\n      \"name\": \"right\",\n      \"ids\": [\n        \"resize_6\"\n      ]\n    },\n    {\n      \"name\": \"top_right\",\n      \"ids\": [\n        \"resize_7\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Resize\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('min_width')){ this['min_width'] = undefined; }\rif(!this.hasAttribute('min_height')){ this['min_height'] = undefined; }\rif(!this.hasAttribute('max_width')){ this['max_width'] = undefined; }\rif(!this.hasAttribute('max_height')){ this['max_height'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('target');\rthis.__upgradeProperty('min_width');\rthis.__upgradeProperty('min_height');\rthis.__upgradeProperty('max_width');\rthis.__upgradeProperty('max_height');\r }\n    styleBefore(addStyle) {\n    }\n    applyWidth(value) {\n        this.target.style.width = value + \"px\";\n    }\n    applyHeight(value) {\n        this.target.style.height = value + \"px\";\n    }\n    applyTop(value) {\n        this.target.style.top = value + \"px\";\n    }\n    applyLeft(value) {\n        this.target.style.left = value + \"px\";\n    }\n    transformWidth(w) {\n        let outbound = false;\n        if (this.max_width && this.max_width > 0) {\n            if (w > this.max_width) {\n                w = this.max_width;\n                outbound = true;\n            }\n        }\n        let min_width = this.min_width ?? 0;\n        if (w < min_width) {\n            w = min_width;\n            outbound = true;\n        }\n        return {\n            w,\n            outbound\n        };\n    }\n    transformHeight(h) {\n        let outbound = false;\n        if (this.max_height && this.max_height > 0) {\n            if (h > this.max_height) {\n                h = this.max_height;\n                outbound = true;\n            }\n        }\n        let min_height = this.min_height ?? 0;\n        if (h < min_height) {\n            h = min_height;\n            outbound = true;\n        }\n        return {\n            h,\n            outbound\n        };\n    }\n    resizeRight() {\n        if (!this.right) {\n            return;\n        }\n        let width;\n        let startX;\n        let direction = Components.ResizeDirection.Right;\n        new Aventus.DragAndDrop({\n            element: this.right,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                width = this.target.offsetWidth;\n                startX = e.pageX;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transform = this.transformWidth(width + (e.pageX - startX));\n                if (!transform.outbound) {\n                    this.applyWidth(transform.w);\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    resizeLeft() {\n        if (!this.left) {\n            return;\n        }\n        let width;\n        let left;\n        let startX;\n        let direction = Components.ResizeDirection.Left;\n        new Aventus.DragAndDrop({\n            element: this.left,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                width = this.target.offsetWidth;\n                left = this.target.offsetLeft;\n                startX = e.pageX;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transform = this.transformWidth(width - (e.pageX - startX));\n                if (!transform.outbound) {\n                    this.applyWidth(transform.w);\n                    this.applyLeft(left + (e.pageX - startX));\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    resizeBottom() {\n        if (!this.bottom) {\n            return;\n        }\n        let height;\n        let startY;\n        let direction = Components.ResizeDirection.Bottom;\n        new Aventus.DragAndDrop({\n            element: this.bottom,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                height = this.target.offsetHeight;\n                startY = e.pageY;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transform = this.transformHeight(height + (e.pageY - startY));\n                if (!transform.outbound) {\n                    this.applyHeight(transform.h);\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    resizeBottomLeft() {\n        if (!this.bottom_left) {\n            return;\n        }\n        let height;\n        let width;\n        let left;\n        let startX;\n        let startY;\n        let direction = Components.ResizeDirection.BottomLeft;\n        new Aventus.DragAndDrop({\n            element: this.bottom_left,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                height = this.target.offsetHeight;\n                startY = e.pageY;\n                width = this.target.offsetWidth;\n                left = this.target.offsetLeft;\n                startX = e.pageX;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transformH = this.transformHeight(height + (e.pageY - startY));\n                if (!transformH.outbound) {\n                    this.applyHeight(transformH.h);\n                }\n                let transformW = this.transformWidth(width - (e.pageX - startX));\n                if (!transformW.outbound) {\n                    this.applyWidth(transformW.w);\n                    this.applyLeft(left + (e.pageX - startX));\n                }\n                if (!transformH.outbound || !transformW.outbound) {\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    resizeBottomRight() {\n        if (!this.bottom_right) {\n            return;\n        }\n        let height;\n        let width;\n        let startX;\n        let startY;\n        let direction = Components.ResizeDirection.BottomRight;\n        new Aventus.DragAndDrop({\n            element: this.bottom_right,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                height = this.target.offsetHeight;\n                startY = e.pageY;\n                width = this.target.offsetWidth;\n                startX = e.pageX;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transformH = this.transformHeight(height + (e.pageY - startY));\n                if (!transformH.outbound) {\n                    this.applyHeight(transformH.h);\n                }\n                let transformW = this.transformWidth(width + (e.pageX - startX));\n                if (!transformW.outbound) {\n                    this.applyWidth(transformW.w);\n                }\n                if (!transformW.outbound || !transformH.outbound) {\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    resizeTop() {\n        if (!this.top) {\n            return;\n        }\n        let height;\n        let top;\n        let startY;\n        let direction = Components.ResizeDirection.Top;\n        new Aventus.DragAndDrop({\n            element: this.top,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                height = this.target.offsetHeight;\n                top = this.target.offsetTop;\n                startY = e.pageY;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transformH = this.transformHeight(height - (e.pageY - startY));\n                if (!transformH.outbound) {\n                    this.applyHeight(transformH.h);\n                    this.applyTop(top + (e.pageY - startY));\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    resizeTopLeft() {\n        if (!this.top_left) {\n            return;\n        }\n        let height;\n        let top;\n        let width;\n        let left;\n        let startX;\n        let startY;\n        let direction = Components.ResizeDirection.TopLeft;\n        new Aventus.DragAndDrop({\n            element: this.top_left,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                height = this.target.offsetHeight;\n                top = this.target.offsetTop;\n                startY = e.pageY;\n                width = this.target.offsetWidth;\n                left = this.target.offsetLeft;\n                startX = e.pageX;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transformH = this.transformHeight(height - (e.pageY - startY));\n                if (!transformH.outbound) {\n                    this.applyHeight(transformH.h);\n                    this.applyTop(top + (e.pageY - startY));\n                }\n                let transformW = this.transformWidth(width - (e.pageX - startX));\n                if (!transformW.outbound) {\n                    this.applyWidth(transformW.w);\n                    this.applyLeft(left + (e.pageX - startX));\n                }\n                if (!transformH.outbound || !transformW.outbound) {\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    resizeTopRight() {\n        if (!this.top_right) {\n            return;\n        }\n        let height;\n        let top;\n        let width;\n        let startX;\n        let startY;\n        let direction = Components.ResizeDirection.TopRight;\n        new Aventus.DragAndDrop({\n            element: this.top_right,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: () => {\n                this.onPointerDown.trigger([direction]);\n            },\n            onStart: (e) => {\n                height = this.target.offsetHeight;\n                top = this.target.offsetTop;\n                startY = e.pageY;\n                width = this.target.offsetWidth;\n                startX = e.pageX;\n                this.onStart.trigger([direction]);\n            },\n            onMove: (e) => {\n                let transformH = this.transformHeight(height - (e.pageY - startY));\n                if (!transformH.outbound) {\n                    this.applyHeight(transformH.h);\n                    this.applyTop(top + (e.pageY - startY));\n                }\n                let transformW = this.transformWidth(width + (e.pageX - startX));\n                if (!transformW.outbound) {\n                    this.applyWidth(transformW.w);\n                }\n                if (!transformH.outbound || !transformW.outbound) {\n                    this.onMove.trigger([direction]);\n                }\n            },\n            onStop: () => {\n                this.onStop.trigger([direction]);\n            },\n            onPointerUp: () => {\n                this.onPointerUp.trigger([direction]);\n            }\n        });\n    }\n    init(target, config) {\n        this._target = target;\n        if (config) {\n            if (config.applyWidth)\n                this.applyWidth = config.applyWidth.bind(this);\n            if (config.applyHeight)\n                this.applyHeight = config.applyHeight.bind(this);\n            if (config.applyLeft)\n                this.applyLeft = config.applyLeft.bind(this);\n            if (config.applyTop)\n                this.applyTop = config.applyTop.bind(this);\n        }\n        this.resizeRight();\n        this.resizeLeft();\n        this.resizeBottom();\n        this.resizeTop();\n        this.resizeTopLeft();\n        this.resizeTopRight();\n        this.resizeBottomLeft();\n        this.resizeBottomRight();\n    }\n}\nComponents.Resize.Namespace=`Core.Components`;\nComponents.Resize.Tag=`rk-resize`;\n_.Components.Resize=Components.Resize;\nif(!window.customElements.get('rk-resize')){window.customElements.define('rk-resize', Components.Resize);Aventus.WebComponentInstance.registerDefinition(Components.Resize);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Core.Components.ResizeDirection","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Core.Components.ResizeConfig","isStrong":false}],"fullName":"Core.Components.Resize","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-resize"},{"code":"Components.Notification = class Notification extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"icon\", \"subject\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'position'() { return this.getStringAttr('position') }\n    set 'position'(val) { this.setStringAttr('position', val) }\rget 'color'() { return this.getStringAttr('color') }\n    set 'color'(val) { this.setStringAttr('color', val) }\rget 'delay'() { return this.getNumberAttr('delay') }\n    set 'delay'(val) { this.setNumberAttr('delay', val) }\rget 'is_active'() { return this.getBoolAttr('is_active') }\n    set 'is_active'(val) { this.setBoolAttr('is_active', val) }\r    get 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\rget 'subject'() { return this.getStringProp('subject') }\n    set 'subject'(val) { this.setStringAttr('subject', val) }\r    showAsked = false;\n    onHide = () => { };\n    timeout = 0;\n    static __style = `:host{--internal-notification-box-shadow: var(--notification-box-shadow);--internal-notification-logo-fill-color: var(--notification-logo-fill-color, var(--text-color));--internal-notification-logo-stroke-color: var(--notification-logo-stroke-color, transparent);--local-notification-transition-delay: 0.4s;--_notification-margin-bottom: var(--notification-margin-bottom, 20px);--_notification-margin-top: var(--notification-margin-top, 20px);--_notification-margin-right: var(--notification-margin-right, 10px);--_notification-margin-left: var(--notification-margin-left, 10px)}:host{background-color:var(--secondary-color);border-radius:var(--border-radius);box-shadow:var(--internal-notification-box-shadow);color:var(--text-color);display:flex;max-width:calc(100% - 20px);min-height:40px;padding:10px 20px;position:absolute;z-index:600;align-items:center}:host .logo{--img-fill-color: var(--internal-notification-logo-fill-color);--img-stroke-color: var(--internal-notification-logo-stroke-color);flex-shrink:0;order:1;width:30px;font-size:24px;margin-right:5px}:host .logo[src=\"\"]{display:none}:host .content{cursor:pointer;display:flex;flex-direction:column;order:2}:host .content .title{font-size:20px;font-weight:bold;margin-bottom:5px}:host .content .title:empty{display:none}:host .content .text{flex-grow:1;overflow:hidden}:host .content .text:empty{display:none}:host .close{cursor:pointer;flex-grow:0;height:30px;position:absolute;width:30px}:host(:empty) .content .title{margin-bottom:0}:host(:empty) .content .text{display:none}:host([position=\"bottom left\"]){bottom:var(--_notification-margin-bottom);left:0px;opacity:0;transform:translateX(-100%);transition:left var(--local-notification-transition-delay) var(--bezier-curve),bottom var(--local-notification-transition-delay) var(--bezier-curve),transform var(--local-notification-transition-delay) var(--bezier-curve),opacity var(--local-notification-transition-delay) var(--bezier-curve)}:host([position=\"bottom left\"]) .logo{order:2;margin-right:0;margin-left:5px}:host([position=\"bottom left\"]) .content{order:1}:host([position=\"bottom left\"]) .close{left:5px;top:5px}:host([position=\"bottom left\"][is_active]){left:var(--_notification-margin-left);opacity:1;transform:translateX(0)}:host([position=\"top left\"]){top:var(--_notification-margin-top);left:0px;opacity:0;transform:translateX(-100%);transition:left var(--local-notification-transition-delay) var(--bezier-curve),top var(--local-notification-transition-delay) var(--bezier-curve),transform var(--local-notification-transition-delay) var(--bezier-curve),opacity var(--local-notification-transition-delay) var(--bezier-curve)}:host([position=\"top left\"]) .logo{order:2;margin-right:0;margin-left:5px}:host([position=\"top left\"]) .content{order:1}:host([position=\"top left\"]) .close{left:5px;top:5px}:host([position=\"top left\"][is_active]){left:var(--_notification-margin-left);opacity:1;transform:translateX(0)}:host([position=\"bottom right\"]){bottom:var(--_notification-margin-bottom);opacity:0;right:0px;transform:translateX(100%);transition:right var(--local-notification-transition-delay) var(--bezier-curve),bottom var(--local-notification-transition-delay) var(--bezier-curve),transform var(--local-notification-transition-delay) var(--bezier-curve),opacity var(--local-notification-transition-delay) var(--bezier-curve)}:host([position=\"bottom right\"]) .close{right:5px;top:5px}:host([position=\"bottom right\"][is_active]){opacity:1;right:var(--_notification-margin-right);transform:translateX(0)}:host([position=\"top right\"]){opacity:0;right:0px;top:var(--_notification-margin-top);transform:translateX(100%);transition:right var(--local-notification-transition-delay) var(--bezier-curve),top var(--local-notification-transition-delay) var(--bezier-curve),transform var(--local-notification-transition-delay) var(--bezier-curve),opacity var(--local-notification-transition-delay) var(--bezier-curve)}:host([position=\"top right\"]) .close{right:5px;top:5px}:host([position=\"top right\"][is_active]){opacity:1;right:var(--_notification-margin-right);transform:translateX(0)}:host([position=top]){left:10%;opacity:0;transform:translateY(-100%);transition:top var(--local-notification-transition-delay) var(--bezier-curve),transform var(--local-notification-transition-delay) var(--bezier-curve),opacity var(--local-notification-transition-delay) var(--bezier-curve);width:80%}:host([position=top]) .close{right:5px;top:5px}:host([position=top]:not([is_active])){top:0px !important}:host([position=top][is_active]){opacity:1;top:var(--_notification-margin-top);transform:translateY(0)}:host([position=bottom]){left:10%;transform:translateY(100%);transition:bottom var(--local-notification-transition-delay) var(--bezier-curve),transform var(--local-notification-transition-delay) var(--bezier-curve),opacity var(--local-notification-transition-delay) var(--bezier-curve);width:80%}:host([position=bottom]) .close{right:5px;top:5px}:host([position=bottom]:not([is_active])){bottom:0px !important}:host([position=bottom][is_active]){bottom:var(--_notification-margin-bottom);opacity:1;transform:translateY(0)}:host([color=primary]){background-color:var(--primary);color:var(--text-color-primary)}:host([color=secondary]){background-color:var(--secondary);color:var(--text-color-secondary)}:host([color=green]){background-color:var(--green);color:var(--text-color-green)}:host([color=success]){background-color:var(--success);color:var(--text-color-success)}:host([color=red]){background-color:var(--red);color:var(--text-color-red)}:host([color=error]){background-color:var(--error);color:var(--text-color-error)}:host([color=orange]){background-color:var(--orange);color:var(--text-color-orange)}:host([color=warning]){background-color:var(--warning);color:var(--text-color-warning)}:host([color=blue]){background-color:var(--blue);color:var(--text-color-blue)}:host([color=information]){background-color:var(--information);color:var(--text-color-information)}`;\n    __getStatic() {\n        return Notification;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Notification.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<rk-img class=\"logo\" _id=\"notification_0\"></rk-img><div class=\"content\" _id=\"notification_1\">\r    <div class=\"title\" _id=\"notification_2\"></div>\r    <div class=\"text\"><slot></slot></div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"notification_0°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__539853f1187f37c9fe641c673a21b24cmethod0())}`,\n      \"once\": true\n    },\n    \"notification_2°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__539853f1187f37c9fe641c673a21b24cmethod1())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"notification_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.clicked(e, pressInstance); }\n    },\n    {\n      \"id\": \"notification_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.clicked(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Notification\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('position')){ this['position'] = 'top right'; }\rif(!this.hasAttribute('color')){ this['color'] = undefined; }\rif(!this.hasAttribute('delay')){ this['delay'] = 2000; }\rif(!this.hasAttribute('is_active')) { this.attributeChangedCallback('is_active', false, false); }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\rif(!this.hasAttribute('subject')){ this['subject'] = \"\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('position');\rthis.__upgradeProperty('color');\rthis.__upgradeProperty('delay');\rthis.__upgradeProperty('is_active');\rthis.__upgradeProperty('icon');\rthis.__upgradeProperty('subject');\r }\n    __listBoolProps() { return [\"is_active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    show(onHide) {\n        this.onHide = onHide;\n        if (this.isReady) {\n            this.is_active = true;\n            this.startDelay();\n        }\n        else {\n            this.showAsked = true;\n        }\n    }\n    startDelay() {\n        if (this.delay > 0) {\n            this.timeout = setTimeout(() => {\n                this.close();\n            }, this.delay);\n        }\n    }\n    async clicked() {\n        if (this.onHide) {\n            this.is_active = false;\n            this.onHide(true);\n            await Aventus.sleep(420);\n            this.remove();\n        }\n    }\n    async close() {\n        if (this.onHide) {\n            this.is_active = false;\n            this.onHide(false);\n            await Aventus.sleep(420);\n            this.remove();\n        }\n    }\n    postCreation() {\n        if (this.showAsked) {\n            this.is_active = true;\n            this.startDelay();\n        }\n    }\n    __539853f1187f37c9fe641c673a21b24cmethod0() {\n        return this.icon;\n    }\n    __539853f1187f37c9fe641c673a21b24cmethod1() {\n        return this.subject;\n    }\n    static create(options) {\n        let el = new Components.Notification();\n        if (options.position)\n            el.position = options.position;\n        if (options.color)\n            el.color = options.color;\n        if (options.title)\n            el.subject = options.title;\n        if (options.body)\n            el.innerHTML = options.body;\n        if (options.delay)\n            el.delay = options.delay;\n        if (options.icon)\n            el.icon = options.icon;\n        return el;\n    }\n}\nComponents.Notification.Namespace=`Core.Components`;\nComponents.Notification.Tag=`rk-notification`;\n_.Components.Notification=Components.Notification;\nif(!window.customElements.get('rk-notification')){window.customElements.define('rk-notification', Components.Notification);Aventus.WebComponentInstance.registerDefinition(Components.Notification);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.NotificationOptions","isStrong":false},{"fullName":"Core.Components.Notification","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.NotificationPosition","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Core.ColorsType","isStrong":false},{"fullName":"Aventus.sleep","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.Notification","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-notification"},{"code":"System.AppInstallPanel = class AppInstallPanel extends System.Panel {\n    onClose = new Aventus.Callback();\n    static __style = `:host{align-items:center;bottom:70px;display:flex;flex-direction:column;justify-content:center;left:50%;padding:20px 45px;position:absolute;transform:translateX(-50%);z-index:999999}:host label{display:block;font-size:var(--font-size-sm);margin-bottom:15px}:host .cross{cursor:pointer;position:absolute;right:5px;top:5px}:host .cross mi-icon{font-size:18px}`;\n    __getStatic() {\n        return AppInstallPanel;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(AppInstallPanel.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<label>Téléchargement de l'application</label><rk-button _id=\"appinstallpanel_0\">Téléverser</rk-button><div class=\"cross\" _id=\"appinstallpanel_1\">\r    <mi-icon icon=\"close\"></mi-icon>\r</div><input style=\"display:none\" type=\"file\" accept=\"zip,application/octet-stream,application/zip,application/x-zip,application/x-zip-compressed\" _id=\"appinstallpanel_2\" />` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"inputFileEl\",\n      \"ids\": [\n        \"appinstallpanel_2\"\n      ]\n    }\n  ],\n  \"events\": [\n    {\n      \"eventName\": \"change\",\n      \"id\": \"appinstallpanel_2\",\n      \"fct\": (e, c) => c.comp.updateFile(e)\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"appinstallpanel_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.clickFile(e, pressInstance); }\n    },\n    {\n      \"id\": \"appinstallpanel_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.close(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"AppInstallPanel\";\n    }\n    async updateFile() {\n        if (this.inputFileEl.files && this.inputFileEl.files.length > 0) {\n            const result = await new Routes.ApplicationRouter().InstallApp({\n                file: this.inputFileEl.files[0]\n            });\n            if (result.success) {\n                let notif = Components.Notification.create({\n                    color: \"success\",\n                    title: \"Succès\",\n                    body: \"Téléchargement terminé\",\n                });\n                System.Os.instance.notify(notif);\n                this.remove();\n                this.onClose.trigger([]);\n            }\n            else {\n                let notif = Components.Notification.create({\n                    color: \"error\",\n                    title: \"Erreurs\",\n                    body: \"Il y a eu une erreur\",\n                });\n                System.Os.instance.notify(notif);\n            }\n        }\n    }\n    close() {\n        this.remove();\n        this.onClose.trigger([]);\n    }\n    clickFile() {\n        this.inputFileEl.click();\n    }\n}\nSystem.AppInstallPanel.Namespace=`Core.System`;\nSystem.AppInstallPanel.Tag=`rk-app-install-panel`;\n_.System.AppInstallPanel=System.AppInstallPanel;\nif(!window.customElements.get('rk-app-install-panel')){window.customElements.define('rk-app-install-panel', System.AppInstallPanel);Aventus.WebComponentInstance.registerDefinition(System.AppInstallPanel);}\n","dependances":[{"fullName":"Core.System.Panel","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Core.Routes.ApplicationRouter","isStrong":false},{"fullName":"Core.Components.Notification","isStrong":false},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"Button","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.System.AppInstallPanel","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-app-install-panel"},{"code":"Components.NotificationManager = class NotificationManager extends Aventus.WebComponent {\n    get 'gap'() { return this.getNumberAttr('gap') }\n    set 'gap'(val) { this.setNumberAttr('gap', val) }\r    activeNotifications = {\n        top: [],\n        'top left': [],\n        'bottom left': [],\n        bottom: [],\n        'bottom right': [],\n        'top right': [],\n    };\n    waitingNotifications = {\n        top: [],\n        'top left': [],\n        'bottom left': [],\n        bottom: [],\n        'bottom right': [],\n        'top right': [],\n    };\n    get containerHeight() {\n        return this.offsetHeight;\n    }\n    static __style = `:host{inset:0;overflow:hidden;pointer-events:none;position:absolute}:host ::slotted(*){pointer-events:auto}`;\n    __getStatic() {\n        return NotificationManager;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(NotificationManager.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"NotificationManager\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('gap')){ this['gap'] = 10; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('containerHeight');\rthis.__upgradeProperty('gap');\r }\n    async notify(notification) {\n        let realNotification;\n        if (notification instanceof Components.Notification) {\n            realNotification = notification;\n        }\n        else {\n            realNotification = Components.Notification.create(notification);\n        }\n        this.appendChild(realNotification);\n        if (realNotification.position == \"bottom\") {\n            return this._notifyBottom(realNotification, true);\n        }\n        else if (realNotification.position == \"bottom left\") {\n            return this._notifyBottomLeft(realNotification, true);\n        }\n        else if (realNotification.position == \"top left\") {\n            return this._notifyTopLeft(realNotification, true);\n        }\n        else if (realNotification.position == \"bottom right\") {\n            return this._notifyBottomRight(realNotification, true);\n        }\n        else if (realNotification.position == \"top right\") {\n            return this._notifyTopRight(realNotification, true);\n        }\n        else if (realNotification.position == \"top\") {\n            return this._notifyTop(realNotification, true);\n        }\n        return false;\n    }\n    _notifyBottomRight(notification, firstTime, from = 0) {\n        return new Promise((resolve) => {\n            let height = notification.offsetHeight;\n            let position = \"bottom right\";\n            const _remove = (result) => {\n                let index = this.activeNotifications[position].indexOf(notification);\n                if (index > -1) {\n                    this.activeNotifications[position].splice(index, 1);\n                }\n                if (this.waitingNotifications[position].length > 0) {\n                    let nextNotif = this.waitingNotifications[position].splice(0, 1)[0];\n                    this._notifyBottomRight(nextNotif, false, index);\n                }\n                else {\n                    let bodyHeight = this.containerHeight;\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let bottom = bodyHeight - (notif.offsetTop + notif.offsetHeight);\n                        notif.style.bottom = bottom - height - this.gap + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeNotifications[position].length;\n            if (length == 0) {\n                this.activeNotifications[position].push(notification);\n                notification.show(_remove);\n            }\n            else {\n                let bodyHeight = this.containerHeight;\n                let totHeight = 0;\n                for (let notif of this.activeNotifications[position]) {\n                    totHeight += notif.offsetHeight + this.gap;\n                }\n                if (totHeight + height < bodyHeight / 2) {\n                    for (let i = from; i < this.activeNotifications[position].length; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let bottom = bodyHeight - (notif.offsetTop + notif.offsetHeight);\n                        notif.style.bottom = bottom + height + this.gap + 'px';\n                    }\n                    this.activeNotifications[position].push(notification);\n                    notification.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingNotifications[position].push(notification);\n                }\n            }\n        });\n    }\n    _notifyTopRight(notification, firstTime, from = 0) {\n        return new Promise((resolve) => {\n            let height = notification.offsetHeight;\n            let position = \"top right\";\n            const _remove = (result) => {\n                let index = this.activeNotifications[position].indexOf(notification);\n                if (index > -1) {\n                    this.activeNotifications[position].splice(index, 1);\n                }\n                if (this.waitingNotifications[position].length > 0) {\n                    let nextNotif = this.waitingNotifications[position].splice(0, 1)[0];\n                    this._notifyTopRight(nextNotif, false, index);\n                }\n                else {\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let top = (notif.offsetTop - height - this.gap);\n                        notif.style.top = top + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeNotifications[position].length;\n            if (length == 0) {\n                this.activeNotifications[position].push(notification);\n                notification.show(_remove);\n            }\n            else {\n                let bodyHeight = this.containerHeight;\n                let totHeight = 0;\n                for (let notif of this.activeNotifications[position]) {\n                    totHeight += notif.offsetHeight + this.gap;\n                }\n                if (totHeight + height < bodyHeight / 2) {\n                    for (let i = from; i < this.activeNotifications[position].length; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let top = (notif.offsetTop + notif.offsetHeight);\n                        notif.style.top = top + this.gap + 'px';\n                    }\n                    this.activeNotifications[position].push(notification);\n                    notification.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingNotifications[position].push(notification);\n                }\n            }\n        });\n    }\n    _notifyBottomLeft(notification, firstTime, from = 0) {\n        return new Promise((resolve) => {\n            let height = notification.offsetHeight;\n            let position = \"bottom left\";\n            const _remove = (result) => {\n                let index = this.activeNotifications[position].indexOf(notification);\n                if (index > -1) {\n                    this.activeNotifications[position].splice(index, 1);\n                }\n                if (this.waitingNotifications[position].length > 0) {\n                    let nextNotif = this.waitingNotifications[position].splice(0, 1)[0];\n                    this._notifyBottomLeft(nextNotif, false, index);\n                }\n                else {\n                    let bodyHeight = this.containerHeight;\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let bottom = bodyHeight - (notif.offsetTop + notif.offsetHeight);\n                        notif.style.bottom = bottom - height - this.gap + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeNotifications[position].length;\n            if (length == 0) {\n                this.activeNotifications[position].push(notification);\n                notification.show(_remove);\n            }\n            else {\n                let bodyHeight = this.containerHeight;\n                let totHeight = 0;\n                for (let notif of this.activeNotifications[position]) {\n                    totHeight += notif.offsetHeight + this.gap;\n                }\n                if (totHeight + height < bodyHeight / 2) {\n                    for (let i = from; i < this.activeNotifications[position].length; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let bottom = bodyHeight - (notif.offsetTop + notif.offsetHeight);\n                        notif.style.bottom = bottom + height + this.gap + 'px';\n                    }\n                    this.activeNotifications[position].push(notification);\n                    notification.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingNotifications[position].push(notification);\n                }\n            }\n        });\n    }\n    _notifyTopLeft(notification, firstTime, from = 0) {\n        return new Promise((resolve) => {\n            let height = notification.offsetHeight;\n            let position = \"top left\";\n            const _remove = (result) => {\n                let index = this.activeNotifications[position].indexOf(notification);\n                if (index > -1) {\n                    this.activeNotifications[position].splice(index, 1);\n                }\n                if (this.waitingNotifications[position].length > 0) {\n                    let nextNotif = this.waitingNotifications[position].splice(0, 1)[0];\n                    this._notifyTopRight(nextNotif, false, index);\n                }\n                else {\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let top = (notif.offsetTop - height - this.gap);\n                        notif.style.top = top + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeNotifications[position].length;\n            if (length == 0) {\n                this.activeNotifications[position].push(notification);\n                notification.show(_remove);\n            }\n            else {\n                let bodyHeight = this.containerHeight;\n                let totHeight = 0;\n                for (let notif of this.activeNotifications[position]) {\n                    totHeight += notif.offsetHeight + this.gap;\n                }\n                if (totHeight + height < bodyHeight / 2) {\n                    for (let i = from; i < this.activeNotifications[position].length; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let top = (notif.offsetTop + notif.offsetHeight);\n                        notif.style.top = top + this.gap + 'px';\n                    }\n                    this.activeNotifications[position].push(notification);\n                    notification.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingNotifications[position].push(notification);\n                }\n            }\n        });\n    }\n    _notifyTop(notification, firstTime, from = 0) {\n        return new Promise((resolve) => {\n            let height = notification.offsetHeight;\n            let position = \"top\";\n            const _remove = (result) => {\n                let index = this.activeNotifications[position].indexOf(notification);\n                if (index > -1) {\n                    this.activeNotifications[position].splice(index, 1);\n                }\n                if (this.waitingNotifications[position].length > 0) {\n                    let nextNotif = this.waitingNotifications[position].splice(0, 1)[0];\n                    this._notifyTop(nextNotif, false, index);\n                }\n                else {\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let top = notif.offsetTop;\n                        notif.style.top = top - height - this.gap + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeNotifications[position].length;\n            if (length == 0) {\n                this.activeNotifications[position].push(notification);\n                notification.show(_remove);\n            }\n            else {\n                let bodyHeight = this.containerHeight;\n                let totHeight = 0;\n                for (let notif of this.activeNotifications[position]) {\n                    totHeight += notif.offsetHeight + this.gap;\n                }\n                if (totHeight + height < bodyHeight / 3) {\n                    for (let i = from; i < this.activeNotifications[position].length; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let top = notif.offsetTop;\n                        notif.style.top = top + height + this.gap + 'px';\n                    }\n                    this.activeNotifications[position].push(notification);\n                    notification.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingNotifications[position].push(notification);\n                }\n            }\n        });\n    }\n    _notifyBottom(notification, firstTime, from = 0) {\n        return new Promise((resolve) => {\n            let height = notification.offsetHeight;\n            let position = \"bottom\";\n            const _remove = (result) => {\n                let index = this.activeNotifications[position].indexOf(notification);\n                if (index > -1) {\n                    this.activeNotifications[position].splice(index, 1);\n                }\n                if (this.waitingNotifications[position].length > 0) {\n                    let nextNotif = this.waitingNotifications[position].splice(0, 1)[0];\n                    this._notifyBottom(nextNotif, false, index);\n                }\n                else {\n                    let bodyHeight = this.containerHeight;\n                    for (let i = 0; i < index; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let bottom = bodyHeight - (notif.offsetTop + notif.offsetHeight);\n                        notif.style.bottom = bottom - height - this.gap + 'px';\n                    }\n                }\n                resolve(result);\n            };\n            let length = this.activeNotifications[position].length;\n            if (length == 0) {\n                this.activeNotifications[position].push(notification);\n                notification.show(_remove);\n            }\n            else {\n                let bodyHeight = this.containerHeight;\n                let totHeight = 0;\n                for (let notif of this.activeNotifications[position]) {\n                    totHeight += notif.offsetHeight + this.gap;\n                }\n                if (totHeight + height < bodyHeight / 3) {\n                    for (let i = from; i < this.activeNotifications[position].length; i++) {\n                        let notif = this.activeNotifications[position][i];\n                        let bottom = bodyHeight - (notif.offsetTop + notif.offsetHeight);\n                        notif.style.bottom = bottom + height + this.gap + 'px';\n                    }\n                    this.activeNotifications[position].push(notification);\n                    notification.show(_remove);\n                }\n                else if (firstTime) {\n                    this.waitingNotifications[position].push(notification);\n                }\n            }\n        });\n    }\n}\nComponents.NotificationManager.Namespace=`Core.Components`;\nComponents.NotificationManager.Tag=`rk-notification-manager`;\n_.Components.NotificationManager=Components.NotificationManager;\nif(!window.customElements.get('rk-notification-manager')){window.customElements.define('rk-notification-manager', Components.NotificationManager);Aventus.WebComponentInstance.registerDefinition(Components.NotificationManager);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.Notification","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.NotificationOptions","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Components.NotificationPosition","isStrong":false}],"fullName":"Core.Components.NotificationManager","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-notification-manager"},{"code":"State.ApplicationState=class ApplicationState extends Aventus.State {\n    /**\n     * The current namespace\n     */\n    static Namespace = \"\";\n    /**\n     * Get the unique type for the data. Define it as the namespace + class name\n     */\n    static get Fullname() { return this.Namespace + \".\" + this.name; }\n    $type;\n    __manager;\n    get application() {\n        return this.__manager.application;\n    }\n    ;\n    __canSaveState = true;\n    enableSaveState() {\n        this.__canSaveState = true;\n    }\n    disableSaveState() {\n        this.__canSaveState = false;\n    }\n    canSync() {\n        if (!this.__canSaveState || !this.__manager)\n            return false;\n        return true;\n    }\n    constructor() {\n        super();\n        this.$type = this.constructor['Fullname'];\n    }\n    setManager(manager) {\n        this.__manager = manager;\n    }\n    delaySaveState = 0;\n    saveState() {\n        if (!this.canSync())\n            return;\n        clearTimeout(this.delaySaveState);\n        this.delaySaveState = setTimeout(() => {\n            this.__manager.save();\n        }, 500);\n    }\n    async activate() {\n        return super.activate(this.__manager);\n    }\n    /**\n     * Override this tell which field must by sync\n     */\n    syncField(addField) {\n    }\n    /**\n     * Override this tell which field must by sync\n     */\n    syncFieldNoCheck(addField) {\n    }\n    runSyncField() {\n        const result = [\"$type\"];\n        const addField = (field) => {\n            result.push(field);\n        };\n        this.syncField(addField);\n        this.syncFieldNoCheck(addField);\n        return result;\n    }\n    toJSON() {\n        const fields = this.runSyncField();\n        return Aventus.Json.classToJson(this, {\n            isValidKey: (key) => {\n                return fields.includes(key);\n            }\n        });\n    }\n    copyValues(src) {\n        const fields = this.runSyncField();\n        Aventus.Converter.copyValuesClass(this, src, {\n            isValidKey: (key) => {\n                return fields.includes(key);\n            }\n        });\n    }\n}\nState.ApplicationState.Namespace=`Core.State`;\r\nState.ApplicationState.$schema={...(Aventus.State?.$schema ?? {}), \"$type\":\"string\",\"__manager\":\"Core.Lib.ApplicationStateManager\",\"application\":\"Core.System.Application\",\"__canSaveState\":\"boolean\",\"delaySaveState\":\"number\"};\r\nAventus.Converter.register(State.ApplicationState.Fullname, State.ApplicationState);\r\n_.State.ApplicationState=State.ApplicationState;\r\n","dependances":[{"fullName":"Aventus.State","isStrong":true},{"fullName":"Aventus.IState","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Lib.ApplicationStateManager","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.State.Field","isStrong":false},{"fullName":"Aventus.Json","isStrong":false},{"fullName":"Core.State.ApplicationState","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Aventus.Converter","isStrong":false},{"fullName":"Core.System.Application","isStrong":false}],"fullName":"Core.State.ApplicationState","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"State.ApplicationWatchState=class ApplicationWatchState extends State.ApplicationState {\n    __watcher;\n    get watcher() {\n        return this.__watcher;\n    }\n    constructor() {\n        super();\n        this.onWatcherChanged = this.onWatcherChanged.bind(this);\n        this.__watcher = Aventus.Watcher.get({}, this.onWatcherChanged);\n    }\n    async onWatcherChanged(action, path, value) {\n    }\n}\nState.ApplicationWatchState.Namespace=`Core.State`;\r\nState.ApplicationWatchState.$schema={...(State.ApplicationState?.$schema ?? {}), };\r\nAventus.Converter.register(State.ApplicationWatchState.Fullname, State.ApplicationWatchState);\r\n_.State.ApplicationWatchState=State.ApplicationWatchState;\r\n","dependances":[{"fullName":"Core.State.ApplicationState","isStrong":true},{"fullName":"Aventus.IState","isStrong":true},{"fullName":"Aventus.Watcher","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false}],"fullName":"Core.State.ApplicationWatchState","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"State.ApplicationEmptyState=class ApplicationEmptyState extends State.ApplicationState {\n    localName;\n    constructor(stateName) {\n        super();\n        this.localName = stateName;\n    }\n    syncFieldNoCheck(addField) {\n        addField(\"localName\");\n    }\n    /**\n     * @inheritdoc\n     */\n    get name() {\n        return this.localName;\n    }\n}\nState.ApplicationEmptyState.Namespace=`Core.State`;\r\nState.ApplicationEmptyState.$schema={...(State.ApplicationState?.$schema ?? {}), \"localName\":\"string\",\"name\":\"string\"};\r\nAventus.Converter.register(State.ApplicationEmptyState.Fullname, State.ApplicationEmptyState);\r\n","dependances":[{"fullName":"Core.State.ApplicationState","isStrong":true},{"fullName":"Aventus.IState","isStrong":true},{"fullName":"Internal","isStrong":false}],"fullName":"Core.State.ApplicationEmptyState","required":false,"type":1,"isExported":false,"convertibleName":"Fullname"},{"code":"System.ApplicationHistoryConvert=class ApplicationHistoryConvert extends Aventus.ConverterTransform {\n    manager;\n    constructor(manager) {\n        super();\n        this.manager = manager;\n    }\n    beforeTransformObject(obj) {\n        if (obj instanceof State.ApplicationState) {\n            obj.setManager(this.manager);\n            obj.disableSaveState();\n        }\n    }\n    afterTransformObject(obj) {\n        if (obj instanceof State.ApplicationState) {\n            obj.enableSaveState();\n        }\n    }\n}\nSystem.ApplicationHistoryConvert.Namespace=`Core.System`;\r\n_.System.ApplicationHistoryConvert=System.ApplicationHistoryConvert;\r\n","dependances":[{"fullName":"Aventus.ConverterTransform","isStrong":true},{"fullName":"Core.Lib.ApplicationStateManager","isStrong":false},{"fullName":"Object","isStrong":false},{"fullName":"Core.State.ApplicationState","isStrong":false}],"fullName":"Core.System.ApplicationHistoryConvert","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.FrameNoScroll = class FrameNoScroll extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"visible\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'visible'() { return this.getBoolProp('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\r    get 'state'() {\n\t\t\t\t\t\treturn this.__signals[\"state\"].value;\n\t\t\t\t\t}\n\t\t\t\t\tset 'state'(val) {\n\t\t\t\t\t\tthis.__signals[\"state\"].value = val;\n\t\t\t\t\t}\r    application;\n    resetNavElement;\n    __registerSignalsActions() { this.__signals[\"state\"] = null;\r super.__registerSignalsActions();  }\n    static __style = `:host{display:none;height:100%;width:100%;padding:0 5px}:host .opacity-wrapper{animation-delay:var(--local-frame-animation-delay, 0ms);animation-duration:200ms;animation-fill-mode:forwards;animation-name:fadeIn;animation-timing-function:var(--bezier-curve);display:none;height:100%;visibility:hidden;width:100%}:host([visible]){display:block}:host([visible]) .opacity-wrapper{display:block}@keyframes fadeIn{0%{opacity:0;visibility:hidden}100%{opacity:1;visibility:visible}}`;\n    constructor() {\n            super();\n            this.addFadeIn();\nif (this.constructor == FrameNoScroll) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return FrameNoScroll;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(FrameNoScroll.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"opacity-wrapper\">\r    <slot></slot>\r</div>` }\n    });\n}\n    getClassName() {\n        return \"FrameNoScroll\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('visible')) { this.attributeChangedCallback('visible', false, false); }\r }\n    __defaultValuesSignal(s) { super.__defaultValuesSignal(s); s[\"state\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('visible');\rthis.__correctGetter('state');\r }\n    __listBoolProps() { return [\"visible\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    addFadeIn() {\n        this.style.setProperty(\"--local-frame-animation-delay\", \"200ms\");\n        this.addEventListener(\"animationend\", (e) => {\n            if (e.animationName == \"fadeIn\") {\n                this.style.removeProperty(\"--local-frame-animation-delay\");\n            }\n        });\n    }\n    async testPermissions() {\n        let proms = [];\n        let queries = [];\n        let test = (query) => {\n            queries.push(query);\n        };\n        this.definePermissions(test);\n        if (queries.length == 0) {\n            return true;\n        }\n        for (let query of queries) {\n            proms.push(can(query));\n        }\n        const perms = await Promise.all(proms);\n        for (let perm of perms) {\n            if (!perm) {\n                return false;\n            }\n        }\n        return true;\n    }\n    definePermissions(can) {\n    }\n    can(state) {\n        return true;\n    }\n    async show(state) {\n        this.state = state;\n        this.visible = true;\n        this.onShow();\n    }\n    async hide() {\n        this.visible = false;\n        this.onHide();\n    }\n    async askChange(newState) {\n        return true;\n    }\n    async execute(prom) {\n        return this.application.execute(prom);\n    }\n    async executeWithLoading(prom) {\n        return this.application.executeWithLoading(prom);\n    }\n}\nSystem.FrameNoScroll.Namespace=`Core.System`;\n_.System.FrameNoScroll=System.FrameNoScroll;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Signal","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"Internal","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Permissions.IPermissionQuery","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Core.State.ApplicationState","isStrong":false},{"fullName":"Core.System.ApplicationQueryFctResult","isStrong":false},{"fullName":"X","isStrong":false}],"fullName":"Core.System.FrameNoScroll","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"System.FrameStateNoScroll = class FrameStateNoScroll extends System.FrameNoScroll {\n    state;\n    static __style = ``;\n    constructor() { super(); if (this.constructor == FrameStateNoScroll) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return FrameStateNoScroll;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(FrameStateNoScroll.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"FrameStateNoScroll\";\n    }\n    can(state) {\n        if (state instanceof this.getState()) {\n            return true;\n        }\n        return this.onStateMissmatch();\n    }\n}\nSystem.FrameStateNoScroll.Namespace=`Core.System`;\n_.System.FrameStateNoScroll=System.FrameStateNoScroll;\n","dependances":[{"fullName":"Core.System.FrameNoScroll","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Core.State.ApplicationState","isStrong":false}],"fullName":"Core.System.FrameStateNoScroll","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"System.Frame = class Frame extends System.FrameNoScroll {\n    static __style = `:host .main-scroll{--scrollbar-content-padding: 0 15px}:host .main-scroll>*{--scrollbar-content-padding: 0}`;\n    constructor() { super(); if (this.constructor == Frame) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return Frame;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Frame.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'before-scroll':`<slot name=\"before-scroll\"></slot>`,'default':`<slot></slot>`,'after-scroll':`<slot name=\"after-scroll\"></slot>` }, \n        blocks: { 'default':`<slot name=\"before-scroll\"></slot><rk-scrollable floating_scroll class=\"main-scroll\" _id=\"frame_0\">\r    <slot></slot>\r</rk-scrollable><slot name=\"after-scroll\"></slot>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"mainScroll\",\n      \"ids\": [\n        \"frame_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Frame\";\n    }\n}\nSystem.Frame.Namespace=`Core.System`;\n_.System.Frame=System.Frame;\n","dependances":[{"fullName":"Core.System.FrameNoScroll","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Scrollable","isStrong":false}],"fullName":"Core.System.Frame","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"System.FrameState = class FrameState extends System.Frame {\n    state;\n    static __style = ``;\n    constructor() { super(); if (this.constructor == FrameState) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return FrameState;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(FrameState.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"FrameState\";\n    }\n    can(state) {\n        if (state instanceof this.getState()) {\n            return true;\n        }\n        return this.onStateMissmatch();\n    }\n}\nSystem.FrameState.Namespace=`Core.System`;\n_.System.FrameState=System.FrameState;\n","dependances":[{"fullName":"Core.System.Frame","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Core.State.ApplicationState","isStrong":false}],"fullName":"Core.System.FrameState","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"System.FrameNotAllowed = class FrameNotAllowed extends System.Frame {\n    static __style = ``;\n    __getStatic() {\n        return FrameNotAllowed;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(FrameNotAllowed.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<p>Pas autorisé</p>` }\n    });\n}\n    getClassName() {\n        return \"FrameNotAllowed\";\n    }\n    pageTitle() {\n        return \"Accès non autorisé\";\n    }\n    definePermissions(test) {\n    }\n    onShow() {\n    }\n    onHide() {\n    }\n}\nSystem.FrameNotAllowed.Namespace=`Core.System`;\nSystem.FrameNotAllowed.Tag=`rk-frame-not-allowed`;\n_.System.FrameNotAllowed=System.FrameNotAllowed;\nif(!window.customElements.get('rk-frame-not-allowed')){window.customElements.define('rk-frame-not-allowed', System.FrameNotAllowed);Aventus.WebComponentInstance.registerDefinition(System.FrameNotAllowed);}\n","dependances":[{"fullName":"Core.System.Frame","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Permissions.IPermissionQuery","isStrong":false}],"fullName":"Core.System.FrameNotAllowed","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-frame-not-allowed"},{"code":"System.ApplicationHistory=class ApplicationHistory {\n    static Fullname = \"Core.System.ApplicationHistory\";\n    $type = System.ApplicationHistory.Fullname;\n    memory = [];\n    currentPosition = -1;\n    push(history) {\n        if (this.currentPosition != this.memory.length - 1) {\n            let nb = this.memory.length - (this.currentPosition + 1);\n            this.memory.splice(this.currentPosition + 1, nb);\n        }\n        this.memory.push(history);\n        this.currentPosition = this.memory.length - 1;\n    }\n    replace(history) {\n        if (this.memory.length == 0) {\n            this.memory.push(history);\n            return;\n        }\n        this.memory.splice(this.currentPosition, 1, history);\n    }\n    replaceAt(history, index) {\n        if (this.memory.length <= index) {\n            throw \"index is too short\";\n        }\n        this.memory.splice(index - 1, 1, history);\n    }\n    clear() {\n        if (this.memory.length == 0) {\n            return;\n        }\n        const last = this.memory.length - 1;\n        const lastHistory = this.memory[last];\n        this.memory = [lastHistory];\n    }\n    next() {\n        if (this.nextAvailable) {\n            this.currentPosition++;\n            return this.memory[this.currentPosition];\n        }\n        return null;\n    }\n    cancelNext() {\n        this.currentPosition--;\n    }\n    current() {\n        return this.memory[this.currentPosition];\n    }\n    get nextAvailable() {\n        return this.currentPosition < this.memory.length - 1;\n    }\n    previous(destroy = false) {\n        if (this.previousAvailable) {\n            if (destroy === true) {\n                this.memory.splice(this.currentPosition, 1);\n            }\n            this.currentPosition--;\n            return this.memory[this.currentPosition];\n        }\n        return null;\n    }\n    cancelPrevious() {\n        this.currentPosition++;\n    }\n    get previousAvailable() {\n        return this.currentPosition > 0;\n    }\n    toText() {\n        let txt = JSON.stringify(this);\n        return txt;\n    }\n    static fromText(manager, txt) {\n        if (!txt) {\n            return new System.ApplicationHistory();\n        }\n        try {\n            const converter = new System.ApplicationHistoryConvert(manager);\n            return Aventus.Converter.transform(JSON.parse(txt), converter);\n        }\n        catch (e) {\n        }\n        return new System.ApplicationHistory();\n    }\n}\nSystem.ApplicationHistory.Namespace=`Core.System`;\r\nSystem.ApplicationHistory.$schema={\"$type\":\"string\",\"memory\":\"History\",\"currentPosition\":\"number\",\"nextAvailable\":\"boolean\",\"previousAvailable\":\"boolean\"};\r\nAventus.Converter.register(System.ApplicationHistory.Fullname, System.ApplicationHistory);\r\n_.System.ApplicationHistory=System.ApplicationHistory;\r\n","dependances":[{"fullName":"Convertible","isStrong":false},{"fullName":"Core.System.ApplicationHistory","isStrong":false},{"fullName":"Core.System.History","isStrong":false},{"fullName":"Core.Lib.ApplicationStateManager","isStrong":false},{"fullName":"Core.System.ApplicationHistoryConvert","isStrong":false},{"fullName":"Aventus.Converter","isStrong":false}],"fullName":"Core.System.ApplicationHistory","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Lib.ApplicationManager=class ApplicationManager {\n    static waitingDelay = 1000;\n    static waitings = {};\n    static processing = {};\n    static mutex = new Aventus.Mutex();\n    static openApplications = {};\n    static openApplicationsKey = \"openApplications\";\n    static get storage() {\n        return sessionStorage;\n    }\n    static async save(appInfo) {\n        if (System.Os.instance.activeDesktop.data.Configuration.SyncDesktop) {\n            await this.uniqueAction(appInfo, async (appInfo) => {\n                await new Websocket.Routes.DesktopRouter().RegisterOpenApp({\n                    appInfo\n                });\n            });\n        }\n        else {\n            const { DesktopId, Info } = appInfo;\n            if (!this.openApplications[DesktopId]) {\n                this.openApplications[DesktopId] = [];\n            }\n            let mustAdd = true;\n            for (let i = 0; i < this.openApplications[DesktopId].length; i++) {\n                let current = this.openApplications[DesktopId][i];\n                if (current.number == Info.number && current.applicationName == Info.applicationName) {\n                    this.openApplications[DesktopId][i] = Info;\n                    mustAdd = false;\n                    break;\n                }\n            }\n            if (mustAdd) {\n                this.openApplications[DesktopId].push(Info);\n            }\n            this.storage.setItem(this.openApplicationsKey, JSON.stringify(this.openApplications));\n        }\n    }\n    static async remove(appInfo) {\n        if (System.Os.instance.activeDesktop.data.Configuration.SyncDesktop) {\n            await this.uniqueAction(appInfo, async (appInfo) => {\n                await new Websocket.Routes.DesktopRouter().RemoveApp({\n                    appInfo\n                });\n            });\n        }\n        else {\n            const { DesktopId, Info } = appInfo;\n            if (!this.openApplications[DesktopId]) {\n                return;\n            }\n            for (let i = 0; i < this.openApplications[DesktopId].length; i++) {\n                let current = this.openApplications[DesktopId][i];\n                if (current.number == Info.number && current.applicationName == Info.applicationName) {\n                    this.openApplications[DesktopId].splice(i, 1);\n                    if (this.openApplications[DesktopId].length == 0) {\n                        delete this.openApplications[DesktopId];\n                    }\n                    this.storage.setItem(this.openApplicationsKey, JSON.stringify(this.openApplications));\n                    return;\n                }\n            }\n        }\n    }\n    static getOpenApps(desktopId) {\n        return this.openApplications[desktopId] ?? [];\n    }\n    static uniqueAction(appInfo, action) {\n        this.mutex.safeRun(() => {\n            let key = this.getKey(appInfo);\n            if (this.waitings[key]) {\n                clearTimeout(this.waitings[key].timeout);\n            }\n            if (this.processing[key]) {\n                this.waitings[key] = {\n                    data: appInfo,\n                    timeout: 0\n                };\n                return;\n            }\n            this.waitings[key] = {\n                data: appInfo,\n                timeout: setTimeout(async () => {\n                    let appInfo;\n                    await this.mutex.safeRun(() => {\n                        appInfo = this.waitings[key].data;\n                        this.processing[key] = true;\n                        delete this.waitings[key];\n                    });\n                    await action(appInfo);\n                    await this.mutex.safeRun(() => {\n                        delete this.processing[key];\n                    });\n                    if (this.waitings[key]) {\n                        this.save(this.waitings[key].data);\n                    }\n                }, Lib.ApplicationManager.waitingDelay)\n            };\n        });\n    }\n    static reloadData() {\n        let savedValues = this.storage.getItem(this.openApplicationsKey) ?? '[]';\n        this.openApplications = Aventus.Converter.transform(JSON.parse(savedValues));\n    }\n    static init() {\n        this.onRegisterInfo = this.onRegisterInfo.bind(this);\n        this.onRemoveApp = this.onRemoveApp.bind(this);\n        new Websocket.Routes.DesktopRouter().events.RegisterOpenApp.onTrigger.add(this.onRegisterInfo);\n        new Websocket.Routes.DesktopRouter().events.RemoveApp.onTrigger.add(this.onRemoveApp);\n    }\n    static async onRegisterInfo(item, params) {\n        let key = this.getKey(item);\n        if (this.processing[key]) {\n            return;\n        }\n        if (!item.Info) {\n            return;\n        }\n        let info = item.Info;\n        if (info.number === undefined || info.history === undefined) {\n            return;\n        }\n        for (let desktopEl of System.Os.instance.desktopsEl) {\n            if (desktopEl.desktop_id == item.DesktopId) {\n                let found = false;\n                for (let appName in desktopEl.applications) {\n                    if (appName == info.applicationName) {\n                        let app = desktopEl.applications[appName][info.number];\n                        if (app) {\n                            found = true;\n                            app.setHistory(System.ApplicationHistory.fromText(app.navigator, info.history));\n                            app.is_hidden = info.isHidden ?? false;\n                            break;\n                        }\n                    }\n                }\n                if (!found) {\n                    this.processing[key] = true;\n                    await desktopEl.recreateApplication(info);\n                    delete this.processing[key];\n                }\n            }\n        }\n    }\n    static async onRemoveApp(item, params) {\n        if (!item.Info) {\n            return;\n        }\n        let info = item.Info;\n        if (info.number === undefined || info.history === undefined) {\n            return;\n        }\n        for (let desktopEl of System.Os.instance.desktopsEl) {\n            if (desktopEl.desktop_id == item.DesktopId) {\n                for (let appName in desktopEl.applications) {\n                    if (appName == info.applicationName) {\n                        let app = desktopEl.applications[appName][info.number];\n                        app.mustRemoveApplicationHistory = false;\n                        app.kill();\n                        if (app) {\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    static getKey(appInfo) {\n        return appInfo.DesktopId + \":\" + appInfo.Info?.applicationName + \"$\" + appInfo.Info?.number;\n    }\n}\nLib.ApplicationManager.Namespace=`Core.Lib`;\r\n_.Lib.ApplicationManager=Lib.ApplicationManager;\r\n","dependances":[{"fullName":"Core.Data.ApplicationOpenInfo","isStrong":true},{"fullName":"Aventus.Mutex","isStrong":true},{"fullName":"Core.Data.ApplicationOpen","isStrong":true},{"fullName":"Storage","isStrong":false},{"fullName":"Core.Websocket.Routes.DesktopRouter","isStrong":false},{"fullName":"Info","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Lib.ApplicationManager","isStrong":false},{"fullName":"Aventus.Converter","isStrong":false},{"fullName":"Aventus.UriParamsValue","isStrong":false},{"fullName":"Core.System.ApplicationHistory","isStrong":false},{"fullName":"Core.System.Os","isStrong":false}],"fullName":"Core.Lib.ApplicationManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.ApplicationSizeStorage=class ApplicationSizeStorage {\n    memoryPrefered = {};\n    memory = {};\n    keyPrefered = \"ApplicationSizeStoragePrefered\";\n    keySave = \"ApplicationSizeStorage\";\n    get storage() {\n        return localStorage;\n    }\n    constructor() {\n        this.memoryPrefered = JSON.parse(this.storage.getItem(this.keyPrefered) ?? \"{}\");\n        this.memory = JSON.parse(this.storage.getItem(this.keySave) ?? \"{}\");\n    }\n    getInfoPrefered(appName) {\n        return this.memoryPrefered[appName];\n    }\n    setInfoPrefered(appName, value) {\n        this.memoryPrefered[appName] = value;\n        this.storage.setItem(this.keyPrefered, JSON.stringify(this.memoryPrefered));\n    }\n    getInfo(desktopId, appName, appNumber) {\n        const key = this.getKey(desktopId, appName, appNumber);\n        return this.memory[key];\n    }\n    setInfo(desktopId, appName, appNumber, value) {\n        const key = this.getKey(desktopId, appName, appNumber);\n        this.memory[key] = value;\n        this.storage.setItem(this.keySave, JSON.stringify(this.memory));\n    }\n    removeInfo(desktopId, appName, appNumber) {\n        const key = this.getKey(desktopId, appName, appNumber);\n        delete this.memory[key];\n    }\n    clearAll() {\n        this.memory = {};\n        this.storage.setItem(this.keySave, JSON.stringify(this.memory));\n    }\n    getKey(desktopId, appName, appNumber) {\n        return desktopId + \":\" + appName + \"$\" + appNumber;\n    }\n}\nSystem.ApplicationSizeStorage.Namespace=`Core.System`;\r\n","dependances":[{"fullName":"Core.System.ApplicationPositionSize","isStrong":false},{"fullName":"Storage","isStrong":false}],"fullName":"Core.System.ApplicationSizeStorage","required":false,"type":1,"isExported":false,"convertibleName":""},{"code":"System.ApplicationSize=class ApplicationSize {\n    application;\n    storage;\n    constructor(application) {\n        this.application = application;\n        this.storage = Aventus.Instance.get(System.ApplicationSizeStorage);\n    }\n    load() {\n        const cst = this.application.constructor;\n        let desktopId = this.application.options?.desktopId ?? 0;\n        let applicationNumber = this.application.options?.applicationNumber ?? 0;\n        let info = this.storage.getInfo(desktopId, cst.Fullname, applicationNumber);\n        if (!info) {\n            return this.getPrefered();\n        }\n        return info;\n    }\n    save() {\n        if (!this.application.isReady)\n            return;\n        const cst = this.application.constructor;\n        let desktopId = this.application.options?.desktopId ?? 0;\n        let applicationNumber = this.application.options?.applicationNumber ?? 0;\n        let info;\n        if (this.application.full) {\n            let oldValues = this.load();\n            info = {\n                isFullScreen: true,\n                height: oldValues.height,\n                width: oldValues.width,\n                left: oldValues.left,\n                top: oldValues.top\n            };\n        }\n        else {\n            if (this.application.offsetHeight == 0 || this.application.offsetWidth == 0) {\n                return;\n            }\n            info = {\n                isFullScreen: false,\n                height: this.application.offsetHeight,\n                width: this.application.offsetWidth,\n                left: this.application.offsetLeft,\n                top: this.application.offsetTop\n            };\n        }\n        this.storage.setInfo(desktopId, cst.Fullname, applicationNumber, info);\n        this.storage.setInfoPrefered(cst.Fullname, info);\n    }\n    remove() {\n        const cst = this.application.constructor;\n        let desktopId = this.application.options?.desktopId ?? 0;\n        let applicationNumber = this.application.options?.applicationNumber ?? 0;\n        this.storage.removeInfo(desktopId, cst.Fullname, applicationNumber);\n    }\n    getPrefered() {\n        const cst = this.application.constructor;\n        const info = this.storage.getInfoPrefered(cst.Fullname);\n        if (!info) {\n            return System.ApplicationSize.getBasicSize();\n        }\n        return info;\n    }\n    static getBasicSize() {\n        let height = document.body.offsetHeight * 0.8;\n        if (height < 500) {\n            height = document.body.offsetHeight;\n        }\n        let width = height / 5 * 8;\n        if (width > document.body.offsetWidth) {\n            width = document.body.offsetWidth;\n        }\n        let top = (document.body.offsetHeight - height) / 2 - 40;\n        if (top < 0) {\n            top = 0;\n        }\n        let left = (document.body.offsetWidth - width) / 2;\n        if (left < 0) {\n            left = 0;\n        }\n        return {\n            isFullScreen: false,\n            height,\n            width,\n            top, left\n        };\n    }\n}\nSystem.ApplicationSize.Namespace=`Core.System`;\r\n_.System.ApplicationSize=System.ApplicationSize;\r\n","dependances":[{"fullName":"Core.System.ApplicationSizeStorage","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Core.System.ApplicationPositionSize","isStrong":false},{"fullName":"Core.System.ApplicationSize","isStrong":false},{"fullName":"Core.System.Application","isStrong":false}],"fullName":"Core.System.ApplicationSize","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.Frame404 = class Frame404 extends System.Frame {\n    static __style = ``;\n    __getStatic() {\n        return Frame404;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Frame404.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<p>Erreur 404</p>` }\n    });\n}\n    getClassName() {\n        return \"Frame404\";\n    }\n    pageTitle() {\n        return \"Page not found\";\n    }\n    definePermissions(can) {\n    }\n    onShow() {\n    }\n    onHide() {\n    }\n}\nSystem.Frame404.Namespace=`Core.System`;\nSystem.Frame404.Tag=`rk-frame-404`;\n_.System.Frame404=System.Frame404;\nif(!window.customElements.get('rk-frame-404')){window.customElements.define('rk-frame-404', System.Frame404);Aventus.WebComponentInstance.registerDefinition(System.Frame404);}\n","dependances":[{"fullName":"Core.System.Frame","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Permissions.IPermissionQuery","isStrong":false}],"fullName":"Core.System.Frame404","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-frame-404"},{"code":"Components.GenericPopup = class GenericPopup extends Aventus.WebComponent {\n    get 'no_red_btn'() { return this.getBoolAttr('no_red_btn') }\n    set 'no_red_btn'(val) { this.setBoolAttr('no_red_btn', val) }\rget 'behind'() { return this.getBoolAttr('behind') }\n    set 'behind'(val) { this.setBoolAttr('behind', val) }\rget 'close_on_click'() { return this.getBoolAttr('close_on_click') }\n    set 'close_on_click'(val) { this.setBoolAttr('close_on_click', val) }\r    get 'info'() {\n\t\t\t\t\t\treturn this.__watch[\"info\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'info'(val) {\n\t\t\t\t\t\tthis.__watch[\"info\"] = val;\n\t\t\t\t\t}\r    cb;\n    pressManagerClose;\n    pressManagerPopup;\n    application;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"info\", ((target, action, path, value) => {\n    target.onOptionsChanged();\n}));\r    super.__registerWatchesActions();\n}\n    static __style = `:host{--_popup-background-color: var(--popup-background-color, var(--application-background-color, var(--primary-color-opacity)));--_popup-border-radius: var(--popup-border-radius, var(--application-border-radius, 10px));--_popup-header-background-color: var(--popup-header-background-color, var(--application-header-background-color, var(--darker-active)));--_popup-content-padding: var(--popup-content-padding, 15px)}:host{align-items:center;animation-duration:.5s;animation-fill-mode:forwards;animation-name:fadeIn;animation-timing-function:var(--bezier-curve);background-color:rgba(48,48,48,.1);border-radius:var(--application-border-radius);display:flex;inset:0;justify-content:center;position:absolute;z-index:650}:host .popup{background-color:var(--_popup-background-color);border-radius:var(--_popup-border-radius);box-shadow:var(--elevation-5);container-name:application;container-type:normal;display:flex;flex-direction:column;max-height:calc(100% - 50px);max-width:calc(100% - 50px);width:fit-content}:host .popup .header{align-items:center;border-top-left-radius:var(--_popup-border-radius);border-top-right-radius:var(--_popup-border-radius);display:flex;flex-shrink:0;height:30px;overflow:hidden;position:relative;width:100%;z-index:3}:host .popup .header .background{background-color:var(--_popup-header-background-color);inset:0;position:absolute;z-index:1}:host .popup .header .title{flex-grow:1;margin-left:15px;margin-right:15px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;z-index:2}:host .popup .header .application-actions{align-items:center;display:flex;gap:5px;justify-content:end;margin-right:15px;z-index:2}:host .popup .header .application-actions .btn{border-radius:var(--border-radius);height:15px;width:15px}:host .popup .content{border-bottom-left-radius:var(--_application-border-radius);border-bottom-right-radius:var(--_application-border-radius);height:calc(100% - 30px);max-height:calc(var(--app-height) - 50px - 30px);min-height:auto;min-width:auto;overflow:hidden;padding:var(--_popup-content-padding);width:100%;z-index:1}:host .popup.shake{animation-duration:.3s;animation-iteration-count:1;animation-name:shake;animation-timing-function:var(--bezier-curve)}:host(.fade-out){animation-duration:.5s;animation-fill-mode:forwards;animation-name:fadeOut;animation-timing-function:var(--bezier-curve)}:host([no_red_btn]) .popup .header .application-actions .btn{display:none}:host([behind]){z-index:550}@media screen and (min-width: 1225px){:host .popup .header .application-actions .btn:hover{box-shadow:0 0 4px var(--darker-active) inset}}@media screen and (max-width: 1224px){:host .popup .header{height:40px}:host .popup .header .application-actions{gap:10px}:host .popup .header .application-actions .btn{height:20px;width:20px}:host .popup .content{height:calc(100% - 45px)}}@keyframes fadeIn{0%{opacity:0;visibility:hidden}100%{opacity:1;visibility:visible}}@keyframes fadeOut{0%{opacity:1;visibility:visible}100%{opacity:0;visibility:hidden}}@keyframes shake{0%{transform:scale(1)}50%{transform:scale(1.03)}100%{transform:scale(1)}}`;\n    constructor() {\n            super();\n            this.info = this.defaultOptions();\nif (this.constructor == GenericPopup) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return GenericPopup;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(GenericPopup.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"popup\" _id=\"genericpopup_0\">\r    <div class=\"header\">\r        <div class=\"background\"></div>\r        <div class=\"title\" _id=\"genericpopup_1\"></div>\r        <div class=\"application-actions\">\r            <div class=\"btn red touch\" _id=\"genericpopup_2\"></div>\r        </div>\r    </div>\r    <div class=\"content\" _id=\"genericpopup_3\">\r        <slot></slot>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"popupEl\",\n      \"ids\": [\n        \"genericpopup_0\"\n      ]\n    },\n    {\n      \"name\": \"contentEl\",\n      \"ids\": [\n        \"genericpopup_3\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"genericpopup_1°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__cc26f54f9c039edaaa84e25490791589method0())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"genericpopup_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.cancel(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"GenericPopup\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('no_red_btn')) { this.attributeChangedCallback('no_red_btn', false, false); }\rif(!this.hasAttribute('behind')) { this.attributeChangedCallback('behind', false, false); }\rif(!this.hasAttribute('close_on_click')) { this.attributeChangedCallback('close_on_click', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"info\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('no_red_btn');\rthis.__upgradeProperty('behind');\rthis.__upgradeProperty('close_on_click');\rthis.__correctGetter('info');\r }\n    __listBoolProps() { return [\"no_red_btn\",\"behind\",\"close_on_click\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    onContextMenu(contextMenu, stop) {\n        stop();\n    }\n    mergeInfo(info) {\n        this.info = { ...this.info, ...info };\n    }\n    init(cb) {\n        this.cb = cb;\n    }\n    onOptionsChanged() {\n        this.no_red_btn = this.info.hide_red_btn == true;\n        this.behind = this.info.behind == true;\n        this.close_on_click = this.info.close_on_click == true;\n        this.popupEl.style.maxWidth = this.info.max_width ?? '';\n        this.popupEl.style.maxHeight = this.info.max_height ?? '';\n        this.popupEl.style.minWidth = this.info.min_width ?? '';\n        this.popupEl.style.minHeight = this.info.min_height ?? '';\n    }\n    close() {\n        this.classList.add(\"fade-out\");\n    }\n    addCloseWatcher() {\n        this.addEventListener(\"animationend\", (e) => {\n            if (e.animationName == \"fadeOut\") {\n                this.remove();\n            }\n        });\n    }\n    resolve(response, no_close) {\n        if (this.cb) {\n            this.cb(response);\n        }\n        if (!no_close) {\n            this.close();\n        }\n    }\n    addPress() {\n        this.popupEl.addEventListener(\"animationend\", (e) => {\n            if (e.animationName == \"shake\") {\n                this.popupEl.classList.remove(\"shake\");\n            }\n        });\n        this.pressManagerClose = new Aventus.PressManager({\n            element: this,\n            onPress: (e) => {\n                if (this.close_on_click) {\n                    this.close();\n                }\n                else {\n                    this.popupEl.classList.add(\"shake\");\n                }\n            }\n        });\n        // prevent close\n        this.pressManagerPopup = new Aventus.PressManager({\n            element: this.popupEl,\n            onPress: (e) => { }\n        });\n    }\n    postDestruction() {\n        this.pressManagerClose?.destroy();\n        this.pressManagerPopup?.destroy();\n    }\n    postCreation() {\n        this.addCloseWatcher();\n        this.addPress();\n        this.onOptionsChanged();\n    }\n    __cc26f54f9c039edaaa84e25490791589method0() {\n        return this.info.title;\n    }\n}\nComponents.GenericPopup.Namespace=`Core.Components`;\n_.Components.GenericPopup=Components.GenericPopup;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.IContextMenu","isStrong":true},{"fullName":"Core.Components.PopupInfo","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.GenericPopup","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"InternalProtected","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Core.Components.GenericPopup","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.Popup = class Popup extends Components.GenericPopup {\n    static __style = `:host .popup .content{--scrollbar-max-height: calc(var(--app-height) - 50px - 30px - var(--_popup-content-padding) - var(--_popup-content-padding));width:100%}`;\n    constructor() { super(); if (this.constructor == Popup) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return Popup;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Popup.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"popup\" _id=\"popup_0\">\r    <div class=\"header\">\r        <div class=\"background\"></div>\r        <div class=\"title\" _id=\"popup_1\"></div>\r        <div class=\"application-actions\">\r            <div class=\"btn red touch\" _id=\"popup_2\"></div>\r        </div>\r    </div>\r    <rk-scrollable class=\"content\">\r        <slot></slot>\r    </rk-scrollable>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"popupEl\",\n      \"ids\": [\n        \"popup_0\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"popup_1°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__c6b222033048639bf6ac58d471520fbamethod0())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"popup_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.cancel(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Popup\";\n    }\n    __c6b222033048639bf6ac58d471520fbamethod0() {\n        return this.info.title;\n    }\n}\nComponents.Popup.Namespace=`Core.Components`;\n_.Components.Popup=Components.Popup;\n","dependances":[{"fullName":"Core.Components.GenericPopup","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"OverrideView","isStrong":false},{"fullName":"Core.Components.PopupInfo","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Scrollable","isStrong":false}],"fullName":"Core.Components.Popup","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.Confirm = class Confirm extends Components.GenericPopup {\n    static __style = `:host .popup .body{align-items:center;display:flex;justify-content:center;line-height:1.5;padding:20px;padding-top:15px;text-align:center}:host .popup .action{align-items:center;display:flex;gap:20px;justify-content:center}`;\n    __getStatic() {\n        return Confirm;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Confirm.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<rk-scrollable class=\"body\" _id=\"confirm_0\"></rk-scrollable><div class=\"action\">\r    <rk-button color=\"red\" _id=\"confirm_1\"></rk-button>\r    <rk-button color=\"success\" _id=\"confirm_2\"></rk-button>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"confirm_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__caa2fd56843944180566fbe49a4bb311method0())}`,\n      \"once\": true\n    },\n    \"confirm_1°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__caa2fd56843944180566fbe49a4bb311method1())}`,\n      \"once\": true\n    },\n    \"confirm_2°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__caa2fd56843944180566fbe49a4bb311method2())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"confirm_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.cancel(e, pressInstance); }\n    },\n    {\n      \"id\": \"confirm_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.validate(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Confirm\";\n    }\n    defaultOptions() {\n        return {\n            title: \"\",\n            description: \"\",\n            true_txt: \"Oui\",\n            false_txt: \"Non\",\n        };\n    }\n    validate() {\n        this.resolve(true);\n    }\n    cancel() {\n        this.resolve(false);\n    }\n    __caa2fd56843944180566fbe49a4bb311method0() {\n        return this.info.description;\n    }\n    __caa2fd56843944180566fbe49a4bb311method1() {\n        return this.info.false_txt;\n    }\n    __caa2fd56843944180566fbe49a4bb311method2() {\n        return this.info.true_txt;\n    }\n}\nComponents.Confirm.Namespace=`Core.Components`;\nComponents.Confirm.Tag=`rk-confirm`;\n_.Components.Confirm=Components.Confirm;\nif(!window.customElements.get('rk-confirm')){window.customElements.define('rk-confirm', Components.Confirm);Aventus.WebComponentInstance.registerDefinition(Components.Confirm);}\n","dependances":[{"fullName":"Core.Components.GenericPopup","isStrong":true},{"fullName":"Core.Components.ConfirmInfo","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"NotVoid","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Button","isStrong":false}],"fullName":"Core.Components.Confirm","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-confirm"},{"code":"Components.Alert = class Alert extends Components.GenericPopup {\n    static __style = `:host .popup .content .body{--scrollbar-max-height: calc(var(--app-height) - 50px - 30px - 36px - var(--_popup-content-padding) - var(--_popup-content-padding));align-items:center;display:flex;justify-content:center;line-height:1.5;max-height:calc(var(--app-height) - 50px - 30px - 36px - var(--_popup-content-padding) - var(--_popup-content-padding));padding:20px;padding-top:15px;text-align:center}:host .popup .content .action{align-items:center;display:flex;gap:20px;height:36px;justify-content:center}`;\n    __getStatic() {\n        return Alert;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Alert.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<rk-scrollable class=\"body\">\r    <p _id=\"alert_0\"></p>\r</rk-scrollable><div class=\"action\">\r    <rk-button color=\"blue\" _id=\"alert_1\"></rk-button>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"alert_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__d0561a7aa91ff42b328166316d099970method0())}`,\n      \"once\": true\n    },\n    \"alert_1°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__d0561a7aa91ff42b328166316d099970method1())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"click\",\n      \"id\": \"alert_1\",\n      \"fct\": (e, c) => c.comp.validate(e)\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Alert\";\n    }\n    defaultOptions() {\n        return {\n            title: \"\",\n            description: \"\",\n            btn_txt: \"ok\"\n        };\n    }\n    validate() {\n        this.resolve();\n    }\n    cancel() {\n        this.resolve();\n    }\n    __d0561a7aa91ff42b328166316d099970method0() {\n        return this.info.description;\n    }\n    __d0561a7aa91ff42b328166316d099970method1() {\n        return this.info.btn_txt;\n    }\n}\nComponents.Alert.Namespace=`Core.Components`;\nComponents.Alert.Tag=`rk-alert`;\n_.Components.Alert=Components.Alert;\nif(!window.customElements.get('rk-alert')){window.customElements.define('rk-alert', Components.Alert);Aventus.WebComponentInstance.registerDefinition(Components.Alert);}\n","dependances":[{"fullName":"Core.Components.GenericPopup","isStrong":true},{"fullName":"Core.Components.AlertInfo","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"NotVoid","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Button","isStrong":false}],"fullName":"Core.Components.Alert","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-alert"},{"code":"System.Application = class Application extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"app_title\", \"full\", \"is_hidden\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'moving'() { return this.getBoolAttr('moving') }\n    set 'moving'(val) { this.setBoolAttr('moving', val) }\rget 'loading'() { return this.getBoolAttr('loading') }\n    set 'loading'(val) { this.setBoolAttr('loading', val) }\r    get 'app_title'() { return this.getStringProp('app_title') }\n    set 'app_title'(val) { this.setStringAttr('app_title', val) }\rget 'full'() { return this.getBoolProp('full') }\n    set 'full'(val) { this.setBoolAttr('full', val) }\rget 'is_hidden'() { return this.getBoolProp('is_hidden') }\n    set 'is_hidden'(val) { this.setBoolAttr('is_hidden', val) }\r    get 'is_desktop_active'() {\n\t\t\t\t\t\treturn this.__watch[\"is_desktop_active\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'is_desktop_active'(val) {\n\t\t\t\t\t\tthis.__watch[\"is_desktop_active\"] = val;\n\t\t\t\t\t}\r    oldFrame;\n    allRoutes = {};\n    activePath = \"\";\n    activeState;\n    showPageMutex = new Aventus.Mutex();\n    router;\n    options;\n    history;\n    mustRemoveApplicationHistory = true;\n    oneStateActive = false;\n    page404;\n    page405;\n    sizeManager;\n    isAnimating = false;\n    afterTransitionCb = [];\n    shortcutManager;\n    version = 0;\n    get navigator() {\n        if (!this.router) {\n            this.router = new Lib.ApplicationStateManager(this);\n        }\n        return this.router;\n    }\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"is_desktop_active\", ((target) => {\n    target.shortcutManager.manageShortcut();\n}));\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"full\", ((target) => {\n    target.saveSize();\n}));\rthis.__addPropertyActions(\"is_hidden\", ((target) => {\n    target.onIsHiddenChange();\n}));\r }\n    static __style = `:host{--_application-box-shadow: var(--application-box-shadow);--_application-header-background-color: var(--application-header-background-color, var(--darker-active));--_application-background-color: var(--application-background-color, var(--primary-color-opacity));--_application-border-radius: var(--application-border-radius, 10px)}:host{backdrop-filter:blur(2px);background-color:var(--_application-background-color);border-radius:var(--_application-border-radius);box-shadow:var(--_application-box-shadow);container-name:application;container-type:inline-size;height:var(--app-height);outline:none;position:absolute;width:var(--app-width);z-index:50}:host .header{align-items:center;border-top-left-radius:var(--_application-border-radius);border-top-right-radius:var(--_application-border-radius);cursor:grab;display:flex;flex-shrink:0;height:30px;overflow:hidden;position:relative;width:100%;z-index:3}:host .header .background{background-color:var(--_application-header-background-color);inset:0;position:absolute;z-index:1}:host .header .navigation-actions{align-items:center;display:flex;flex-grow:0;height:100%;margin-left:15px;margin-right:15px;z-index:2}:host .header .navigation-actions .action{align-items:center;border-radius:2px;display:flex;height:calc(100% - 6px);justify-content:center;padding:0px;padding:1px 5px;transition:background-color var(--bezier-curve) .2s;width:22px}:host .header .navigation-actions .action rk-img{height:100%;pointer-events:none;width:100%}:host .header .navigation-actions .action.disable rk-img{--img-fill-color: var(--text-disable)}:host .header .title{flex-grow:1;margin-right:15px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;z-index:2}:host .header .application-actions{align-items:center;display:flex;gap:5px;justify-content:end;margin-right:15px;z-index:2}:host .header .application-actions .btn{border-radius:var(--border-radius-round);height:15px;width:15px}:host .content{border-bottom-left-radius:var(--_application-border-radius);border-bottom-right-radius:var(--_application-border-radius);height:calc(100% - 30px);overflow:hidden;width:100%;z-index:1}:host .loading{border-radius:var(--_application-border-radius);display:none;z-index:600}:host rk-resize{--resize-z-index: 4}:host rk-notification-manager{top:35px}:host(:not([moving])){transition:height .5s var(--bezier-curve),width .5s var(--bezier-curve),top .5s var(--bezier-curve),left .5s var(--bezier-curve),border-radius .5s var(--bezier-curve),opacity var(--bezier-curve) .5s,visibility var(--bezier-curve) .5s}:host(:not([moving])) .header{transition:border-radius .5s var(--bezier-curve)}:host([moving]) .header{cursor:grabbing}:host([full]){border-radius:0;--app-height: var(--os-height) !important;left:0 !important;top:0 !important;--app-width: var(--os-width) !important;z-index:500}:host([full]) .header{border-top-left-radius:0;border-top-right-radius:0;cursor:default}:host([full]) .content{border-bottom-left-radius:0;border-bottom-right-radius:0}:host([is_hidden]){height:0 !important;left:calc(50% - 100px) !important;overflow:hidden;top:calc(100% - 50px) !important;width:200px !important}:host([loading]) .loading{display:flex}@media screen and (min-width: 1225px){:host .header .navigation-actions .action:not(.disable):hover{background-color:var(--lighter)}:host .header .application-actions .btn:hover{box-shadow:0 0 4px var(--darker-active) inset}}@media screen and (max-width: 1224px){:host .header{height:40px}:host .header .application-actions{gap:10px}:host .header .application-actions .btn{height:20px;width:20px}:host .content{height:calc(100% - 40px)}:host rk-notification-manager{top:45px}}@media screen and (max-width: 768px){:host{border-radius:0;height:100% !important;left:0 !important;top:0 !important;width:100% !important;z-index:502}:host .header{border-top-left-radius:0;border-top-right-radius:0;height:40px}:host .header .application-actions{gap:10px}:host .header .application-actions .btn{height:20px;width:20px}:host .header .application-actions .orange{display:none}:host .content{border-bottom-left-radius:0;border-bottom-right-radius:0;height:calc(100% - 40px)}:host rk-resize{display:none}:host rk-notification-manager{top:45px}:host([is_hidden]){left:0 !important;width:100% !important}}`;\n    constructor() {\r            super();\r            this.history = new System.ApplicationHistory();\r            this.sizeManager = new System.ApplicationSize(this);\r            this.canChangeState = this.canChangeState.bind(this);\r            this.navigator.canChangeState(this.canChangeState);\r            this.shortcutManager = new System.ApplicationShortcut(this);\r            this.shortcutManager.init();\rif (this.constructor == Application) { throw \"can't instanciate an abstract class\"; } \rthis.onContextMenuContent=this.onContextMenuContent.bind(this)\rthis.onContextMenuHeader=this.onContextMenuHeader.bind(this)\rthis.validError404=this.validError404.bind(this)\rthis.showErrorNotAllowed=this.showErrorNotAllowed.bind(this)\rthis.saveApplicationHistory=this.saveApplicationHistory.bind(this)\rthis.onResizeStart=this.onResizeStart.bind(this)\rthis.onResizeStop=this.onResizeStop.bind(this)\rthis.moveApplicationToLeft=this.moveApplicationToLeft.bind(this)\rthis.moveApplicationToRight=this.moveApplicationToRight.bind(this)\rthis.popup=this.popup.bind(this)\rthis.alert=this.alert.bind(this)\rthis.confirm=this.confirm.bind(this)\rthis.notify=this.notify.bind(this)\rthis.popupErrors=this.popupErrors.bind(this)\rthis.parseErrors=this.parseErrors.bind(this)\rthis.execute=this.execute.bind(this)\rthis.executeWithLoading=this.executeWithLoading.bind(this)\rthis.showLoading=this.showLoading.bind(this)\rthis.txExec=this.txExec.bind(this)\rthis.txExecLoading=this.txExecLoading.bind(this) }\n    __getStatic() {\n        return Application;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Application.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<rk-context-menu-element class=\"header\" _id=\"application_0\">\r    <div class=\"background\"></div>\r    <div class=\"navigation-actions\">\r        <div class=\"previous action touch disable\" _id=\"application_1\">\r            <rk-img src=\"/img/icons/angle-left.svg\"></rk-img>\r        </div>\r        <div class=\"next action touch disable\" _id=\"application_2\">\r            <rk-img src=\"/img/icons/angle-right.svg\"></rk-img>\r        </div>\r    </div>\r    <div class=\"title\" _id=\"application_3\"></div>\r    <div class=\"application-actions\">\r        <div class=\"btn green touch\" _id=\"application_4\"></div>\r        <div class=\"btn orange touch\" _id=\"application_5\"></div>\r        <div class=\"btn red touch\" _id=\"application_6\"></div>\r    </div>\r</rk-context-menu-element><rk-context-menu-element class=\"content\" _id=\"application_7\"></rk-context-menu-element><rk-resize min_width=\"200\" min_height=\"200\" _id=\"application_8\"></rk-resize><rk-loading class=\"loading\"></rk-loading><rk-notification-manager _id=\"application_9\"></rk-notification-manager>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"header\",\n      \"ids\": [\n        \"application_0\"\n      ]\n    },\n    {\n      \"name\": \"navigatePreviousEl\",\n      \"ids\": [\n        \"application_1\"\n      ]\n    },\n    {\n      \"name\": \"navigateNextEl\",\n      \"ids\": [\n        \"application_2\"\n      ]\n    },\n    {\n      \"name\": \"contentEl\",\n      \"ids\": [\n        \"application_7\"\n      ]\n    },\n    {\n      \"name\": \"resizeEl\",\n      \"ids\": [\n        \"application_8\"\n      ]\n    },\n    {\n      \"name\": \"notificationManager\",\n      \"ids\": [\n        \"application_9\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"application_3°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__b8adb9845de45194ca3aae9322a8888cmethod0())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"application_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.navigatePrevious(e, pressInstance); }\n    },\n    {\n      \"id\": \"application_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.navigateNext(e, pressInstance); }\n    },\n    {\n      \"id\": \"application_4\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.hide(e, pressInstance); }\n    },\n    {\n      \"id\": \"application_5\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleFull(e, pressInstance); }\n    },\n    {\n      \"id\": \"application_6\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.kill(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Application\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('moving')) { this.attributeChangedCallback('moving', false, false); }\rif(!this.hasAttribute('loading')) { this.attributeChangedCallback('loading', false, false); }\rif(!this.hasAttribute('app_title')){ this['app_title'] = \"Page title\"; }\rif(!this.hasAttribute('full')) { this.attributeChangedCallback('full', false, false); }\rif(!this.hasAttribute('is_hidden')) { this.attributeChangedCallback('is_hidden', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"is_desktop_active\"] = false;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('navigator');\rthis.__upgradeProperty('moving');\rthis.__upgradeProperty('loading');\rthis.__upgradeProperty('app_title');\rthis.__upgradeProperty('full');\rthis.__upgradeProperty('is_hidden');\rthis.__correctGetter('is_desktop_active');\r }\n    __listBoolProps() { return [\"moving\",\"loading\",\"full\",\"is_hidden\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    onContextMenuContent(contextMenu, stop) {\n        stop();\n    }\n    onContextMenuHeader(contextMenu, stop) {\n        contextMenu.addItem({\n            text: \"Recentrer la fenetre\",\n            icon: \"/img/icons/window-restore.svg\",\n            priority: 2,\n            action: () => {\n                this.resetSize();\n            }\n        });\n        stop();\n    }\n    bindContextMenu() {\n        this.header.onContextMenu = this.onContextMenuHeader;\n        this.contentEl.onContextMenu = this.onContextMenuContent;\n    }\n    async navigate(to) {\n        let hasChanged = await this.navigator.setState(to);\n        let state = this.navigator.getState();\n        if (state && hasChanged) {\n            this.history.push({\n                state: state\n            });\n            this.checkNavigationState();\n            this.saveApplicationHistory();\n        }\n        return hasChanged;\n    }\n    async replaceState(to) {\n        let hasChanged = await this.navigator.setState(to);\n        let state = this.navigator.getState();\n        if (state && hasChanged) {\n            this.history.replace({\n                state: state\n            });\n            this.checkNavigationState();\n            this.saveApplicationHistory();\n        }\n        return hasChanged;\n    }\n    addRouteAsync(options) {\n        this.allRoutes[options.route] = options;\n    }\n    addRoute(route, frame) {\n        this.allRoutes[route] = {\n            route: route,\n            scriptUrl: '',\n            render: () => frame\n        };\n    }\n    register() {\n        try {\n            this.defineRoutes();\n            this.navigator.onAfterStateChanged(this.validError404);\n            for (let key in this.allRoutes) {\n                this.initRoute(key);\n            }\n        }\n        catch (e) {\n            console.log(e);\n        }\n    }\n    defineShortcut() {\n        return [];\n    }\n    shouldDestroyFrame(frame) {\n        return false;\n    }\n    initRoute(path) {\n        let element;\n        let allRoutes = this.allRoutes;\n        this.navigator.subscribe(path, {\n            active: (currentState) => {\n                this.oneStateActive = true;\n                this.showPageMutex.safeRunLastAsync(async () => {\n                    try {\n                        if (!element) {\n                            let options = allRoutes[path];\n                            if (options.scriptUrl != \"\") {\n                                await Aventus.ResourceLoader.loadInHead({\n                                    url: options.scriptUrl + \"?v=\" + this.version,\n                                    type: \"js\"\n                                });\n                            }\n                            let cst = options.render();\n                            element = new cst;\n                            element.application = this;\n                            element.resetNavElement = () => element = undefined;\n                            this.contentEl?.appendChild(element);\n                        }\n                        let isAllowed = await element.testPermissions();\n                        if (!isAllowed) {\n                            this.showErrorNotAllowed();\n                            return;\n                        }\n                        const canResult = await element.can(currentState);\n                        if (canResult !== true) {\n                            if (canResult === false) {\n                                return;\n                            }\n                            this.replaceState(canResult);\n                            return;\n                        }\n                        if (this.oldFrame && this.oldFrame != element) {\n                            await this.oldFrame.hide();\n                            if (this.shouldDestroyFrame(this.oldFrame)) {\n                                this.oldFrame.remove();\n                                // resetNavElement not set for 404 or 405\n                                if (this.oldFrame.resetNavElement) {\n                                    this.oldFrame.resetNavElement();\n                                }\n                            }\n                        }\n                        let oldPage = this.oldFrame;\n                        let oldUrl = this.activePath;\n                        this.oldFrame = element;\n                        this.activePath = path;\n                        this.activeState = currentState;\n                        await element.show(currentState);\n                        let titleTemp = element.pageTitle();\n                        if (titleTemp !== undefined) {\n                            this.app_title = titleTemp;\n                        }\n                        this.onNewPage(oldUrl, oldPage, path, element);\n                    }\n                    catch (e) {\n                        console.error(e);\n                    }\n                });\n            },\n            inactive: () => {\n                this.oneStateActive = false;\n            }\n        });\n    }\n    async validError404() {\n        if (!this.oneStateActive) {\n            let frameError = this.error404(this.navigator.getState());\n            if (!this.page404) {\n                this.page404 = new frameError();\n                this.page404.application = this;\n                this.contentEl.appendChild(this.page404);\n            }\n            if (this.oldFrame && this.oldFrame != this.page404) {\n                await this.oldFrame.hide();\n            }\n            let state = this.navigator.getState();\n            await this.page404.show(state);\n            this.oldFrame = this.page404;\n            this.activePath = '';\n        }\n    }\n    error404(state) {\n        return System.Frame404;\n    }\n    async showErrorNotAllowed() {\n        let frameError = this.errorNotAllowed(this.navigator.getState());\n        if (!this.page405) {\n            this.page405 = new frameError();\n            this.page405.application = this;\n            this.contentEl.appendChild(this.page405);\n        }\n        if (this.oldFrame && this.oldFrame != this.page405) {\n            await this.oldFrame.hide();\n        }\n        let state = this.navigator.getState();\n        await this.page405.show(state);\n        this.oldFrame = this.page405;\n        this.activePath = '';\n    }\n    errorNotAllowed(state) {\n        return System.FrameNotAllowed;\n    }\n    onNewPage(oldUrl, oldFrame, newUrl, newFrame) { }\n    getSlugs() {\n        return this.navigator.getStateSlugs(this.activePath);\n    }\n    async canChangeState(newState) {\n        if (!this.oldFrame)\n            return true;\n        return await this.oldFrame.askChange(newState);\n    }\n    checkNavigationState() {\n        if (this.history.previousAvailable) {\n            this.navigatePreviousEl.classList.remove(\"disable\");\n        }\n        else {\n            this.navigatePreviousEl.classList.add(\"disable\");\n        }\n        if (this.history.nextAvailable) {\n            this.navigateNextEl.classList.remove(\"disable\");\n        }\n        else {\n            this.navigateNextEl.classList.add(\"disable\");\n        }\n    }\n    async navigatePrevious(destroy = false) {\n        let history = this.history.previous(destroy);\n        if (history) {\n            if (await this.navigator.setState(history.state)) {\n                this.checkNavigationState();\n                this.saveApplicationHistory();\n            }\n            else {\n                this.history.cancelPrevious();\n            }\n        }\n    }\n    async navigateNext() {\n        let history = this.history.next();\n        if (history) {\n            if (await this.navigator.setState(history.state)) {\n                this.checkNavigationState();\n                this.saveApplicationHistory();\n            }\n            else {\n                this.history.cancelNext();\n            }\n        }\n    }\n    subscribeNavigationChange(statePatterns, callbacks) {\n        this.navigator.subscribe(statePatterns, callbacks);\n    }\n    unsubscribeNavigationChange(statePatterns, callbacks) {\n        this.navigator.unsubscribe(statePatterns, callbacks);\n    }\n    async setHistory(history) {\n        this.history = history;\n        let current = this.history.current();\n        if (current) {\n            if (this.navigator.isStateActive(current.state.name)) {\n                let state = this.navigator.getState();\n                if (state?.constructor == current.state.constructor && state instanceof State.ApplicationState && current.state instanceof State.ApplicationState) {\n                    state.disableSaveState();\n                    state.copyValues(current.state);\n                    this.history.replace({ state });\n                    state.enableSaveState();\n                }\n                else {\n                    await this.navigator.setState(\"\");\n                    await this.navigator.setState(current.state);\n                }\n            }\n            else {\n                await this.navigator.setState(current.state);\n            }\n            this.checkNavigationState();\n        }\n    }\n    async saveApplicationHistory() {\n        if (!this.options) {\n            return;\n        }\n        let app = new Data.ApplicationOpen();\n        app.applicationName = this.$type;\n        app.number = Number(this.options.applicationNumber);\n        app.history = this.history.toText();\n        app.isHidden = this.is_hidden;\n        let appInfo = new Data.ApplicationOpenInfo();\n        appInfo.DesktopId = this.options.desktopId;\n        appInfo.Info = app;\n        await Lib.ApplicationManager.save(appInfo);\n    }\n    async removeApplicationHistory() {\n        if (!this.options) {\n            return;\n        }\n        if (!this.mustRemoveApplicationHistory) {\n            return;\n        }\n        let app = new Data.ApplicationOpen();\n        app.applicationName = this.$type;\n        app.number = Number(this.options.applicationNumber);\n        app.isHidden = this.is_hidden;\n        app.history = '{}';\n        let appInfo = new Data.ApplicationOpenInfo();\n        appInfo.DesktopId = this.options.desktopId;\n        appInfo.Info = app;\n        await Lib.ApplicationManager.remove(appInfo);\n    }\n    onResizeStart(direction) {\n        this.moving = true;\n    }\n    onResizeStop(direction) {\n        this.moving = false;\n        this.saveSize();\n    }\n    onIsHiddenChange() {\n        if (!this.checkIfSizeCorrect()) {\n            this.resetSize();\n        }\n    }\n    saveSize() {\n        this.afterTransition(() => {\n            this.sizeManager.save();\n        });\n    }\n    resetSize() {\n        this.setSizeInfo(System.ApplicationSize.getBasicSize());\n        this.saveSize();\n    }\n    checkIfSizeCorrect() {\n        if (this.is_hidden) {\n            return true;\n        }\n        let stylePart = {};\n        let style = this.getAttribute(\"style\")?.split(\";\");\n        if (style) {\n            for (let part of style) {\n                part = part.trim();\n                if (part != \"\") {\n                    let splitted = part.split(\":\");\n                    stylePart[splitted[0]] = splitted[1].trim();\n                }\n            }\n        }\n        let left = Number(stylePart.left?.replace(\"px\", \"\"));\n        let width = Number(stylePart.width?.replace(\"px\", \"\"));\n        let top = Number(stylePart.top?.replace(\"px\", \"\"));\n        let height = Number(stylePart.height?.replace(\"px\", \"\"));\n        let frameRect = {\n            x1: left,\n            x2: left + width,\n            y1: top,\n            y2: top + height\n        };\n        let bodyRect = {\n            x1: 0,\n            x2: document.body.offsetWidth,\n            y1: 0,\n            y2: document.body.offsetHeight\n        };\n        let intersection = Lib.Geometry.getIntersectingRectangle(frameRect, bodyRect);\n        if (intersection) {\n            if (Math.abs(intersection.x2 - intersection.x1) < 100) {\n                return false;\n            }\n            if (Math.abs(intersection.y2 - intersection.y1) < 100) {\n                return false;\n            }\n            let areaIntersection = Lib.Geometry.getRectangleArea(intersection);\n            if (areaIntersection < 10000) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n    setSizeInfo(info) {\n        this.moveApplication(info);\n        this.full = info.isFullScreen;\n    }\n    moveApplication(options) {\n        if (options.left != undefined)\n            this.style.left = options.left + 'px';\n        if (options.top != undefined)\n            this.style.top = options.top + 'px';\n        if (options.width != undefined)\n            this.style.setProperty(\"--app-width\", options.width + \"px\");\n        if (options.height != undefined)\n            this.style.setProperty(\"--app-height\", options.height + \"px\");\n    }\n    moveApplicationToLeft() {\n        this.moveApplication({\n            top: 5,\n            left: 5,\n            height: System.Os.instance.offsetHeight - 10,\n            width: System.Os.instance.offsetWidth / 2 - 7,\n        });\n        this.saveSize();\n    }\n    moveApplicationToRight() {\n        this.moveApplication({\n            top: 5,\n            left: System.Os.instance.offsetWidth / 2 + 2,\n            height: System.Os.instance.offsetHeight - 10,\n            width: System.Os.instance.offsetWidth / 2 - 7,\n        });\n        this.saveSize();\n    }\n    addMoveDragAndDrop() {\n        let hasMove = false;\n        let desktopTemp = this.findParentByType(System.Desktop);\n        if (!desktopTemp)\n            return;\n        let desktop = desktopTemp;\n        new Aventus.DragAndDrop({\n            element: this,\n            elementTrigger: this.header,\n            offsetDrag: 5,\n            isDragEnable: () => {\n                return !this.full;\n            },\n            onPointerDown: () => {\n                hasMove = false;\n            },\n            onStart: (e) => {\n                this.moving = true;\n            },\n            onMove: (e) => {\n                hasMove = true;\n                let preview = [];\n                let diffX = desktopTemp.offsetWidth / 100 * 5;\n                if (e.clientX < diffX) {\n                    preview.push(\"left\");\n                }\n                else if (e.clientX > desktop.offsetWidth - diffX) {\n                    preview.push(\"right\");\n                }\n                let diffY = desktopTemp.offsetHeight / 100 * 10;\n                if (e.clientY < diffY) {\n                    preview.push(\"top\");\n                }\n                else if (e.clientY > desktop.offsetHeight - diffY) {\n                    preview.push(\"bottom\");\n                }\n                desktop.showPreviewPosition(preview);\n            },\n            onPointerUp: async () => {\n                this.moving = false;\n                let preview = await desktop.getPreviewPosition();\n                if (preview) {\n                    this.style.setProperty(\"--app-width\", preview.w + \"px\");\n                    this.style.setProperty(\"--app-height\", preview.h + \"px\");\n                    this.style.left = preview.l + \"px\";\n                    this.style.top = preview.t + \"px\";\n                }\n                if (hasMove)\n                    this.saveSize();\n            }\n        });\n        new Aventus.PressManager({\n            element: this.header,\n            onDblPress: () => {\n                this.toggleFull();\n            }\n        });\n    }\n    addResize() {\n        this.resizeEl.init(this, {\n            applyWidth: (value) => this.style.setProperty(\"--app-width\", value + \"px\"),\n            applyHeight: (value) => this.style.setProperty(\"--app-height\", value + \"px\")\n        });\n        this.resizeEl.onPointerDown.add(this.onResizeStart);\n        this.resizeEl.onPointerUp.add(this.onResizeStop);\n    }\n    afterTransition(cb) {\n        setTimeout(() => {\n            if (this.isAnimating) {\n                this.afterTransitionCb.push(cb);\n                return;\n            }\n            cb();\n        }, 100);\n    }\n    watchTransition() {\n        this.addEventListener(\"transitionstart\", () => {\n            this.isAnimating = true;\n        });\n        this.addEventListener(\"transitionend\", () => {\n            this.isAnimating = false;\n            let cbs = [...this.afterTransitionCb];\n            for (let cb of cbs) {\n                cb();\n            }\n            this.afterTransitionCb = [];\n        });\n    }\n    toggleFull() {\n        this.full = !this.full;\n    }\n    hide() {\n        this.is_hidden = true;\n        this.saveApplicationHistory();\n    }\n    show() {\n        this.is_hidden = false;\n        this.saveApplicationHistory();\n    }\n    kill() {\n        this.remove();\n    }\n    popup(p) {\n        return new Promise((resolve) => {\n            p.application = this;\n            p.init((response) => {\n                resolve(response);\n            });\n            this.shadowRoot.appendChild(p);\n        });\n    }\n    async alert(info) {\n        const a = new Components.Alert();\n        a.mergeInfo(info);\n        await this.popup(a);\n    }\n    async confirm(info) {\n        const c = new Components.Confirm();\n        c.mergeInfo(info);\n        return await this.popup(c);\n    }\n    notify(notification) {\n        return this.notificationManager.notify(notification);\n    }\n    async popupErrors(errors) {\n        if (errors.length > 0) {\n            let msg = errors.map(p => p.message.replace(/\\n/g, '<br/>')).join(\"<br/>\");\n            await this.alert({\n                title: \"Error\",\n                description: msg,\n                behind: false,\n                min_width: '300px',\n            });\n        }\n    }\n    async parseErrors(result) {\n        if (result.errors.length > 0) {\n            await this.popupErrors(result.errors);\n            return undefined;\n        }\n        if (result instanceof Aventus.ResultWithError)\n            return result.result;\n        return undefined;\n    }\n    async execute(prom) {\n        const queryResult = await prom;\n        return await this.parseErrors(queryResult);\n    }\n    async executeWithLoading(prom) {\n        const queryResult = await this.showLoading(prom);\n        if (!queryResult)\n            return undefined;\n        return await this.parseErrors(queryResult);\n    }\n    async showLoading(fct) {\n        let timeout = 0;\n        try {\n            const minDelay = 2000;\n            let start;\n            timeout = setTimeout(() => {\n                start = new Date();\n                this.loading = true;\n            }, 200);\n            let result;\n            if (fct instanceof Promise) {\n                result = await fct;\n            }\n            else {\n                result = await fct();\n            }\n            clearTimeout(timeout);\n            if (start) {\n                let now = new Date();\n                let diffMs = now.getTime() - start.getTime();\n                if (diffMs < minDelay) {\n                    await Aventus.sleep(minDelay - diffMs);\n                }\n            }\n            this.loading = false;\n            return result;\n        }\n        catch (e) {\n            clearTimeout(timeout);\n            this.loading = false;\n            this.alert({\n                title: \"Erreur\",\n                description: e\n            });\n        }\n        return null;\n    }\n    async txExec(fct, ms) {\n        try {\n            const beginResult = await Lib.TransactionManager.begin(ms);\n            if (!beginResult.success || !beginResult.result) {\n                this.popupErrors(beginResult.errors);\n                return undefined;\n            }\n            const resultWithError = new Aventus.ResultWithError();\n            if (!Lib.TransactionManager.isActive(beginResult.result)) {\n                resultWithError.errors.push(new Errors.CoreError(Errors.CoreErrorCode.TransactionGuidMissmatch, \"La transaction n'est plus active\"));\n            }\n            else {\n                try {\n                    resultWithError.result = await fct(async (fct, ...args) => {\n                        const queryResult = await fct(...args);\n                        if (queryResult.errors.length > 0) {\n                            for (let error of queryResult.errors) {\n                                resultWithError.errors.push(error);\n                            }\n                        }\n                        if (queryResult instanceof Aventus.ResultWithError)\n                            return queryResult.result;\n                        return undefined;\n                    });\n                }\n                catch (e) {\n                    resultWithError.errors.push(new Errors.CoreError(Errors.CoreErrorCode.UnknowError, e));\n                }\n                if (resultWithError.success) {\n                    const commitResult = await Lib.TransactionManager.commit(beginResult.result);\n                    resultWithError.errors = [...resultWithError.errors, ...commitResult.errors];\n                }\n                else {\n                    const rollbackResult = await Lib.TransactionManager.rollback(beginResult.result);\n                    resultWithError.errors = [...resultWithError.errors, ...rollbackResult.errors];\n                }\n            }\n            return this.parseErrors(resultWithError);\n        }\n        catch (e) {\n            this.alert({\n                title: \"Erreur\",\n                description: e\n            });\n        }\n        return undefined;\n    }\n    async txExecLoading(fct) {\n        const result = await this.showLoading(async () => {\n            return await this.txExec(fct);\n        });\n        return result ?? undefined;\n    }\n    addFocus() {\n        this.setAttribute(\"tabindex\", \"-1\");\n        this.addEventListener(\"focus\", (e) => {\n            e.stopPropagation();\n            this.setDesktopActive();\n        });\n    }\n    setDesktopActive() {\n        System.DesktopActivableLogic.set(this);\n    }\n    removeDesktopActive() {\n        System.DesktopActivableLogic.remove(this);\n    }\n    init(options) {\n        this.options = options;\n        this.setSizeInfo(this.sizeManager.load());\n    }\n    postCreation() {\n        this.register();\n        this.addResize();\n        this.addFocus();\n        this.addMoveDragAndDrop();\n        this.watchTransition();\n        this.bindContextMenu();\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.options?.desktop.removeApp(this);\n        this.removeDesktopActive();\n        this.removeApplicationHistory();\n        this.sizeManager.remove();\n    }\n    __b8adb9845de45194ca3aae9322a8888cmethod0() {\n        return this.app_title;\n    }\n}\nSystem.Application.Namespace=`Core.System`;\n_.System.Application=System.Application;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.System.IDesktopActivable","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.ContextMenuElement","isStrong":false},{"fullName":"Core.Components.Resize","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.NotificationManager","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.System.FrameNoScroll","isStrong":false},{"fullName":"Core.System.ApplicationRoute","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Aventus.Mutex","isStrong":false},{"fullName":"Core.Lib.ApplicationStateManager","isStrong":false},{"fullName":"Internal","isStrong":false},{"fullName":"Core.System.ApplicationInitOptions","isStrong":false},{"fullName":"Core.System.ApplicationHistory","isStrong":false},{"fullName":"Core.System.ApplicationSize","isStrong":false},{"fullName":"Core.System.ApplicationShortcut","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"InternalProtected","isStrong":false},{"fullName":"Core.Lib.SpecialTouch","isStrong":false},{"fullName":"Aventus.ResourceLoader","isStrong":false},{"fullName":"Core.System.Frame404","isStrong":false},{"fullName":"Core.System.FrameNotAllowed","isStrong":false},{"fullName":"Aventus.StateAction","isStrong":false},{"fullName":"Core.State.ApplicationState","isStrong":false},{"fullName":"Core.Data.ApplicationOpen","isStrong":false},{"fullName":"Core.Data.ApplicationOpenInfo","isStrong":false},{"fullName":"Core.Lib.ApplicationManager","isStrong":false},{"fullName":"Core.Components.ResizeDirection","isStrong":false},{"fullName":"Core.Lib.Rectangle","isStrong":false},{"fullName":"Core.Lib.Geometry","isStrong":false},{"fullName":"Core.System.ApplicationPositionSize","isStrong":false},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"Core.System.Desktop","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Core.Components.GenericPopup","isStrong":false},{"fullName":"U","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Core.System.ExtractTypePopup","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Core.Components.PopupInfo","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"Core.Components.AlertInfo","isStrong":false},{"fullName":"Core.Components.Alert","isStrong":false},{"fullName":"Core.Components.ConfirmInfo","isStrong":false},{"fullName":"Core.Components.Confirm","isStrong":false},{"fullName":"Core.Components.Notification","isStrong":false},{"fullName":"Core.Components.NotificationOptions","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false},{"fullName":"Core.System.ApplicationQueryFctResult","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"Aventus.sleep","isStrong":false},{"fullName":"A","isStrong":false},{"fullName":"Core.Lib.TransactionManager","isStrong":false},{"fullName":"Core.Errors.CoreError","isStrong":false},{"fullName":"Core.Errors.CoreErrorCode","isStrong":false},{"fullName":"Core.System.DesktopActivableLogic","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"ContextMenuElement","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"Resize","isStrong":false},{"fullName":"Loading","isStrong":false},{"fullName":"NotificationManager","isStrong":false}],"fullName":"Core.System.Application","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.Link = class Link extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"to\", \"active_pattern\", \"active\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'to'() { return this.getStringProp('to') }\n    set 'to'(val) { this.setStringAttr('to', val) }\rget 'active_pattern'() { return this.getStringProp('active_pattern') }\n    set 'active_pattern'(val) { this.setStringAttr('active_pattern', val) }\rget 'active'() { return this.getBoolProp('active') }\n    set 'active'(val) { this.setBoolAttr('active', val) }\r    pressManager;\n    oldTo;\n    retriggerIfActive = false;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"to\", ((target) => {\n    target.changeActiveSub();\n}));\rthis.__addPropertyActions(\"active_pattern\", ((target) => {\n    target.changeActiveSub();\n}));\rthis.__addPropertyActions(\"active\", ((target) => {\n    target.onActiveChange();\n}));\r }\n    static __style = ``;\n    constructor() { super(); \rthis.setActive=this.setActive.bind(this)\rthis.setInactive=this.setInactive.bind(this) }\n    __getStatic() {\n        return Link;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Link.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Link\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('to')){ this['to'] = undefined; }\rif(!this.hasAttribute('active_pattern')){ this['active_pattern'] = undefined; }\rif(!this.hasAttribute('active')) { this.attributeChangedCallback('active', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('to');\rthis.__upgradeProperty('active_pattern');\rthis.__upgradeProperty('active');\r }\n    __listBoolProps() { return [\"active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    changeActiveSub() {\n        let app = this.findParentByType(System.Application);\n        if (this.oldTo) {\n            app?.unsubscribeNavigationChange(this.oldTo, {\n                active: this.setActive,\n                inactive: this.setInactive\n            });\n        }\n        this.oldTo = this.active_pattern ?? this.to;\n        if (this.oldTo) {\n            app?.subscribeNavigationChange(this.oldTo, {\n                active: this.setActive,\n                inactive: this.setInactive\n            });\n        }\n    }\n    setActive() {\n        this.active = true;\n    }\n    setInactive() {\n        this.active = false;\n    }\n    onActiveChange() {\n    }\n    allowTrigger(element) {\n        return true;\n    }\n    setOnPress() {\n        this.pressManager = new Aventus.PressManager({\n            element: this,\n            onPress: (e) => {\n                if (!this.allowTrigger(this))\n                    return;\n                let app = this.findParentByType(System.Application);\n                if (app && this.to) {\n                    app.navigate(this.to);\n                }\n            }\n        });\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.pressManager?.destroy();\n        this.pressManager = undefined;\n    }\n    postCreation() {\n        this.setOnPress();\n    }\n}\nComponents.Link.Namespace=`Core.Components`;\nComponents.Link.Tag=`rk-link`;\n_.Components.Link=Components.Link;\nif(!window.customElements.get('rk-link')){window.customElements.define('rk-link', Components.Link);Aventus.WebComponentInstance.registerDefinition(Components.Link);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Link","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"BindThis","isStrong":false}],"fullName":"Core.Components.Link","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-link"},{"code":"Permissions.ApplicationPermissionQuery=class ApplicationPermissionQuery extends Permissions.PermissionQuery {\n    static get Fullname() { return \"Core.Permissions.ApplicationPermissionQuery, Core\"; }\n}\nPermissions.ApplicationPermissionQuery.Namespace=`Core.Permissions`;\r\nPermissions.ApplicationPermissionQuery.$schema={...(Permissions.PermissionQuery?.$schema ?? {}), };\r\nAventus.Converter.register(Permissions.ApplicationPermissionQuery.Fullname, Permissions.ApplicationPermissionQuery);\r\n_.Permissions.ApplicationPermissionQuery=Permissions.ApplicationPermissionQuery;\r\n","dependances":[{"fullName":"Core.Permissions.PermissionQuery","isStrong":true},{"fullName":"Core.Permissions.ApplicationPermission","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Permissions.ApplicationPermissionQuery","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Lib.AppIconManager=class AppIconManager {\n    static loaded = [];\n    static dico = {};\n    static tags = {};\n    static waiting = [];\n    static async register(appIcon, componentUrl = \"/\") {\n        let cst = appIcon.constructor;\n        let key = cst.Fullname + \"$\" + componentUrl;\n        if (this.loaded.includes(key)) {\n            return;\n        }\n        this.loaded.push(key);\n        let application = cst.Fullname.split(\".\")[0];\n        let code = await (await fetch(\"/\" + application + componentUrl)).text();\n        let match = code.match(\"<(.*?)>\");\n        if (!match) {\n            return;\n        }\n        let tagName = match[0].replace(\"<\", \"\").replace(\">\", \"\");\n        this.dico[tagName] = cst;\n        this.tags[application + \"$\" + componentUrl] = tagName;\n        let cbs = [...this.waiting];\n        for (let cb of cbs) {\n            cb();\n        }\n    }\n    static getIcon(tagName) {\n        return this.dico[tagName];\n    }\n    static getTagName(application, componentUrl, delay = 1000) {\n        return new Promise((resolve) => {\n            let key = application + \"$\" + componentUrl;\n            if (this.tags[key]) {\n                resolve(this.tags[key]);\n            }\n            else {\n                let cb = () => {\n                    if (this.tags[key]) {\n                        let index = this.waiting.indexOf(cb);\n                        this.waiting.splice(index, 1);\n                        resolve(this.tags[key]);\n                    }\n                };\n                setTimeout(() => {\n                    let index = this.waiting.indexOf(cb);\n                    if (index != -1) {\n                        this.waiting.splice(index, 1);\n                    }\n                    resolve(\"\");\n                }, delay);\n                this.waiting.push(cb);\n            }\n        });\n    }\n}\nLib.AppIconManager.Namespace=`Core.Lib`;\r\n_.Lib.AppIconManager=Lib.AppIconManager;\r\n","dependances":[{"fullName":"Core.Lib.AppIconCst","isStrong":true},{"fullName":"Promise","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false}],"fullName":"Core.Lib.AppIconManager","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"RAM.DesktopRAM=class DesktopRAM extends RAM.RamHttp {\n    /**\n     * @inheritdoc\n     */\n    defineRoutes() {\n        return new Routes.DesktopRouter(new Lib.HttpRouter());\n    }\n    /**\n     * Create a singleton to store data\n     */\n    static getInstance() {\n        return Aventus.Instance.get(RAM.DesktopRAM);\n    }\n    /**\n     * @inheritdoc\n     */\n    defineIndexKey() {\n        return 'Id';\n    }\n    /**\n     * @inheritdoc\n     */\n    getTypeForData(objJson) {\n        return Data.Desktop;\n    }\n    async beforeUpdateItem(item, fromList, result) {\n        const savedApps = item.Applications;\n        item.Applications = [];\n        await super.beforeUpdateItem(item, fromList, result);\n        item.Applications = savedApps;\n    }\n}\nRAM.DesktopRAM.Namespace=`Core.RAM`;\r\n_.RAM.DesktopRAM=RAM.DesktopRAM;\r\n","dependances":[{"fullName":"Core.RAM.RamHttp","isStrong":true},{"fullName":"Core.Data.Desktop","isStrong":false},{"fullName":"Aventus.IRam","isStrong":true},{"fullName":"AventusSharp.Routes.StorableRoute","isStrong":false},{"fullName":"Core.Routes.DesktopRouter","isStrong":false},{"fullName":"Core.Lib.HttpRouter","isStrong":false},{"fullName":"Core.RAM.DesktopRAM","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Aventus.KeysObject","isStrong":false},{"fullName":"Aventus.ResultRamWithError","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Promise","isStrong":false}],"fullName":"Core.RAM.DesktopRAM","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.Desktop = class Desktop extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"desktop_id\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'show_application_list'() { return this.getBoolAttr('show_application_list') }\n    set 'show_application_list'(val) { this.setBoolAttr('show_application_list', val) }\rget 'is_active'() { return this.getBoolAttr('is_active') }\n    set 'is_active'(val) { this.setBoolAttr('is_active', val) }\rget 'background_size'() { return this.getStringAttr('background_size') }\n    set 'background_size'(val) { this.setStringAttr('background_size', val) }\r    get 'desktop_id'() { return this.getNumberProp('desktop_id') }\n    set 'desktop_id'(val) { this.setNumberAttr('desktop_id', val) }\r    applications = {};\n    data;\n    _iconSize = 0;\n    get iconSize() {\n        return this._iconSize;\n    }\n    activableOrder = [];\n    get activeElement() {\n        if (this.activableOrder.length == 0)\n            return undefined;\n        return this.activableOrder[0];\n    }\n    showPreviewPositionTimeout;\n    waitPreviewPosition;\n    watchPreviewTransitionResolve;\n    oldActiveCase;\n    pressManagerStopMoveApp;\n    static __style = `:host{--_desktop-background-color: var(--desktop-background-color, var(--primary-color))}:host{background-color:var(--_desktop-background-color);background-position:center;background-repeat:no-repeat;background-size:cover;flex-shrink:0;height:100%;overflow:hidden;position:relative;width:100%}:host .icons{--page-case-border-radius: var(--border-radius-sm);--page-case-border-active: 1px solid var(--darker-active);--page-case-background-active: var(--lighter-active);height:calc(100% - var(--desktop-bottom-bar) - 20px - var(--safe-area-bottom));transition:opacity var(--bezier-curve) .5s,visibility var(--bezier-curve) .5s;width:100%;z-index:2}:host .debug{background-color:#f0f0f0;display:none;inset:0;overflow:auto;padding:10px;position:absolute;white-space:pre-wrap;z-index:1;touch-action:none;padding-bottom:100px}:host .app-container{transition:opacity var(--bezier-curve) .5s,visibility var(--bezier-curve) .5s}:host .preview-auto-layout{background:rgba(255,255,255,.2);border:1px solid rgba(255,255,255,.3);border-radius:var(--application-border-radius);box-shadow:0 4px 30px rgba(0,0,0,.1);display:none;pointer-events:none;position:absolute;z-index:999;transition:width .2s linear,height .2s linear,top .2s linear,left .2s linear}:host([show_application_list])>*{opacity:0 !important;visibility:hidden !important}:host([background_size=Cover]){background-size:cover}:host([background_size=Contain]){background-size:contain}:host([background_size=Stretch]){background-size:100% 100%}`;\n    constructor() {\r            super();\rthis.setAppPositionTemp=this.setAppPositionTemp.bind(this)\rthis.clearAppPositionTemp=this.clearAppPositionTemp.bind(this)\rthis.setAppPosition=this.setAppPosition.bind(this)\rthis.removeAppPosition=this.removeAppPosition.bind(this) }\n    __getStatic() {\n        return Desktop;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Desktop.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"icons\">\r    <rk-page-case case_width=\"75\" case_height=\"75\" min_case_margin_left=\"20\" min_case_margin_top=\"20\" min_page_number=\"1\" order_position inverse _id=\"desktop_0\">\r    </rk-page-case>\r</div><rk-bottom-bar _id=\"desktop_1\"></rk-bottom-bar><div class=\"debug\" _id=\"desktop_2\"></div><div class=\"app-container\" _id=\"desktop_3\"></div><div class=\"preview-auto-layout\" _id=\"desktop_4\"></div>` }\n    });\n}\n    __createStates() { super.__createStates(); let that = this;  this.__createStatesList(State.MoveApplication.state, State.DesktopStateManager);this.__addActiveState(State.MoveApplication.state, State.DesktopStateManager, (state, slugs) => { that.__inactiveDefaultState(State.DesktopStateManager); that.onMoveApplication(state, slugs);})\rthis.__addInactiveState(State.MoveApplication.state, State.DesktopStateManager, (state, nextState, slugs) => { that.onStopMovingApplication(state, nextState, slugs);that.__activeDefaultState(nextState, State.DesktopStateManager);})\r }\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"pageCaseEl\",\n      \"ids\": [\n        \"desktop_0\"\n      ]\n    },\n    {\n      \"name\": \"bottomBar\",\n      \"ids\": [\n        \"desktop_1\"\n      ]\n    },\n    {\n      \"name\": \"debugEl\",\n      \"ids\": [\n        \"desktop_2\"\n      ]\n    },\n    {\n      \"name\": \"appContainer\",\n      \"ids\": [\n        \"desktop_3\"\n      ]\n    },\n    {\n      \"name\": \"previewAutoLayout\",\n      \"ids\": [\n        \"desktop_4\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Desktop\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('show_application_list')) { this.attributeChangedCallback('show_application_list', false, false); }\rif(!this.hasAttribute('is_active')) { this.attributeChangedCallback('is_active', false, false); }\rif(!this.hasAttribute('background_size')){ this['background_size'] = Data.BackgroundSize[Data.BackgroundSize.Cover]; }\rif(!this.hasAttribute('desktop_id')){ this['desktop_id'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('iconSize');\rthis.__correctGetter('activeElement');\rthis.__upgradeProperty('show_application_list');\rthis.__upgradeProperty('is_active');\rthis.__upgradeProperty('background_size');\rthis.__upgradeProperty('desktop_id');\r }\n    __listBoolProps() { return [\"show_application_list\",\"is_active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    onContextMenu(contextMenu, stop) {\n        if (Object.keys(this.applications).length > 0) {\n            contextMenu.addItem({\n                text: \"Recentrer les fenetres\",\n                icon: \"/img/icons/window-restore.svg\",\n                priority: 2,\n                action: () => {\n                    for (let name in this.applications) {\n                        for (let id in this.applications[name]) {\n                            this.applications[name][id].resetSize();\n                        }\n                    }\n                }\n            });\n        }\n        if (Lib.Platform.isStandalone) {\n            contextMenu.addItem({\n                text: \"Recharger la page\",\n                materialIcon: \"refresh\",\n                priority: 3,\n                action: () => {\n                    window.location.reload();\n                }\n            });\n        }\n        contextMenu.addItem({\n            text: \"Paramètres\",\n            materialIcon: \"display_settings\",\n            action: () => {\n                this.openUrl(\"Settings\", \"/\", \"/display\");\n            }\n        });\n    }\n    async loadApp(application) {\n        await Addon.loadForApp(application);\n        const appInfo = await RAM.ApplicationRAM.getInstance().getApplicationByName(application);\n        let version = \"\";\n        if (appInfo) {\n            version = \"?v=\" + appInfo.Version;\n        }\n        await Aventus.ResourceLoader.loadInHead({\n            type: \"js\",\n            url: \"/apps/\" + application + \"/index.js\" + version\n        });\n        await Aventus.ResourceLoader.loadInHead({\n            type: \"css\",\n            url: \"/apps/\" + application + \"/default.css\" + version\n        });\n    }\n    async openUrl(application, componentUrl = \"/\", url = \"/\") {\n        if (!(await can(new Permissions.ApplicationPermissionQuery(Permissions.ApplicationPermission.AllowAccess, application)))) {\n            let notif = new Components.Notification();\n            notif.subject = \"Erreur\";\n            notif.innerHTML = \"Vous n'êtes pas autorisé à ouvrir l'application \" + application;\n            System.Os.instance.notify(notif);\n            return;\n        }\n        System.Os.instance.show_application_list = false;\n        await this.loadApp(application);\n        let tagName = await Lib.AppIconManager.getTagName(application, componentUrl);\n        let comp = Aventus.WebComponentInstance.create(tagName);\n        if (comp) {\n            if (!this.applications[comp.$type]) {\n                this.applications[comp.$type] = {};\n            }\n            let i = 0;\n            while (this.applications[comp.$type][i]) {\n                i++;\n            }\n            comp.init({\n                applicationNumber: i,\n                desktopId: this.desktop_id,\n                desktop: this,\n            });\n            this.appContainer.appendChild(comp);\n            comp.focus();\n            this.setElementToActive(comp);\n            await comp.navigate(url);\n            this.applications[comp.$type][i] = comp;\n            this.manageAppBottomBar(comp.$type);\n        }\n        else {\n            let notif = new Components.Notification();\n            notif.subject = \"Erreur\";\n            notif.innerHTML = \"Impossible de trouver l'application \" + application + \" sur \" + componentUrl;\n            System.Os.instance.notify(notif);\n        }\n    }\n    async unHideApplication(application, componentUrl = \"/\") {\n        let tagName = await Lib.AppIconManager.getTagName(application, componentUrl);\n        let comp = Aventus.WebComponentInstance.create(tagName);\n        if (!comp || !this.applications[comp.$type]) {\n            return;\n        }\n        let allHidden = true;\n        let isFirst = false;\n        for (let nb in this.applications[comp.$type]) {\n            if (!this.applications[comp.$type][nb].is_hidden) {\n                allHidden = false;\n            }\n            if (this.activableOrder[0] == this.applications[comp.$type][nb]) {\n                isFirst = true;\n            }\n            else if (this.activableOrder[0] instanceof System.BottomBar && this.activableOrder[1] == this.applications[comp.$type][nb]) {\n                isFirst = true;\n            }\n        }\n        if (allHidden) {\n            for (let nb in this.applications[comp.$type]) {\n                this.applications[comp.$type][nb].show();\n                this.setElementToActive(this.applications[comp.$type][nb]);\n            }\n        }\n        else {\n            if (isFirst) {\n                for (let nb in this.applications[comp.$type]) {\n                    this.applications[comp.$type][nb].hide();\n                }\n            }\n            else {\n                for (let nb in this.applications[comp.$type]) {\n                    this.setElementToActive(this.applications[comp.$type][nb]);\n                }\n            }\n        }\n    }\n    async recreateApplications(applications) {\n        if (!applications) {\n            return;\n        }\n        for (let application of applications) {\n            this.recreateApplication(application);\n        }\n    }\n    async recreateApplication(application) {\n        let applicationName = application.applicationName;\n        if (!applicationName) {\n            return;\n        }\n        let appName = applicationName?.split(\".\")[0];\n        if (!(await can(new Permissions.ApplicationPermissionQuery(Permissions.ApplicationPermission.AllowAccess, appName)))) {\n            let notif = new Components.Notification();\n            notif.subject = \"Erreur\";\n            notif.innerHTML = \"Vous n'êtes pas autorisé à ouvrir l'application \" + appName;\n            System.Os.instance.notify(notif);\n            return;\n        }\n        await this.loadApp(appName);\n        let comp = Aventus.WebComponentInstance.create(applicationName);\n        if (comp) {\n            if (!this.applications[applicationName]) {\n                this.applications[applicationName] = {};\n            }\n            let i = application.number;\n            comp.init({\n                applicationNumber: i,\n                desktopId: this.desktop_id,\n                desktop: this\n            });\n            comp.focus();\n            comp.is_hidden = application.isHidden;\n            this.appContainer.appendChild(comp);\n            await comp.setHistory(System.ApplicationHistory.fromText(comp.navigator, application.history));\n            this.applications[comp.$type][i] = comp;\n            this.manageAppBottomBar(comp.$type);\n        }\n    }\n    removeApp(application) {\n        const appNumber = application.options?.applicationNumber ?? -1;\n        const type = application.$type;\n        if (this.applications[type]) {\n            delete this.applications[type][appNumber];\n            if (Object.keys(this.applications[type]).length == 0) {\n                delete this.applications[type];\n            }\n        }\n        this.manageAppBottomBar(type);\n    }\n    manageAppBottomBar(type) {\n        let splitted = type.split(\".\");\n        let current = window;\n        for (let part of splitted) {\n            current = current[part];\n        }\n        if (current && current.prototype instanceof Aventus.WebComponent) {\n            let icon = Lib.AppIconManager.getIcon(current.Tag);\n            if (!icon) {\n                return;\n            }\n            const appContainer = this.bottomBar.applicationsContainer;\n            if (!this.applications[type] || Object.keys(this.applications[type]).length == 0) {\n                let children = Array.from(appContainer.children);\n                for (let child of children) {\n                    if (child instanceof icon) {\n                        child.is_open = false;\n                        if (child.classList.contains(\"remove-close\")) {\n                            child.remove();\n                        }\n                    }\n                }\n            }\n            else {\n                let children = Array.from(appContainer.children);\n                let found = false;\n                for (let child of children) {\n                    if (child instanceof icon) {\n                        child.is_open = true;\n                        found = true;\n                    }\n                }\n                if (found) {\n                    return;\n                }\n                let iconTemp = new icon();\n                iconTemp.is_open = true;\n                iconTemp.classList.add(\"remove-close\");\n                appContainer.append(iconTemp);\n            }\n        }\n    }\n    showPreviewPosition(location) {\n        if (location.length == 0) {\n            if (this.showPreviewPositionTimeout !== undefined)\n                clearTimeout(this.showPreviewPositionTimeout);\n            this.previewAutoLayout.style.display = '';\n            return;\n        }\n        let w, h, t, l = '';\n        let aw, ah, at, al = '';\n        if (location.includes(\"left\")) {\n            w = '50%';\n            l = '0';\n            h = '100%';\n            t = '0';\n            aw = '0';\n            ah = '0';\n            at = '0';\n            al = '0';\n            if (location.includes(\"top\")) {\n                h = '50%';\n            }\n            else if (location.includes(\"bottom\")) {\n                h = '50%';\n                t = '50%';\n                at = '100%';\n            }\n        }\n        else if (location.includes(\"right\")) {\n            w = '50%';\n            l = '50%';\n            h = '100%';\n            t = '0';\n            aw = '0';\n            ah = '0';\n            at = '0';\n            al = '100%';\n            if (location.includes(\"top\")) {\n                h = '50%';\n            }\n            else if (location.includes(\"bottom\")) {\n                h = '50%';\n                t = '50%';\n                at = '100%';\n            }\n        }\n        else {\n            if (this.showPreviewPositionTimeout !== undefined)\n                clearTimeout(this.showPreviewPositionTimeout);\n            this.previewAutoLayout.style.display = '';\n            return;\n        }\n        if (this.showPreviewPositionTimeout !== undefined)\n            return;\n        if (this.previewAutoLayout.style.display == 'block') {\n            this.previewAutoLayout.style.left = l;\n            this.previewAutoLayout.style.top = t;\n            this.previewAutoLayout.style.width = w;\n            this.previewAutoLayout.style.height = h;\n        }\n        else {\n            this.waitPreviewPosition = new Promise((resolve) => {\n                this.watchPreviewTransitionResolve = resolve;\n                this.waitPreviewPosition = undefined;\n            });\n            this.previewAutoLayout.style.display = 'block';\n            this.previewAutoLayout.style.left = al;\n            this.previewAutoLayout.style.top = at;\n            this.previewAutoLayout.style.width = aw;\n            this.previewAutoLayout.style.height = ah;\n            this.showPreviewPositionTimeout = setTimeout(() => {\n                this.showPreviewPositionTimeout = undefined;\n                this.previewAutoLayout.style.left = l;\n                this.previewAutoLayout.style.top = t;\n                this.previewAutoLayout.style.width = w;\n                this.previewAutoLayout.style.height = h;\n            }, 100);\n        }\n    }\n    watchPreviewTransition() {\n        this.previewAutoLayout.addEventListener('transitionend', () => {\n            if (this.watchPreviewTransitionResolve) {\n                this.watchPreviewTransitionResolve();\n                this.watchPreviewTransitionResolve = undefined;\n            }\n        });\n    }\n    async getPreviewPosition() {\n        if (this.previewAutoLayout.style.display == 'block') {\n            if (this.waitPreviewPosition) {\n                await this.waitPreviewPosition;\n            }\n            const result = {\n                w: this.previewAutoLayout.offsetWidth,\n                h: this.previewAutoLayout.offsetHeight,\n                t: this.previewAutoLayout.offsetTop,\n                l: this.previewAutoLayout.offsetLeft\n            };\n            this.previewAutoLayout.style.display = '';\n            return result;\n        }\n        return null;\n    }\n    calculateIconSize() {\n        let type = Lib.Platform.device;\n        let iconSize = 75;\n        if (type == \"pc\") {\n            iconSize = this.data.Configuration.SizeDesktop;\n        }\n        else if (type == \"tablet\") {\n            iconSize = this.data.Configuration.SizeTablet;\n        }\n        else if (type == \"mobile\") {\n            iconSize = this.data.Configuration.SizeMobile;\n        }\n        this.setIconSize(iconSize);\n    }\n    setIconSize(size) {\n        this._iconSize = size;\n        this.pageCaseEl.case_height = size;\n        this.pageCaseEl.case_width = size;\n    }\n    setAppPositionTemp(shadow, x, y) {\n        let caseEl = this.pageCaseEl.shadowRoot.elementFromPoint(x, y);\n        if (caseEl && this.pageCaseEl.shadowRoot.contains(caseEl)) {\n            let pageCase = caseEl instanceof Components.PageCaseSlot ? caseEl : Aventus.ElementExtension.findParentByType(caseEl, Components.PageCaseSlot);\n            if (this.oldActiveCase != caseEl) {\n                this.oldActiveCase?.classList.remove(\"active\");\n                if (pageCase) {\n                    if (this.pageCaseEl.getElementAt(pageCase.no) == null) {\n                        this.oldActiveCase = pageCase;\n                        pageCase.classList.add(\"active\");\n                        shadow.style.width = this.iconSize + 'px';\n                        shadow.style.height = this.iconSize + 'px';\n                    }\n                }\n                else {\n                    this.oldActiveCase = undefined;\n                }\n            }\n        }\n        return this.oldActiveCase ? true : false;\n    }\n    clearAppPositionTemp() {\n        this.oldActiveCase?.classList.remove(\"active\");\n    }\n    async setAppPosition(icon, x, y) {\n        this.setAppPositionTemp(icon, x, y);\n        if (this.oldActiveCase) {\n            let no = this.oldActiveCase.no;\n            icon.position = no;\n            this.pageCaseEl.appendChild(icon);\n            this.pageCaseEl.calculateGrid();\n            let desktopIcon = new Data.DesktopAppIcon();\n            desktopIcon.DesktopId = this.desktop_id;\n            desktopIcon.Position = no;\n            desktopIcon.IconTag = icon.tag;\n            desktopIcon.Location = Data.DesktopLocation.Desktop;\n            desktopIcon.Id = icon.iconId;\n            this.oldActiveCase?.classList.remove(\"active\");\n            this.oldActiveCase = undefined;\n            let result = await new Websocket.Routes.DesktopRouter().SetDesktopIcon({\n                icon: desktopIcon\n            });\n            if (result.success && result.result) {\n                icon.iconId = result.result.Id;\n                icon.can_remove = true;\n            }\n        }\n    }\n    async removeAppPosition(icon, x, y) {\n        let caseEl = this.pageCaseEl.shadowRoot.elementFromPoint(x, y);\n        if (caseEl && this.pageCaseEl.shadowRoot.contains(caseEl)) {\n            let desktopIcon = new Data.DesktopAppIcon();\n            desktopIcon.Id = icon.iconId;\n            let result = await new Websocket.Routes.DesktopRouter().RemoveDesktopIcon({\n                icon: desktopIcon\n            });\n            if (result.success) {\n                this.pageCaseEl.removeElementAt(icon.position);\n            }\n        }\n    }\n    onMoveApplication(state, slugs) {\n        if (!this.is_active) {\n            return;\n        }\n        if (state instanceof State.MoveApplication) {\n            state.registerProvider(this);\n            this.pressManagerStopMoveApp?.destroy();\n            this.pressManagerStopMoveApp = new Aventus.PressManager({\n                element: this,\n                onPress: () => {\n                    state.resetState();\n                }\n            });\n        }\n    }\n    onStopMovingApplication(state, nextState, slugs) {\n        if (!this.is_active) {\n            return;\n        }\n        this.oldActiveCase?.classList.remove(\"active\");\n        this.oldActiveCase = undefined;\n        this.pressManagerStopMoveApp?.destroy();\n    }\n    watchDevice() {\n        Lib.Platform.onScreenChange.add((type) => {\n            this.calculateIconSize();\n        });\n    }\n    async applyDataChange() {\n        this.style.backgroundImage = 'url(\"' + this.data.Configuration.Background.Uri + '\")';\n        this.style.backgroundColor = this.data.Configuration.BackgroundColor ?? '';\n        this.background_size = Data.BackgroundSize[this.data.Configuration.BackgroundSize];\n        this.calculateIconSize();\n    }\n    async loadData() {\n        let data = await RAM.DesktopRAM.getInstance().getById(this.desktop_id);\n        if (data) {\n            this.data = data;\n            this.applyDataChange();\n            if (this.data.Configuration.SyncDesktop) {\n                this.recreateApplications(this.data.Applications);\n            }\n            else {\n                this.recreateApplications(Lib.ApplicationManager.getOpenApps(data.Id));\n            }\n            for (let icon of data.Icons) {\n                let el = Aventus.WebComponentInstance.create(icon.IconTag);\n                if (el) {\n                    el.iconId = icon.Id;\n                    el.position = icon.Position;\n                    el.can_remove = true;\n                    if (icon.Location == Data.DesktopLocation.Desktop) {\n                        this.pageCaseEl.appendChild(el);\n                    }\n                    else if (icon.Location == Data.DesktopLocation.BottomBar) {\n                        this.bottomBar.setApplication(el);\n                    }\n                }\n            }\n            this.pageCaseEl.calculateGrid();\n            this.watchDevice();\n            data.onUpdate(() => {\n                this.applyDataChange();\n            });\n        }\n    }\n    setElementToActive(el) {\n        let index = this.activableOrder.indexOf(el);\n        if (index != -1) {\n            this.activableOrder.splice(index, 1);\n        }\n        this.activableOrder.splice(0, 0, el);\n        this.applyActiveToElement();\n    }\n    removeElementFromActive(el) {\n        let index = this.activableOrder.indexOf(el);\n        if (index != -1) {\n            this.activableOrder.splice(index, 1);\n        }\n        this.applyActiveToElement();\n    }\n    applyActiveToElement() {\n        let total = 501 + this.activableOrder.length;\n        let first = true;\n        for (let el of this.activableOrder) {\n            if (first) {\n                first = false;\n                el.is_desktop_active = true;\n            }\n            else {\n                el.is_desktop_active = false;\n            }\n            el.style.zIndex = total + '';\n            total--;\n        }\n    }\n    addDebug() {\n        const debugConsole = this.debugEl;\n        // Function to append messages to the console\n        function appendToConsole(message, type = 'log') {\n            const logEntry = document.createElement('div');\n            logEntry.textContent = `[${(new Date()).getSeconds()} ${type.toUpperCase()}] ${message}`;\n            debugConsole.appendChild(logEntry);\n            debugConsole.scrollTop = debugConsole.scrollHeight; // Auto-scroll to the bottom\n        }\n        // Override console.log\n        const originalLog = console.log;\n        console.log = function (...args) {\n            originalLog.apply(console, args); // Call the original console.log\n            for (let i = 0; i < args.length; i++) {\n                if (typeof args[i] != 'string')\n                    args[i] = JSON.stringify(args[i]);\n            }\n            appendToConsole(args.join(' '), 'log');\n        };\n        // Override console.error\n        const originalError = console.error;\n        console.error = function (...args) {\n            originalError.apply(console, args); // Call the original console.error\n            appendToConsole(args.join(' '), 'error');\n        };\n        // Override console.warn\n        const originalWarn = console.warn;\n        console.warn = function (...args) {\n            originalWarn.apply(console, args); // Call the original console.warn\n            appendToConsole(args.join(' '), 'warn');\n        };\n    }\n    postCreation() {\n        this.watchPreviewTransition();\n        this.loadData();\n        // this.addDebug();\n    }\n}\nSystem.Desktop.Namespace=`Core.System`;\nSystem.Desktop.Tag=`rk-desktop`;\n_.System.Desktop=System.Desktop;\nif(!window.customElements.get('rk-desktop')){window.customElements.define('rk-desktop', System.Desktop);Aventus.WebComponentInstance.registerDefinition(System.Desktop);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.IContextMenu","isStrong":true},{"fullName":"Core.State.MoveApplicationProvider","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Data.BackgroundSize","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.System.BottomBar","isStrong":false},{"fullName":"Core.Components.PageCase","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Core.Data.DesktopData","isStrong":false},{"fullName":"Core.System.IDesktopActivable","isStrong":false},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"Core.Lib.Platform","isStrong":false},{"fullName":"Core.Addon","isStrong":false},{"fullName":"Core.RAM.ApplicationRAM","isStrong":false},{"fullName":"Aventus.ResourceLoader","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Core.Permissions.ApplicationPermissionQuery","isStrong":false},{"fullName":"Core.Permissions.ApplicationPermission","isStrong":false},{"fullName":"Core.Components.Notification","isStrong":false},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"Core.Lib.AppIconManager","isStrong":false},{"fullName":"Aventus.WebComponentInstance","isStrong":false},{"fullName":"Core.Data.ApplicationOpen","isStrong":false},{"fullName":"Core.System.ApplicationHistory","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"t","isStrong":false},{"fullName":"PromiseLike","isStrong":false},{"fullName":"Core.Components.PageCaseSlot","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false},{"fullName":"Aventus.ElementExtension","isStrong":false},{"fullName":"Core.Data.DesktopAppIcon","isStrong":false},{"fullName":"Core.Data.DesktopLocation","isStrong":false},{"fullName":"Core.Websocket.Routes.DesktopRouter","isStrong":false},{"fullName":"StateActive","isStrong":false},{"fullName":"Core.State.MoveApplication","isStrong":false},{"fullName":"Core.State.DesktopStateManager","isStrong":false},{"fullName":"Aventus.StateSlug","isStrong":false},{"fullName":"StateInactive","isStrong":false},{"fullName":"Core.RAM.DesktopRAM","isStrong":false},{"fullName":"Core.Lib.ApplicationManager","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"PageCase","isStrong":false},{"fullName":"BottomBar","isStrong":false}],"fullName":"Core.System.Desktop","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-desktop"},{"code":"Lib.PWA=class PWA {\n    static get isAvailable() {\n        if (window['deferredPrompt']) {\n            return true;\n        }\n        return false;\n    }\n    static get isAvailableIOS() {\n        return Lib.Platform.isiOS && !Lib.Platform.isStandalone;\n    }\n    static e;\n    static isInit = false;\n    static startInstall;\n    static onInit = new Aventus.Callback();\n    static onDownloading = new Aventus.Callback();\n    static onDownloaded = new Aventus.Callback();\n    static async init() {\n        if (this.isInit) {\n            return;\n        }\n        if (!this.e && Lib.PWA.isAvailable) {\n            this.e = window['deferredPrompt'];\n            let result = this.onInit.trigger([]);\n            this.isInit = true;\n        }\n        else if (Lib.PWA.isAvailableIOS) {\n            let result = this.onInit.trigger([]);\n            this.isInit = true;\n        }\n        if (this.isInit) {\n            window.addEventListener('appinstalled', async (evt) => {\n                let now = new Date();\n                let start = this.startInstall ?? new Date();\n                let diffMs = now.getTime() - start.getTime();\n                if (diffMs < 3000) {\n                    await Aventus.sleep(3000 - diffMs);\n                }\n                this.onDownloaded.trigger([]);\n            });\n        }\n    }\n    static addOnInit(cb) {\n        if (this.isInit) {\n            cb();\n        }\n        else {\n            this.onInit.add(cb);\n        }\n    }\n    static async download() {\n        if (this.isAvailable && this.e) {\n            this.e.prompt();\n            const choiceResult = await this.e.userChoice;\n            if (choiceResult.outcome === 'accepted') {\n                this.startInstall = new Date();\n                this.onDownloading.trigger([]);\n            }\n        }\n        else if (this.isAvailableIOS) {\n            let pwaios = new Components.PwaPromptIos();\n            document.body.appendChild(pwaios);\n        }\n    }\n}\nLib.PWA.Namespace=`Core.Lib`;\r\n_.Lib.PWA=Lib.PWA;\r\n","dependances":[{"fullName":"Core.Lib.Platform","isStrong":false},{"fullName":"Core.Lib.BeforeInstallPromptEvent","isStrong":true},{"fullName":"Date","isStrong":true},{"fullName":"Aventus.Callback","isStrong":true},{"fullName":"Promise","isStrong":true},{"fullName":"Core.Lib.PWA","isStrong":false},{"fullName":"Aventus.sleep","isStrong":false},{"fullName":"Core.Components.PwaPromptIos","isStrong":false}],"fullName":"Core.Lib.PWA","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.PwaButton = class PwaButton extends Aventus.WebComponent {\n    get 'visible'() { return this.getBoolAttr('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\rget 'downloading'() { return this.getBoolAttr('downloading') }\n    set 'downloading'(val) { this.setBoolAttr('downloading', val) }\r    static __style = `:host{align-items:center;background-color:var(--darker);border-radius:var(--border-radius-sm);box-shadow:var(--elevation-2);display:none;height:30px;justify-content:center;padding:5px;width:30px}:host .download{display:inline-block}:host .sync{display:none}:host .rotate{animation-name:rotate;animation-duration:1.5s;animation-iteration-count:infinite;animation-timing-function:linear;animation-direction:reverse}:host([visible]){display:flex !important}:host([downloading]) .download{display:none}:host([downloading]) .sync{display:inline-block}@keyframes rotate{0%{transform:rotate(0)}50%{transform:rotate(180deg)}100%{transform:rotate(360deg)}}`;\n    __getStatic() {\n        return PwaButton;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PwaButton.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<mi-icon icon=\"download\" class=\"download\"></mi-icon><mi-icon icon=\"sync\" class=\"sync rotate\"></mi-icon><slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"PwaButton\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('visible')) { this.attributeChangedCallback('visible', false, false); }\rif(!this.hasAttribute('downloading')) { this.attributeChangedCallback('downloading', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('visible');\rthis.__upgradeProperty('downloading');\r }\n    __listBoolProps() { return [\"visible\",\"downloading\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    async init() {\n        Lib.PWA.addOnInit(async () => {\n            this.visible = true;\n            new Aventus.PressManager({\n                element: this,\n                onPress: () => {\n                    Lib.PWA.download();\n                }\n            });\n        });\n        Lib.PWA.onDownloading.add(async () => {\n            this.downloading = true;\n        });\n        Lib.PWA.onDownloaded.add(async () => {\n            this.remove();\n        });\n    }\n    postCreation() {\n        this.classList.add(\"touch\");\n        this.init();\n    }\n}\nSystem.PwaButton.Namespace=`Core.System`;\nSystem.PwaButton.Tag=`rk-pwa-button`;\n_.System.PwaButton=System.PwaButton;\nif(!window.customElements.get('rk-pwa-button')){window.customElements.define('rk-pwa-button', System.PwaButton);Aventus.WebComponentInstance.registerDefinition(System.PwaButton);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Lib.PWA","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.System.PwaButton","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-pwa-button"},{"code":"System.Os = class Os extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"desktop_list\", \"show_application_list\", \"active_desktop\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'loading'() { return this.getBoolAttr('loading') }\n    set 'loading'(val) { this.setBoolAttr('loading', val) }\rget 'ready'() { return this.getBoolAttr('ready') }\n    set 'ready'(val) { this.setBoolAttr('ready', val) }\rget 'no_connection'() { return this.getBoolAttr('no_connection') }\n    set 'no_connection'(val) { this.setBoolAttr('no_connection', val) }\r    get 'desktop_list'() { return this.getBoolProp('desktop_list') }\n    set 'desktop_list'(val) { this.setBoolAttr('desktop_list', val) }\rget 'show_application_list'() { return this.getBoolProp('show_application_list') }\n    set 'show_application_list'(val) { this.setBoolAttr('show_application_list', val) }\rget 'active_desktop'() { return this.getNumberProp('active_desktop') }\n    set 'active_desktop'(val) { this.setNumberAttr('active_desktop', val) }\r    get 'desktops'() {\n\t\t\t\t\t\treturn this.__watch[\"desktops\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'desktops'(val) {\n\t\t\t\t\t\tthis.__watch[\"desktops\"] = val;\n\t\t\t\t\t}\r    static instance;\n    static get version() {\n        return coreVersion;\n    }\n    activeDesktopEl;\n    get activeDesktop() {\n        return this.activeDesktopEl;\n    }\n    contextMenuCst = Components.ContextMenu;\n    _appInstallPanel;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"desktops\");\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"desktop_list\", ((target) => {\n    target.onShowDesktopList();\n}));\rthis.__addPropertyActions(\"show_application_list\", ((target) => {\n    if (target.appList)\n        target.appList.show = target.show_application_list;\n    for (let desktop of target.desktopsEl) {\n        desktop.show_application_list = target.show_application_list;\n    }\n}));\rthis.__addPropertyActions(\"active_desktop\", ((target) => {\n    target.onActiveDesktop();\n}));\r }\n    static __style = `:host{--_active-desktop: var(_active-desktop, 0)}:host{height:100%;position:relative;width:100%;z-index:1}:host .desktop-container{display:flex;height:100%;position:relative;width:100%;z-index:1}:host .desktop-container .desktop-case{flex-shrink:0;height:100%;position:relative;width:100%}:host .desktop-container .desktop-case .delete-desktop{--img-stroke-color: var(--red);background-color:var(--lighter-active);border-radius:var(--border-radius-round);cursor:pointer;display:none;height:40px;position:absolute;right:5px;top:5px;width:40px;z-index:5556}:host .desktop-container .desktop-case .desktop-hider{display:none;inset:0;position:absolute;z-index:5555}:host .desktop-container .desktop-case:first-child{margin-left:calc(var(--_active-desktop)*-100%)}:host .add-desktop{--img-stroke-color: white;bottom:30px;display:none;height:50px;min-width:auto;position:absolute;right:10px;z-index:6}:host rk-loading{opacity:0;visibility:hidden}:host .background{background-color:#08162e;background-image:url('data:image/svg+xml;utf8,<svg version=\"1.1\" viewBox=\"0 0 65.98 57.373\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"%23acf4d6\"><path d=\"M 33.949 5.731 L 22.7 5.731 L 22.7 0.001 L 33.788 0.001 C 45.619 0.001 46.363 17.934 36.124 20.216 C 35.379 20.428 34.637 20.48 33.788 20.48 L 28.483 20.48 L 28.483 20.534 L 28.483 34.433 L 22.7 34.433 L 22.7 14.697 L 28.483 20.534 L 42.491 34.433 L 50.342 34.433 L 30.605 14.697 L 33.949 14.697 C 38.883 14.697 38.883 5.731 33.949 5.731 Z\" style=\"\" /></g><g fill=\"%23FFF\"><path d=\"M 7.8 53.573 L 4.94 48.993 L 3.22 48.993 L 3.22 53.573 L 0 53.573 L 0 39.573 L 4.98 39.573 C 8.12 39.573 10.2 41.473 10.2 44.393 C 10.2 46.253 9.32 47.653 7.84 48.373 L 11.2 53.573 L 7.8 53.573 Z M 3.22 42.533 L 3.22 46.253 L 4.78 46.253 C 6.08 46.253 6.98 45.793 6.98 44.393 C 6.98 43.013 6.08 42.533 4.78 42.533 L 3.22 42.533 Z M 20.3 43.173 L 23.46 43.173 L 23.46 53.573 L 20.3 53.573 L 20.3 52.533 C 20.16 52.893 19.22 53.773 17.62 53.773 C 15.24 53.773 12.5 52.073 12.5 48.353 C 12.5 44.773 15.24 42.993 17.62 42.993 C 19.22 42.993 20.16 43.913 20.3 44.133 L 20.3 43.173 Z M 18.08 50.993 C 19.38 50.993 20.44 50.093 20.44 48.353 C 20.44 46.673 19.38 45.773 18.08 45.773 C 16.72 45.773 15.56 46.693 15.56 48.353 C 15.56 50.073 16.72 50.993 18.08 50.993 Z M 33.94 43.133 L 37.08 43.133 L 30.72 57.373 L 27.56 57.373 L 29.48 53.213 L 24.98 43.133 L 28.12 43.133 L 31.04 49.813 L 33.94 43.133 Z M 42.58 53.733 C 40.64 53.733 38.66 52.433 38.66 49.133 L 38.66 43.173 L 41.82 43.173 L 41.82 48.913 C 41.82 50.493 42.36 50.993 43.36 50.993 C 44.78 50.993 45.6 49.613 45.8 49.013 L 45.8 43.173 L 48.96 43.173 L 48.96 53.573 L 45.8 53.573 L 45.8 51.773 C 45.6 52.273 44.54 53.733 42.58 53.733 Z M 58.2 53.573 L 54.82 49.533 L 54.16 50.233 L 54.16 53.573 L 51 53.573 L 51 49.793 L 51 39.433 L 54.16 39.433 L 54.16 46.373 L 57.1 43.173 L 60.88 43.173 L 56.76 47.513 L 61.8 53.573 L 58.2 53.573 Z M 65.98 39.433 L 65.98 42.093 L 62.82 42.093 L 62.82 39.433 L 65.98 39.433 Z M 65.98 43.173 L 65.98 53.573 L 62.82 53.573 L 62.82 43.173 L 65.98 43.173 Z\" /></g></svg>');background-position:center center;background-repeat:no-repeat;background-size:25% 25%;filter:brightness(0.8);inset:-20px;position:absolute;z-index:0}:host rk-notification-manager{bottom:60px}:host .no-connection{align-items:center;animation-duration:2s;animation-iteration-count:infinite;animation-name:blink;background-color:var(--warning);border-radius:var(--border-radius-sm);box-shadow:var(--elevation-3);color:var(--text-color-warning);display:none;font-size:var(--font-size-md);gap:10px;padding:5px 15px;position:absolute;right:15px;top:15px;z-index:9999999}:host(:not([ready])) *{opacity:0;visibility:hidden}:host(:not([loading])) rk-loading{transition:opacity 1s var(--bezier-curve),visibility 1s var(--bezier-curve)}:host([loading]) rk-loading{opacity:1;visibility:visible}:host([desktop_list]) .desktop-container{flex-wrap:wrap;height:auto;justify-content:center}:host([desktop_list]) .desktop-container .desktop-case{--nb: 3;aspect-ratio:var(--ration);box-shadow:var(--elevation-10);height:max-content;margin:15px !important;overflow:hidden;width:calc(100%/var(--nb) - 30px)}:host([desktop_list]) .desktop-container .desktop-case .desktop-hider,:host([desktop_list]) .desktop-container .desktop-case .delete-desktop{display:block}:host([desktop_list]) .desktop-container .desktop-case rk-desktop{height:calc(100%*var(--nb));margin-left:calc(-50%*(var(--nb) - 1));top:calc(-50%*(var(--nb) - 1));transform:scale(calc(1 / var(--nb)));width:calc(100%*var(--nb))}:host([desktop_list]) .desktop-container .desktop-case.active{border:solid 5px var(--blue);border-radius:var(--border-radius-sm)}:host([desktop_list]) .add-desktop{display:block}:host([no_connection]) .no-connection{display:flex}@keyframes blink{0%{background-color:var(--warning);color:var(--text-color-warning)}1%{background-color:var(--text-color-warning);color:var(--warning)}50%{background-color:var(--text-color-warning);color:var(--warning)}51%{background-color:var(--warning);color:var(--text-color-warning)}100%{background-color:var(--warning);color:var(--text-color-warning)}}`;\n    constructor() {\r            super();\r            System.Os.instance = this;\r            Lib.ApplicationManager.reloadData();\rthis.desktopMoveLeft=this.desktopMoveLeft.bind(this)\rthis.desktopMoveRight=this.desktopMoveRight.bind(this)\rthis.desktopMoveValidate=this.desktopMoveValidate.bind(this)\rthis.popup=this.popup.bind(this)\rthis.alert=this.alert.bind(this)\rthis.confirm=this.confirm.bind(this) }\n    __getStatic() {\n        return Os;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Os.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"background\"></div><rk-app-list _id=\"os_0\"></rk-app-list><rk-loading text=\"Chargement du système\" background></rk-loading><rk-scrollable y_scroll=\"false\" disable _id=\"os_1\">\r    <div class=\"desktop-container\">\r        <template _id=\"os_2\"></template>\r    </div>\r</rk-scrollable><rk-button-icon class=\"add-desktop\" icon=\"/img/icons/add.svg\" color=\"blue\"></rk-button-icon><rk-notification-manager _id=\"os_6\"></rk-notification-manager><div class=\"no-connection\">\r    <mi-icon icon=\"warning\"></mi-icon>\r    <span>Hors-ligne</span>\r</div>` }\n    });\n}\n    get desktopsEl () { var list = Array.from(this.shadowRoot.querySelectorAll('[_id=\"os_5\"]')); return list; }\r    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"appList\",\n      \"ids\": [\n        \"os_0\"\n      ]\n    },\n    {\n      \"name\": \"desktopContainerScroll\",\n      \"ids\": [\n        \"os_1\"\n      ]\n    },\n    {\n      \"name\": \"notificationManager\",\n      \"ids\": [\n        \"os_6\"\n      ]\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(` \r            <div class=\"desktop-case\">\r                <rk-img class=\"delete-desktop\" src=\"/img/icons/close.svg\" _id=\"os_3\"></rk-img>\r                <div class=\"desktop-hider\" _id=\"os_4\"></div>\r                <rk-desktop _id=\"os_5\"></rk-desktop>\r            </div>\r        `);\rtempl0.setActions({\n  \"content\": {\n    \"os_3°data-id\": {\n      \"fct\": (c) => `${c.print(c.comp.__1ce90dbdb85fa41f02d47acb05511f03method2(c.data.desktop))}`,\n      \"once\": true\n    },\n    \"os_4°index\": {\n      \"fct\": (c) => `${c.print(c.comp.__1ce90dbdb85fa41f02d47acb05511f03method3(c.data.index))}`,\n      \"once\": true\n    },\n    \"os_5°desktop_id\": {\n      \"fct\": (c) => `${c.print(c.comp.__1ce90dbdb85fa41f02d47acb05511f03method2(c.data.desktop))}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"os_3\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.deleteDesktop(e, pressInstance); }\n    },\n    {\n      \"id\": \"os_4\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectDesktop(e, pressInstance); }\n    }\n  ],\n  \"contextEdits\": [\n    {\n      \"fct\": (c) => c.comp.__1ce90dbdb85fa41f02d47acb05511f03method1(c.data.index)\n    }\n  ]\n});\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'os_2',\n                    template: templ0,\n                simple:{data: \"this.desktops\",index:\"index\"}\r});\r }\n    getClassName() {\n        return \"Os\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('loading')) { this.attributeChangedCallback('loading', false, false); }\rif(!this.hasAttribute('ready')) { this.attributeChangedCallback('ready', false, false); }\rif(!this.hasAttribute('no_connection')) { this.attributeChangedCallback('no_connection', false, false); }\rif(!this.hasAttribute('desktop_list')) { this.attributeChangedCallback('desktop_list', false, false); }\rif(!this.hasAttribute('show_application_list')) { this.attributeChangedCallback('show_application_list', false, false); }\rif(!this.hasAttribute('active_desktop')){ this['active_desktop'] = 0; }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"desktops\"] = [];\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('activeDesktop');\rthis.__upgradeProperty('loading');\rthis.__upgradeProperty('ready');\rthis.__upgradeProperty('no_connection');\rthis.__upgradeProperty('desktop_list');\rthis.__upgradeProperty('show_application_list');\rthis.__upgradeProperty('active_desktop');\rthis.__correctGetter('desktops');\r }\n    __listBoolProps() { return [\"loading\",\"ready\",\"no_connection\",\"desktop_list\",\"show_application_list\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    onActiveDesktop() {\n        this.style.setProperty(\"--_active-desktop\", this.active_desktop + \"\");\n        if (this.activeDesktopEl) {\n            this.activeDesktopEl.is_active = false;\n            this.activeDesktopEl.parentElement?.classList.remove(\"active\");\n        }\n        this.activeDesktopEl = this.desktopsEl[this.active_desktop];\n        if (this.activeDesktopEl) {\n            this.activeDesktopEl.is_active = true;\n            this.activeDesktopEl.parentElement?.classList.add(\"active\");\n        }\n    }\n    desktopMoveLeft() {\n        if (this.active_desktop - 1 < 0) {\n            this.active_desktop = this.desktops.length - 1;\n        }\n        else {\n            this.active_desktop--;\n        }\n    }\n    desktopMoveRight() {\n        if (this.active_desktop + 1 == this.desktops.length) {\n            this.active_desktop = 0;\n        }\n        else {\n            this.active_desktop++;\n        }\n    }\n    desktopMoveValidate() {\n        this.desktop_list = false;\n    }\n    onShowDesktopList() {\n        if (this.isReady) {\n            this.desktopContainerScroll.y_scroll = this.desktop_list;\n            this.desktopContainerScroll.disable = !this.desktop_list;\n        }\n        State.DesktopStateManager.getInstance().setState(\"/\");\n        if (this.desktop_list) {\n            Lib.ShortcutManager.subscribe([Lib.SpecialTouch.ArrowRight], this.desktopMoveRight);\n            Lib.ShortcutManager.subscribe([Lib.SpecialTouch.ArrowLeft], this.desktopMoveLeft);\n            Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Enter], this.desktopMoveValidate);\n            Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Escape], this.desktopMoveValidate);\n        }\n        else {\n            Lib.ShortcutManager.unsubscribe([Lib.SpecialTouch.ArrowRight], this.desktopMoveRight);\n            Lib.ShortcutManager.unsubscribe([Lib.SpecialTouch.ArrowLeft], this.desktopMoveLeft);\n            Lib.ShortcutManager.unsubscribe([Lib.SpecialTouch.Enter], this.desktopMoveValidate);\n            Lib.ShortcutManager.unsubscribe([Lib.SpecialTouch.Escape], this.desktopMoveValidate);\n        }\n    }\n    addSwitchDesktop() {\n        Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Shift, Lib.SpecialTouch.Tab], () => {\n            this.desktop_list = true;\n        });\n    }\n    async deleteDesktop(e, instance) {\n        if (this.desktops.length <= 1) {\n            await this.alert({\n                title: \"Impossible de supprimer le bureau\",\n                description: \"Il vous faut au minimum un bureau actif\"\n            });\n        }\n        else if (await this.confirm({\n            title: \"Suppression d'un bureau\",\n            description: \"Etes-vous sûr de vouloir supprimer ce bureau?\"\n        })) {\n            let id = Number(instance.getElement().dataset.id);\n            await RAM.DesktopRAM.getInstance().deleteById(id);\n        }\n    }\n    async syncDesktopData() {\n        this.desktops = await RAM.DesktopRAM.getInstance().getList();\n        this.onActiveDesktop();\n        RAM.DesktopRAM.getInstance().onDeleted((el) => {\n            for (let i = 0; i < this.desktops.length; i++) {\n                if (this.desktops[i].Id == el.Id) {\n                    this.desktops.splice(i, 1);\n                    if (this.active_desktop == i) {\n                        this.active_desktop = 0;\n                        if (i == 0) {\n                            this.onActiveDesktop();\n                        }\n                    }\n                    else if (this.active_desktop > i) {\n                        this.active_desktop--;\n                    }\n                    return;\n                }\n            }\n        });\n        RAM.DesktopRAM.getInstance().onCreated((el) => {\n            this.desktops.push(el);\n        });\n    }\n    async systemLoading() {\n        const minDelay = 3000;\n        let start;\n        let timeout = setTimeout(() => {\n            start = new Date();\n            this.loading = true;\n        }, 200);\n        await RAM.ApplicationRAM.getInstance().getAll();\n        await this.syncDesktopData();\n        clearTimeout(timeout);\n        if (start) {\n            let now = new Date();\n            let diffMs = now.getTime() - start.getTime();\n            if (diffMs < minDelay) {\n                await Aventus.sleep(minDelay - diffMs);\n            }\n        }\n        this.loading = false;\n        this.ready = true;\n    }\n    async openUrl(application, componentUrl = \"/\", url = \"/\") {\n        this.activeDesktopEl.openUrl(application, componentUrl, url);\n    }\n    async unHideApplication(application, componentUrl = \"/\") {\n        await this.activeDesktopEl.unHideApplication(application, componentUrl);\n    }\n    notify(notification) {\n        return this.notificationManager.notify(notification);\n    }\n    rightClick() {\n        this.addEventListener(\"contextmenu\", (e) => {\n            e.preventDefault();\n            const isTouch = Lib.Pointer.isTouch(e);\n            const menu = new this.contextMenuCst();\n            menu.init(e.pageX, e.pageY, isTouch, this);\n        });\n        if (Lib.Platform.isiOS) {\n            let startX;\n            let startY;\n            let lastX;\n            let lastY;\n            let timeoutContext;\n            Aventus.PressManager.setGlobalConfig({\n                onEvent: (e) => {\n                    if (e.type == \"pointerdown\") {\n                        lastX = startX = e.pageX;\n                        lastY = startY = e.pageY;\n                        timeoutContext = setTimeout(() => {\n                            let diffX = startX - lastX;\n                            let diffY = startY - lastY;\n                            if (diffX * diffX + diffY * diffY < 200) {\n                                const menu = new this.contextMenuCst();\n                                menu.init(e.pageX, e.pageY, true, this);\n                            }\n                        }, 700);\n                    }\n                    else if (e.type == \"pointerup\") {\n                        clearTimeout(timeoutContext);\n                    }\n                    else if (e.type == \"pointermove\") {\n                        lastX = e.pageX;\n                        lastY = e.pageY;\n                    }\n                }\n            });\n            // new Aventus.PressManager({\n            //     element: this,\n            //     delayLongPress: 500,\n            //     onLongPress: (e) => {\n            //         const menu = new this.contextMenuCst();\n            //         menu.init(e.pageX, e.pageY, true, this);\n            //     }\n            // });\n        }\n    }\n    preventScroll() {\n        document.body.addEventListener(\"scroll\", (e) => {\n            document.body.scrollTop = 0;\n            document.body.scrollLeft = 0;\n        });\n    }\n    setContextMenu(contextMenuCst) {\n        this.contextMenuCst = contextMenuCst;\n    }\n    setDefaultContextMenu() {\n        this.contextMenuCst = Components.ContextMenu;\n    }\n    popup(p) {\n        return new Promise((resolve) => {\n            p.init((response) => {\n                resolve(response);\n            });\n            this.shadowRoot.appendChild(p);\n        });\n    }\n    async alert(info) {\n        const a = new Components.Alert();\n        a.mergeInfo(info);\n        await this.popup(a);\n    }\n    async confirm(info) {\n        const c = new Components.Confirm();\n        c.mergeInfo(info);\n        return await this.popup(c);\n    }\n    allowInstallApp() {\n        Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Control, Lib.SpecialTouch.Alt, \"i\"], () => {\n            if (this._appInstallPanel) {\n                this._appInstallPanel.remove();\n                this._appInstallPanel = undefined;\n            }\n            else {\n                let panel = new System.AppInstallPanel();\n                this._appInstallPanel = panel;\n                panel.onClose.add(() => {\n                    this._appInstallPanel = undefined;\n                });\n                this.shadowRoot.appendChild(panel);\n            }\n        });\n    }\n    selectDesktop(e, pressInstance) {\n        let el = pressInstance.getElement();\n        let index = Number(el.getAttribute(\"index\"));\n        this.active_desktop = index;\n        setTimeout(() => {\n            this.desktop_list = false;\n        }, 100);\n    }\n    addResizeObserver() {\n        new Aventus.ResizeObserver(() => {\n            this.style.setProperty(\"--ration\", Lib.Platform.getRatio(this));\n            this.style.setProperty(\"--os-width\", this.offsetWidth + 'px');\n            this.style.setProperty(\"--os-height\", this.offsetHeight + 'px');\n        }).observe(this);\n        window.visualViewport?.addEventListener('resize', () => {\n            // setTimeout(() => {\n            //     console.log(window.scrollY);\n            // }, 1000)\n            // window.scrollTo(0, 0);\n            // document.body.scrollTop = 0;\n        });\n    }\n    manageOffline() {\n        let timeout;\n        let interval;\n        let fetchNb = 0;\n        const pingIndex = async () => {\n            try {\n                // it's for server is up but you aren't connected\n                await fetch(\"/\");\n                fetchNb++;\n                if (fetchNb == 2) {\n                    window.location.reload();\n                }\n            }\n            catch (e) {\n            }\n        };\n        const startPing = () => {\n            fetchNb = 0;\n            clearInterval(interval);\n            this.no_connection = true;\n            interval = setInterval(() => {\n                pingIndex();\n            }, 5000);\n        };\n        const stopPing = () => {\n            this.no_connection = false;\n            clearInterval(interval);\n        };\n        Lib.Platform.onDisconnect.add(() => {\n            clearTimeout(timeout);\n            timeout = setTimeout(() => {\n                startPing();\n            }, 6000);\n        });\n        Lib.Platform.onReconnect.add(() => {\n            clearTimeout(timeout);\n            stopPing();\n        });\n    }\n    async startSocket() {\n        this.manageOffline();\n        AventusSharp.WebSocket.Connection.Debug = true;\n        await Websocket.MainEndPoint.getInstance().open();\n        Lib.ApplicationManager.init();\n        Lib.TransactionManager.init();\n    }\n    trapInOs() {\n        window.history.pushState({ _fileexplorer: 'back' }, document.title);\n        window.history.pushState({ _fileexplorer: 'main' }, document.title);\n        window.history.pushState({ _fileexplorer: 'forward' }, document.title);\n        window.history.back();\n        window.addEventListener('popstate', (e) => {\n            if (e.state && e.state._fileexplorer) {\n                if (e.state._fileexplorer === 'back') {\n                    window.history.forward();\n                    let element = this.activeDesktopEl.activeElement;\n                    if (element instanceof System.Application) {\n                        element.navigatePrevious();\n                    }\n                }\n                else if (e.state._fileexplorer === 'forward') {\n                    window.history.back();\n                    let element = this.activeDesktopEl.activeElement;\n                    if (element instanceof System.Application) {\n                        element.navigateNext();\n                    }\n                }\n            }\n        }, true);\n    }\n    async init() {\n        Aventus.DateConverter.converter = new Libs.DateConverter();\n        Aventus.PressManager.setGlobalConfig({\n            delayDblPress: 250,\n            delayLongPress: 700,\n            offsetDrag: 0\n        });\n        this.trapInOs();\n        this.addResizeObserver();\n        await this.startSocket();\n        Lib.Platform.init();\n        this.rightClick();\n        this.preventScroll();\n        this.addSwitchDesktop();\n        this.allowInstallApp();\n        await this.systemLoading();\n        Lib.PWA.init();\n    }\n    postCreation() {\n        super.postCreation();\n        this.init();\n    }\n    __1ce90dbdb85fa41f02d47acb05511f03method2(desktop) {\n        return desktop.Id;\n    }\n    __1ce90dbdb85fa41f02d47acb05511f03method3(index) {\n        return index;\n    }\n    __1ce90dbdb85fa41f02d47acb05511f03method1(index) {\n        return { 'desktop': this.desktops[index] };\n    }\n}\nSystem.Os.Namespace=`Core.System`;\nSystem.Os.Tag=`rk-os`;\n_.System.Os=System.Os;\nif(!window.customElements.get('rk-os')){window.customElements.define('rk-os', System.Os);Aventus.WebComponentInstance.registerDefinition(System.Os);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Data.DesktopData","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.System.AppList","isStrong":false},{"fullName":"Core.System.Desktop","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Core.Components.NotificationManager","isStrong":false},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"Core.Lib.ApplicationManager","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.State.DesktopStateManager","isStrong":false},{"fullName":"Core.Lib.ShortcutManager","isStrong":false},{"fullName":"Core.Lib.SpecialTouch","isStrong":false},{"fullName":"Event","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"Core.RAM.DesktopRAM","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"Core.RAM.ApplicationRAM","isStrong":false},{"fullName":"Aventus.sleep","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Core.Components.Notification","isStrong":false},{"fullName":"Core.Lib.Pointer","isStrong":false},{"fullName":"Core.Lib.Platform","isStrong":false},{"fullName":"Core.Components.GenericPopup","isStrong":false},{"fullName":"U","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Core.Components.PopupInfo","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"Core.Components.AlertInfo","isStrong":false},{"fullName":"Core.Components.Alert","isStrong":false},{"fullName":"Core.Components.ConfirmInfo","isStrong":false},{"fullName":"Core.Components.Confirm","isStrong":false},{"fullName":"Core.System.AppInstallPanel","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"AventusSharp.WebSocket.Connection","isStrong":false},{"fullName":"Core.Websocket.MainEndPoint","isStrong":false},{"fullName":"Core.Lib.TransactionManager","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"Aventus.DateConverter","isStrong":false},{"fullName":"Core.Libs.DateConverter","isStrong":false},{"fullName":"Core.Lib.PWA","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"AppList","isStrong":false},{"fullName":"Loading","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"Desktop","isStrong":false},{"fullName":"ButtonIcon","isStrong":false},{"fullName":"NotificationManager","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.System.Os","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-os"},{"code":"Lib.Process=class Process {\n    static async execute(component, prom) {\n        const app = component.findParentByType(System.Application);\n        if (app) {\n            return app.execute(prom);\n        }\n        else {\n            const queryResult = await prom;\n            return await this.parseErrors(queryResult);\n        }\n    }\n    static async executeWithLoading(component, prom) {\n        const app = component.findParentByType(System.Application);\n        if (app) {\n            return app.executeWithLoading(prom);\n        }\n        return this.execute(component, prom);\n    }\n    static async parseErrors(result) {\n        if (result.errors.length > 0) {\n            let msg = result.errors.map(p => p.message).join(\"<br/>\");\n            await System.Os.instance.alert({\n                title: \"Error\",\n                description: msg,\n                behind: false,\n                min_width: '300px',\n            });\n            return undefined;\n        }\n        if (result instanceof Aventus.ResultWithError)\n            return result.result;\n        return undefined;\n    }\n}\nLib.Process.Namespace=`Core.Lib`;\r\n_.Lib.Process=Lib.Process;\r\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.System.ApplicationQueryFctResult","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false}],"fullName":"Core.Lib.Process","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.AppIcon = class AppIcon extends Aventus.WebComponent {\n    get 'shaking'() { return this.getBoolAttr('shaking') }\n    set 'shaking'(val) { this.setBoolAttr('shaking', val) }\rget 'can_remove'() { return this.getBoolAttr('can_remove') }\n    set 'can_remove'(val) { this.setBoolAttr('can_remove', val) }\rget 'is_open'() { return this.getBoolAttr('is_open') }\n    set 'is_open'(val) { this.setBoolAttr('is_open', val) }\rget 'position'() { return this.getNumberAttr('position') }\n    set 'position'(val) { this.setNumberAttr('position', val) }\r    pressManager;\n    pressManagerMove;\n    dragAndDrop;\n    moveApplicationState;\n    iconId = 0;\n    static __style = `:host{align-items:center;background-color:#0c2247;border-radius:var(--border-radius-sm);box-shadow:var(--elevation-5);cursor:pointer;display:flex;height:var(--desktop-bottom-bar-element);justify-content:center;position:relative;transition:box-shadow var(--bezier-curve) .3s,transform var(--bezier-curve) .3s;width:var(--desktop-bottom-bar-element);-webkit-tap-highlight-color:rgba(0,0,0,0)}:host::after{background-color:var(--text-color);border-radius:var(--border-radius-sm);bottom:-7px;content:\"\";height:4px;opacity:0;position:absolute;transition:visibility var(--bezier-curve) .3s,opacity var(--bezier-curve) .3s;visibility:hidden;width:4px}:host .remove{background-color:var(--primary-color);border-radius:var(--border-radius-round);display:none;height:20px;position:absolute;right:-10px;top:-10px;width:20px}:host .remove rk-img{--img-stroke-color: var(--text-color);height:100%;padding:0;width:100%}:host([shaking]){animation:shake linear .4s infinite}:host([shaking][can_remove]) .remove{display:block}:host([is_open]){transform:translateY(-3px)}:host([is_open])::after{visibility:visible;opacity:1}@media screen and (min-width: 1225px){:host(:hover){box-shadow:var(--elevation-1)}}@keyframes shake{0%{transform:rotateZ(0) rotateX(-13deg)}25%{transform:rotateZ(2deg) rotateX(-13deg)}50%{transform:rotateZ(0) rotateX(-13deg)}75%{transform:rotateZ(-2deg) rotateX(-13deg)}100%{transform:rotateZ(0) rotateX(-13deg)}}`;\n    constructor() {\r            super();\r            this.classList.add(\"touch\");\rif (this.constructor == AppIcon) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return AppIcon;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(AppIcon.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"remove\" _id=\"appicon_0\"><rk-img src=\"/img/icons/close.svg\"></rk-img></div><slot></slot>` }\n    });\n}\n    __createStates() { super.__createStates(); let that = this;  this.__createStatesList(State.MoveApplication.state, State.DesktopStateManager);this.__addActiveState(State.MoveApplication.state, State.DesktopStateManager, (state, slugs) => { that.__inactiveDefaultState(State.DesktopStateManager); that.onMoveApplication(state, slugs);})\rthis.__addInactiveState(State.MoveApplication.state, State.DesktopStateManager, (state, nextState, slugs) => { that.onStopMovingApplication(state, nextState, slugs);that.__activeDefaultState(nextState, State.DesktopStateManager);})\r }\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"pressEvents\": [\n    {\n      \"id\": \"appicon_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.removeApp(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"AppIcon\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('shaking')) { this.attributeChangedCallback('shaking', false, false); }\rif(!this.hasAttribute('can_remove')) { this.attributeChangedCallback('can_remove', false, false); }\rif(!this.hasAttribute('is_open')) { this.attributeChangedCallback('is_open', false, false); }\rif(!this.hasAttribute('position')){ this['position'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('shaking');\rthis.__upgradeProperty('can_remove');\rthis.__upgradeProperty('is_open');\rthis.__upgradeProperty('position');\r }\n    __listBoolProps() { return [\"shaking\",\"can_remove\",\"is_open\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    async removeApp(e, instance) {\n        if (this.moveApplicationState) {\n            this.moveApplicationState.onRemove(this, e.pageX, e.pageY);\n        }\n    }\n    onContextMenu(contextMenu, stop) {\n        if (contextMenu.isTouch) {\n            contextMenu.addItem({\n                text: \"Organiser les applications\",\n                icon: \"/img/icons/organize-app.svg\",\n                priority: 1,\n                action: () => {\n                    new State.MoveApplication().activate(State.DesktopStateManager.getInstance());\n                }\n            });\n        }\n    }\n    defineAddons() {\n        return [];\n    }\n    componentUrl() {\n        return \"/\";\n    }\n    state() {\n        return \"/\";\n    }\n    openApp() {\n        if (this.shaking) {\n            return;\n        }\n        let cst = this.constructor;\n        let application = cst.Fullname.split(\".\")[0];\n        if (this.is_open) {\n            System.Os.instance.unHideApplication(application, this.componentUrl());\n        }\n        else {\n            System.Os.instance.openUrl(application, this.componentUrl(), this.state());\n        }\n    }\n    onMoveApplication(state, slugs) {\n        if (state instanceof State.MoveApplication) {\n            this.moveApplicationState = state;\n            this.shaking = true;\n            this.destroyPressManager();\n            this.createDragAndDrop();\n        }\n    }\n    onStopMovingApplication() {\n        this.moveApplicationState = undefined;\n        this.shaking = false;\n        this.destroyDragAndDrop();\n        this.createPressManager();\n    }\n    createPressManager() {\n        this.destroyPressManager();\n        this.pressManager = new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                this.openApp();\n            },\n            onLongPress: (e) => {\n                if (e.pointerType == \"mouse\") {\n                    new State.MoveApplication().activate(State.DesktopStateManager.getInstance());\n                }\n                else {\n                    // e.pointerType == touch | pen\n                }\n            }\n        });\n    }\n    destroyPressManager() {\n        this.pressManager?.destroy();\n        this.pressManager = undefined;\n    }\n    createDragAndDrop() {\n        let state = State.DesktopStateManager.getInstance().getState();\n        if (!(state instanceof State.MoveApplication)) {\n            return;\n        }\n        let moveApplication = state;\n        let shadow = this;\n        let startW = 0;\n        let startH = 0;\n        let baseOffsetX = 0;\n        let baseOffsetY = 0;\n        let createShadow = false;\n        let parent = this.parentNode;\n        let reset = () => {\n            parent?.appendChild(this);\n        };\n        if (this.findParentByType(System.AppList)) {\n            createShadow = true;\n        }\n        this.pressManagerMove = new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                console.log(\"open menu\");\n            }\n        });\n        this.dragAndDrop = new Aventus.DragAndDrop({\n            element: this,\n            onMove: (e, position) => {\n                moveApplication.onMove(shadow, e.pageX, e.pageY);\n            },\n            getOffsetY: () => {\n                return baseOffsetY + (startH - shadow.offsetHeight) / 2;\n            },\n            getOffsetX: () => {\n                return baseOffsetX + (startW - shadow.offsetWidth) / 2;\n            },\n            onStart: (e) => {\n                startW = this.offsetWidth;\n                startH = this.offsetHeight;\n                if (shadow == this) {\n                    let elBox = this.getBoundingClientRect();\n                    // add offset to counter the default drag&drop behaviour\n                    baseOffsetX = elBox.x - this.offsetLeft;\n                    baseOffsetY = elBox.y - this.offsetTop;\n                    document.body.appendChild(this);\n                }\n                else {\n                    State.MoveApplication.shadowIcons.push(shadow);\n                }\n                shadow.style.zIndex = '505';\n                shadow.style.opacity = '0.6';\n                shadow.style.pointerEvents = 'none';\n                shadow.style.position = 'absolute';\n                shadow.style.width = startW + 'px';\n                shadow.style.height = startH + 'px';\n            },\n            shadow: {\n                enable: createShadow,\n                transform: (el) => {\n                    shadow = el;\n                    System.Os.instance.show_application_list = false;\n                }\n            },\n            onStop: (e) => {\n                moveApplication.onDrop(shadow, e.pageX, e.pageY, reset);\n            }\n        });\n    }\n    destroyDragAndDrop() {\n        this.dragAndDrop?.destroy();\n        this.dragAndDrop = undefined;\n        this.pressManagerMove?.destroy();\n        this.pressManagerMove = undefined;\n    }\n    postCreation() {\n        Lib.AppIconManager.register(this, this.componentUrl());\n        Addon.need(this, this.defineAddons());\n        this.createPressManager();\n    }\n}\nSystem.AppIcon.Namespace=`Core.System`;\n_.System.AppIcon=System.AppIcon;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.IContextMenu","isStrong":true},{"fullName":"Core.Components.IPositionable","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Core.State.MoveApplication","isStrong":false},{"fullName":"PointerEvent","isStrong":false},{"fullName":"Core.Components.ContextMenu","isStrong":false},{"fullName":"Core.State.DesktopStateManager","isStrong":false},{"fullName":"Core.AddonsName","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false},{"fullName":"Core.System.Os","isStrong":false},{"fullName":"StateActive","isStrong":false},{"fullName":"InternalProtected","isStrong":false},{"fullName":"Aventus.StateSlug","isStrong":false},{"fullName":"StateInactive","isStrong":false},{"fullName":"Core.System.AppList","isStrong":false},{"fullName":"Core.Lib.AppIconManager","isStrong":false},{"fullName":"Core.Addon","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.System.AppIcon","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"State.MoveApplication=class MoveApplication extends Aventus.State {\n    static state = \"/application/move\";\n    static shadowIcons = [];\n    providers = [];\n    selectedProvider;\n    _lastX = 0;\n    _lastY = 0;\n    get lastX() {\n        return this._lastX;\n    }\n    get lastY() {\n        return this._lastY;\n    }\n    /**\n     * @inheritdoc\n     */\n    get name() {\n        return State.MoveApplication.state;\n    }\n    constructor() {\n        super();\n        this.resetState = this.resetState.bind(this);\n    }\n    resetState() {\n        Lib.ShortcutManager.unsubscribe([Lib.SpecialTouch.Escape], this.resetState);\n        State.DesktopStateManager.getInstance().setState(\"/\");\n    }\n    async activate(manager) {\n        let result = await super.activate(manager);\n        if (result) {\n            Lib.ShortcutManager.subscribe([Lib.SpecialTouch.Escape], this.resetState);\n        }\n        return result;\n    }\n    onActivate() {\n        for (let icon of State.MoveApplication.shadowIcons) {\n            icon.onMoveApplication(this, {});\n        }\n    }\n    onInactivate(nextState) {\n        for (let icon of State.MoveApplication.shadowIcons) {\n            icon.onStopMovingApplication();\n        }\n    }\n    registerProvider(provider) {\n        this.providers.push(provider);\n    }\n    onMove(icon, x, y) {\n        this._lastX = x;\n        this._lastY = y;\n        this.selectedProvider = undefined;\n        for (let provider of this.providers) {\n            if (provider.setAppPositionTemp(icon, x, y, this)) {\n                this.selectedProvider = provider;\n                break;\n            }\n        }\n        for (let provider of this.providers) {\n            if (provider != this.selectedProvider) {\n                provider.clearAppPositionTemp(this);\n            }\n        }\n    }\n    async onDrop(icon, x, y, reset) {\n        icon.style.width = '';\n        icon.style.height = '';\n        icon.style.top = '';\n        icon.style.left = '';\n        icon.style.zIndex = '';\n        icon.style.opacity = '';\n        icon.style.pointerEvents = '';\n        icon.style.position = '';\n        if (this.selectedProvider) {\n            await this.selectedProvider.setAppPosition(icon, x, y, this);\n        }\n        else {\n            reset();\n        }\n    }\n    onRemove(icon, x, y) {\n        for (let provider of this.providers) {\n            provider.removeAppPosition(icon, x, y, this);\n        }\n    }\n}\nState.MoveApplication.Namespace=`Core.State`;\r\n_.State.MoveApplication=State.MoveApplication;\r\n","dependances":[{"fullName":"Aventus.State","isStrong":true},{"fullName":"Aventus.IState","isStrong":true},{"fullName":"Core.State.MoveApplicationProvider","isStrong":false},{"fullName":"Core.State.MoveApplication","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Core.Lib.ShortcutManager","isStrong":false},{"fullName":"Core.Lib.SpecialTouch","isStrong":false},{"fullName":"Core.State.DesktopStateManager","isStrong":false},{"fullName":"Aventus.StateManager","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":true}],"fullName":"Core.State.MoveApplication","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"System.CoreAppIcon = class CoreAppIcon extends System.AppIcon {\n    static __style = `:host{background-color:#7a7a7a}:host rk-img{--img-stroke-color: transparent;--img-fill-color: #ffffff;flex-grow:1;max-height:100%;padding:15%}@media screen and (max-width: 768px){:host rk-img{padding:7px}}`;\n    __getStatic() {\n        return CoreAppIcon;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(CoreAppIcon.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<rk-img src=\"/img/icons/core.svg\"></rk-img>` }\n    });\n}\n    getClassName() {\n        return \"CoreAppIcon\";\n    }\n    postCreation() {\n    }\n}\nSystem.CoreAppIcon.Namespace=`Core.System`;\nSystem.CoreAppIcon.Tag=`rk-core-app-icon`;\n_.System.CoreAppIcon=System.CoreAppIcon;\nif(!window.customElements.get('rk-core-app-icon')){window.customElements.define('rk-core-app-icon', System.CoreAppIcon);Aventus.WebComponentInstance.registerDefinition(System.CoreAppIcon);}\n","dependances":[{"fullName":"Core.System.AppIcon","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Img","isStrong":false}],"fullName":"Core.System.CoreAppIcon","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-core-app-icon"},{"code":"System.AppIconInline = class AppIconInline extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"text\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'text'() { return this.getStringProp('text') }\n    set 'text'(val) { this.setStringAttr('text', val) }\r    static __style = `:host{align-items:center;display:flex;gap:10px;box-shadow:var(--elevation-3);cursor:pointer}:host .icon-container{height:30px;position:relative;width:30px}:host .icon-container .hider{inset:0;position:absolute}:host .icon-container .icon{height:100%;width:100%}:host .icon-container .icon *{box-shadow:none !important;animation:none !important;pointer-events:none}:host .text{flex-grow:1;flex-wrap:nowrap;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}`;\n    __getStatic() {\n        return AppIconInline;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(AppIconInline.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"icon-container\">\r    <div class=\"hider\"></div>\r    <div class=\"icon\" _id=\"appiconinline_0\"></div>\r</div><div class=\"text\" _id=\"appiconinline_1\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"iconEl\",\n      \"ids\": [\n        \"appiconinline_0\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"appiconinline_1°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__19c78f75be261ad427a444f38f56b227method0())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"AppIconInline\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('text')){ this['text'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('text');\r }\n    setIcon(element) {\n        this.iconEl.innerHTML = \"\";\n        this.iconEl.appendChild(element);\n    }\n    postCreation() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (this.iconEl.children.length > 0 && this.iconEl.children[0] instanceof System.AppIcon) {\n                    this.iconEl.children[0].openApp();\n                }\n            }\n        });\n    }\n    __19c78f75be261ad427a444f38f56b227method0() {\n        return this.text;\n    }\n}\nSystem.AppIconInline.Namespace=`Core.System`;\nSystem.AppIconInline.Tag=`rk-app-icon-inline`;\n_.System.AppIconInline=System.AppIconInline;\nif(!window.customElements.get('rk-app-icon-inline')){window.customElements.define('rk-app-icon-inline', System.AppIconInline);Aventus.WebComponentInstance.registerDefinition(System.AppIconInline);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Core.System.AppIconInline","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-app-icon-inline"},{"code":"System.ApplicationSidnav = class ApplicationSidnav extends System.Application {\n    get 'hide_menu_size'() { return this.getStringAttr('hide_menu_size') }\n    set 'hide_menu_size'(val) { this.setStringAttr('hide_menu_size', val) }\rget 'hide_menu_size_portrait'() { return this.getStringAttr('hide_menu_size_portrait') }\n    set 'hide_menu_size_portrait'(val) { this.setStringAttr('hide_menu_size_portrait', val) }\rget 'open_sidenav'() { return this.getBoolAttr('open_sidenav') }\n    set 'open_sidenav'(val) { this.setBoolAttr('open_sidenav', val) }\rget 'no_sidenav'() { return this.getBoolAttr('no_sidenav') }\n    set 'no_sidenav'(val) { this.setBoolAttr('no_sidenav', val) }\r    get 'sidnavItems'() {\n\t\t\t\t\t\treturn this.__watch[\"sidnavItems\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'sidnavItems'(val) {\n\t\t\t\t\t\tthis.__watch[\"sidnavItems\"] = val;\n\t\t\t\t\t}\r    __registerWatchesActions() {\n    this.__addWatchesActions(\"sidnavItems\");\r    super.__registerWatchesActions();\n}\n    static __style = `:host{--_application-sidnav-sidenav-width: var(--application-sidnav-sidenav-width, 200px)}:host .header .navigation-actions .menu{align-items:center;border:1px solid var(--darker);border-radius:var(--border-radius-sm);display:none;height:24px;justify-content:center;transition:background-color var(--bezier-curve) .2s,border var(--bezier-curve) .2s;width:24px}:host .header .navigation-actions .menu mi-icon{font-size:18px}:host .content{display:flex;height:calc(100% - 30px);margin:0;position:relative;width:100%}:host .content .sidenav-hider{animation-duration:300ms;animation-fill-mode:forwards;animation-name:fadeIn;animation-timing-function:var(--bezier-curve);background-color:rgba(0,0,0,.2);display:none;inset:0;position:absolute;z-index:50}:host .content .sidenav{background-color:var(--secondary-color);box-shadow:var(--elevation-4);height:100%;transition:transform .3s var(--bezier-curve);width:var(--_application-sidnav-sidenav-width);z-index:50}:host .content .sidenav .sidenav-item{align-items:center;border-bottom:1px solid var(--lighter-active);cursor:pointer;display:flex;flex-wrap:nowrap;height:51px;padding:10px;transition:linear background-color .3s}:host .content .sidenav .sidenav-item rk-img{--img-fill-color: var(--text-color);flex-grow:0;flex-shrink:0;height:30px;width:30px}:host .content .sidenav .sidenav-item rk-img[src=\"\"]{display:none}:host .content .sidenav .sidenav-item mi-icon{align-items:center;color:var(--text-color);display:flex;height:30px;justify-content:center;width:30px}:host .content .sidenav .sidenav-item span{color:var(--text-color);flex-grow:1;flex-shrink:0;margin-left:15px;overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:calc(100% - 45px)}:host .content .sidenav .sidenav-item rk-img[src=\"\"]~span{margin-left:0}:host .content .sidenav .sidenav-item[active]{background-color:var(--lighter-active)}:host .content .container{flex-shrink:0;height:100%;transition:width .3s var(--bezier-curve),margin-left .3s var(--bezier-curve);width:calc(100% - var(--_application-sidnav-sidenav-width))}:host([open_sidenav]) .navigation-actions .menu{background-color:var(--darker-active) !important;color:var(--text-color-reverse) !important}:host([no_sidenav]) .header .navigation-actions .menu{display:none !important}:host([no_sidenav]) .content{display:flex;height:calc(100% - 30px);margin:0;position:relative;width:100%}:host([no_sidenav]) .content .sidenav{display:none}:host([no_sidenav]) .content .sidenav-hider{display:none !important}:host([no_sidenav]) .content .container{height:100%;width:100%}@media screen and (min-width: 1225px){:host .header .navigation-actions .menu:hover{background-color:var(--darker) !important;border:1px solid rgba(0,0,0,0)}:host .content .sidenav .sidenav-item:hover{background-color:var(--lighter-active)}}@media screen and (max-width: 1224px){:host .header .navigation-actions .menu{height:26px;width:26px}:host .header .navigation-actions .menu mi-icon{font-size:20px}:host .content{height:calc(100% - 40px)}}@media screen and (orientation: landscape){@container application (max-width: 300px){:host([hide_menu_size=xs]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size=xs]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size=xs]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size=xs]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size=xs]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 300px){:host([hide_menu_size=xs][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size=xs][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 540px){:host([hide_menu_size=sm]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size=sm]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size=sm]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size=sm]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size=sm]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 540px){:host([hide_menu_size=sm][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size=sm][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 720px){:host([hide_menu_size=md]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size=md]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size=md]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size=md]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size=md]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 720px){:host([hide_menu_size=md][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size=md][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 960px){:host([hide_menu_size=lg]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size=lg]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size=lg]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size=lg]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size=lg]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 960px){:host([hide_menu_size=lg][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size=lg][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 1140px){:host([hide_menu_size=xl]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size=xl]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size=xl]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size=xl]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size=xl]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 1140px){:host([hide_menu_size=xl][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size=xl][open_sidenav]) .content .sidenav{transform:translateX(0%)}}}@media screen and (orientation: portrait){@container application (max-width: 300px){:host([hide_menu_size_portrait=xs]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size_portrait=xs]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size_portrait=xs]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size_portrait=xs]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size_portrait=xs]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 300px){:host([hide_menu_size_portrait=xs][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size_portrait=xs][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 540px){:host([hide_menu_size_portrait=sm]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size_portrait=sm]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size_portrait=sm]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size_portrait=sm]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size_portrait=sm]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 540px){:host([hide_menu_size_portrait=sm][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size_portrait=sm][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 720px){:host([hide_menu_size_portrait=md]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size_portrait=md]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size_portrait=md]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size_portrait=md]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size_portrait=md]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 720px){:host([hide_menu_size_portrait=md][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size_portrait=md][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 960px){:host([hide_menu_size_portrait=lg]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size_portrait=lg]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size_portrait=lg]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size_portrait=lg]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size_portrait=lg]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 960px){:host([hide_menu_size_portrait=lg][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size_portrait=lg][open_sidenav]) .content .sidenav{transform:translateX(0%)}}@container application (max-width: 1140px){:host([hide_menu_size_portrait=xl]:not([no_sidenav])) .header .navigation-actions .menu{display:flex}:host([hide_menu_size_portrait=xl]:not([no_sidenav])) .header .navigation-actions .previous,:host([hide_menu_size_portrait=xl]:not([no_sidenav])) .header .navigation-actions .next{display:none}:host([hide_menu_size_portrait=xl]:not([no_sidenav])) .content .sidenav{transform:translateX(calc(-100% - 20px))}:host([hide_menu_size_portrait=xl]:not([no_sidenav])) .content .container{margin-left:calc(var(--_application-sidnav-sidenav-width)*-1);width:100%}}@container application (max-width: 1140px){:host([hide_menu_size_portrait=xl][open_sidenav]) .content .sidenav-hider{display:block}:host([hide_menu_size_portrait=xl][open_sidenav]) .content .sidenav{transform:translateX(0%)}}}@keyframes fadeIn{0%{opacity:0;visibility:hidden}100%{visibility:100%;visibility:visible}}`;\n    constructor() { super(); if (this.constructor == ApplicationSidnav) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return ApplicationSidnav;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ApplicationSidnav.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<rk-context-menu-element class=\"header\" _id=\"applicationsidnav_0\">\r    <div class=\"background\"></div>\r    <div class=\"navigation-actions\">\r        <div class=\"action menu touch\" _id=\"applicationsidnav_1\">\r            <mi-icon icon=\"menu\"></mi-icon>\r        </div>\r        <div class=\"previous action touch disable\" _id=\"applicationsidnav_2\">\r            <rk-img src=\"/img/icons/angle-left.svg\"></rk-img>\r        </div>\r        <div class=\"next action touch disable\" _id=\"applicationsidnav_3\">\r            <rk-img src=\"/img/icons/angle-right.svg\"></rk-img>\r        </div>\r    </div>\r    <div class=\"title\" _id=\"applicationsidnav_4\"></div>\r    <div class=\"application-actions\">\r        <div class=\"btn green touch\" _id=\"applicationsidnav_5\"></div>\r        <div class=\"btn orange touch\" _id=\"applicationsidnav_6\"></div>\r        <div class=\"btn red touch\" _id=\"applicationsidnav_7\"></div>\r    </div>\r</rk-context-menu-element><rk-context-menu-element class=\"content\">\r    <div class=\"sidenav-hider\" _id=\"applicationsidnav_8\"></div>\r    <div class=\"sidenav\">\r        <rk-scrollable auto_hide _id=\"applicationsidnav_9\">\r            <template _id=\"applicationsidnav_10\"></template>\r        </rk-scrollable>\r    </div>\r    <div class=\"container\" _id=\"applicationsidnav_16\">\r    </div>\r</rk-context-menu-element><rk-resize min_width=\"200\" min_height=\"200\" _id=\"applicationsidnav_17\"></rk-resize><rk-loading class=\"loading\"></rk-loading><rk-notification-manager _id=\"applicationsidnav_18\"></rk-notification-manager>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"header\",\n      \"ids\": [\n        \"applicationsidnav_0\"\n      ]\n    },\n    {\n      \"name\": \"navigatePreviousEl\",\n      \"ids\": [\n        \"applicationsidnav_2\"\n      ]\n    },\n    {\n      \"name\": \"navigateNextEl\",\n      \"ids\": [\n        \"applicationsidnav_3\"\n      ]\n    },\n    {\n      \"name\": \"navEl\",\n      \"ids\": [\n        \"applicationsidnav_9\"\n      ]\n    },\n    {\n      \"name\": \"contentEl\",\n      \"ids\": [\n        \"applicationsidnav_16\"\n      ]\n    },\n    {\n      \"name\": \"resizeEl\",\n      \"ids\": [\n        \"applicationsidnav_17\"\n      ]\n    },\n    {\n      \"name\": \"notificationManager\",\n      \"ids\": [\n        \"applicationsidnav_18\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"applicationsidnav_4°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod2())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"applicationsidnav_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleSidnav(e, pressInstance); }\n    },\n    {\n      \"id\": \"applicationsidnav_2\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.navigatePrevious(e, pressInstance); }\n    },\n    {\n      \"id\": \"applicationsidnav_3\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.navigateNext(e, pressInstance); }\n    },\n    {\n      \"id\": \"applicationsidnav_5\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.hide(e, pressInstance); }\n    },\n    {\n      \"id\": \"applicationsidnav_6\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleFull(e, pressInstance); }\n    },\n    {\n      \"id\": \"applicationsidnav_7\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.kill(e, pressInstance); }\n    },\n    {\n      \"id\": \"applicationsidnav_8\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.closeSidenav(e, pressInstance); }\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(` \r                <rk-link class=\"sidenav-item\" _id=\"applicationsidnav_11\">\r                    <template _id=\"applicationsidnav_12\"></template>\r                    <span _id=\"applicationsidnav_15\"></span>\r                </rk-link>\r            `);\rtempl0.setActions({\n  \"content\": {\n    \"applicationsidnav_11°to\": {\n      \"fct\": (c) => `${c.print(c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod3(c.data.item))}`,\n      \"once\": true\n    },\n    \"applicationsidnav_11°active_pattern\": {\n      \"fct\": (c) => `${c.print(c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod4(c.data.item))}`,\n      \"once\": true\n    },\n    \"applicationsidnav_15°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod7(c.data.item))}`,\n      \"once\": true\n    }\n  },\n  \"injection\": [\n    {\n      \"id\": \"applicationsidnav_11\",\n      \"injectionName\": \"allowTrigger\",\n      \"inject\": (c) => c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod5(c.data.item),\n      \"once\": true\n    }\n  ]\n});\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'applicationsidnav_10',\n                    template: templ0,\n                simple:{data: \"this.sidnavItems\",item:\"item\"}\r});\rconst templ1 = new Aventus.Template(this);\rtempl1.setTemplate(`\r                        <mi-icon _id=\"applicationsidnav_13\"></mi-icon>\r                    `);\rtempl1.setActions({\n  \"content\": {\n    \"applicationsidnav_13°icon\": {\n      \"fct\": (c) => `${c.print(c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod6(c.data.item))}`,\n      \"once\": true\n    }\n  }\n});\rconst templ2 = new Aventus.Template(this);\rtempl2.setTemplate(`\r                        <rk-img _id=\"applicationsidnav_14\"></rk-img>\r                    `);\rtempl2.setActions({\n  \"content\": {\n    \"applicationsidnav_14°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod6(c.data.item))}`,\n      \"once\": true\n    }\n  }\n});\rtempl0.addIf({\n                    anchorId: 'applicationsidnav_12',\n                    parts: [{once: true,\n                    condition: (c) => c.comp.__564ed14a7e807cc2bd8ebdf7d29b1c4fmethod1(c.data.item),\n                    template: templ1\n                },{once: true,\n                    condition: (c) => true,\n                    template: templ2\n                }]\n            });\r }\n    getClassName() {\n        return \"ApplicationSidnav\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('hide_menu_size')){ this['hide_menu_size'] = \"sm\"; }\rif(!this.hasAttribute('hide_menu_size_portrait')){ this['hide_menu_size_portrait'] = \"lg\"; }\rif(!this.hasAttribute('open_sidenav')) { this.attributeChangedCallback('open_sidenav', false, false); }\rif(!this.hasAttribute('no_sidenav')) { this.attributeChangedCallback('no_sidenav', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"sidnavItems\"] = [];\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('hide_menu_size');\rthis.__upgradeProperty('hide_menu_size_portrait');\rthis.__upgradeProperty('open_sidenav');\rthis.__upgradeProperty('no_sidenav');\rthis.__correctGetter('sidnavItems');\r }\n    __listBoolProps() { return [\"open_sidenav\",\"no_sidenav\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    addRouteSidenav(options) {\n        let route = options.route;\n        this.allRoutes[route] = {\n            route: route,\n            scriptUrl: '',\n            render: () => options.frame\n        };\n        let icon = \"\";\n        let useMi = false;\n        if (options.miIcon) {\n            useMi = true;\n            icon = options.miIcon;\n        }\n        else if (options.icon?.startsWith(\"mi-\")) {\n            useMi = true;\n            icon = options.icon.replace(\"mi-\", \"\");\n        }\n        else if (options.icon) {\n            icon = options.icon;\n        }\n        let allowTrigger;\n        if (options.allowTrigger) {\n            allowTrigger = options.allowTrigger;\n        }\n        else {\n            allowTrigger = (link) => {\n                return this.navigator.getState()?.name != link.to;\n            };\n        }\n        this.sidnavItems.push({\n            name: options.name,\n            icon,\n            useMi,\n            route,\n            active: options.activeRoute ?? route,\n            allowTrigger\n        });\n    }\n    toggleSidnav() {\n        this.open_sidenav = !this.open_sidenav;\n    }\n    closeSidenav() {\n        this.open_sidenav = false;\n    }\n    __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod2() {\n        return this.app_title;\n    }\n    __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod3(item) {\n        return item.route;\n    }\n    __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod4(item) {\n        return item.active;\n    }\n    __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod6(item) {\n        return item.icon;\n    }\n    __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod7(item) {\n        return item.name;\n    }\n    __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod1(item) {\n        return item.useMi;\n    }\n    __564ed14a7e807cc2bd8ebdf7d29b1c4fmethod5(item) {\n        return item.allowTrigger;\n    }\n}\nSystem.ApplicationSidnav.Namespace=`Core.System`;\n_.System.ApplicationSidnav=System.ApplicationSidnav;\n","dependances":[{"fullName":"Core.System.Application","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"OverrideView","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.System.SizeList","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.Link","isStrong":false},{"fullName":"Core.System.ApplicationSidnavRouteOptions","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"ContextMenuElement","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Link","isStrong":false},{"fullName":"Resize","isStrong":false},{"fullName":"Loading","isStrong":false},{"fullName":"NotificationManager","isStrong":false}],"fullName":"Core.System.ApplicationSidnav","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.CalendarDay = class CalendarDay extends Aventus.WebComponent {\n    get 'other'() { return this.getBoolAttr('other') }\n    set 'other'(val) { this.setBoolAttr('other', val) }\rget 'today'() { return this.getBoolAttr('today') }\n    set 'today'(val) { this.setBoolAttr('today', val) }\r    calendar;\n    date = new Date();\n    static __style = `:host{align-items:center;border-radius:var(--border-radius-sm);color:var(--_calendar-text-color-case);cursor:pointer;display:flex;font-size:var(--_calendar-case-font-size);height:var(--_calendar-case-size);justify-content:center;transition:color .2s var(--bezier-curve),background-color .2s var(--bezier-curve);width:var(--_calendar-case-size)}:host([other]){color:var(--_calendar-text-color-case-others)}:host([today]){color:var(--_calendar-text-color-case-today)}@media screen and (min-width: 1225px){:host(:hover){background-color:var(--_calendar-background-color-case-hover)}}`;\n    constructor() { super(); if (this.constructor == CalendarDay) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return CalendarDay;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(CalendarDay.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"CalendarDay\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('other')) { this.attributeChangedCallback('other', false, false); }\rif(!this.hasAttribute('today')) { this.attributeChangedCallback('today', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('other');\rthis.__upgradeProperty('today');\r }\n    __listBoolProps() { return [\"other\",\"today\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    init(dateDisplayed, dateDay, calendar) {\n        this.shadowRoot.innerHTML = dateDay.getDate() + '';\n        this.other = dateDisplayed.getMonth() != dateDay.getMonth();\n        this.calendar = calendar;\n        this.date.setTime(dateDay.getTime());\n        this.today = Lib.DateTools.isSameDate(new Date(), dateDay);\n    }\n    postCreation() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                this.calendar.onDateClicked.trigger([this.date, this]);\n            }\n        });\n    }\n}\nComponents.CalendarDay.Namespace=`Core.Components`;\n_.Components.CalendarDay=Components.CalendarDay;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.Calendar","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"Core.Lib.DateTools","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Core.Components.CalendarDay","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.CalendarDayDefault = class CalendarDayDefault extends Components.CalendarDay {\n    static __style = ``;\n    __getStatic() {\n        return CalendarDayDefault;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(CalendarDayDefault.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"CalendarDayDefault\";\n    }\n}\nComponents.CalendarDayDefault.Namespace=`Core.Components`;\nComponents.CalendarDayDefault.Tag=`rk-calendar-day-default`;\n_.Components.CalendarDayDefault=Components.CalendarDayDefault;\nif(!window.customElements.get('rk-calendar-day-default')){window.customElements.define('rk-calendar-day-default', Components.CalendarDayDefault);Aventus.WebComponentInstance.registerDefinition(Components.CalendarDayDefault);}\n","dependances":[{"fullName":"Core.Components.CalendarDay","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.CalendarDayDefault","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-calendar-day-default"},{"code":"Components.Calendar = class Calendar extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"date\", \"show_selector\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'selector'() { return this.getStringAttr('selector') }\n    set 'selector'(val) { this.setStringAttr('selector', val) }\r    get 'date'() { return this.getDateProp('date') }\n    set 'date'(val) { this.setDateAttr('date', val) }\rget 'show_selector'() { return this.getBoolProp('show_selector') }\n    set 'show_selector'(val) { this.setBoolAttr('show_selector', val) }\r    get 'dateTemp'() {\n\t\t\t\t\t\treturn this.__watch[\"dateTemp\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'dateTemp'(val) {\n\t\t\t\t\t\tthis.__watch[\"dateTemp\"] = val;\n\t\t\t\t\t}\rget 'yearGroupPage'() {\n\t\t\t\t\t\treturn this.__watch[\"yearGroupPage\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'yearGroupPage'(val) {\n\t\t\t\t\t\tthis.__watch[\"yearGroupPage\"] = val;\n\t\t\t\t\t}\rget 'yearGroupTxt'() {\n\t\t\t\t\t\treturn this.__watch[\"yearGroupTxt\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'yearGroupTxt'(val) {\n\t\t\t\t\t\tthis.__watch[\"yearGroupTxt\"] = val;\n\t\t\t\t\t}\r    cases = {};\n    onDateClicked = new Aventus.Callback();\n    onDateChanged = new Aventus.Callback();\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"dateTemp\", ((target) => {\n    target.renderDatesTemp();\n    target.printYearRange();\n}));\rthis.__addWatchesActions(\"yearGroupPage\", ((target) => {\n    target.printYearRange();\n}));\rthis.__addWatchesActions(\"yearGroupTxt\");\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"date\", ((target) => {\n    target.renderDates();\n}));\rthis.__addPropertyActions(\"show_selector\", ((target) => {\n    if (target.show_selector) {\n        target.dateTemp = target.date;\n    }\n}));\r }\n    static __style = `:host{--_calendar-background-color: var(--calendar-background-color, white);--_calendar-background-color-case-hover: var(--calendar-background-color-case-hover, var(--lighter));--_calendar-background-color-case-active: var(--calendar-background-color-case-active, var(--lighter));--_calendar-background-color-selector: var(--calendar-background-color-selector, white);--_calendar-text-color-case: var(--calendar-text-color-case, var(--text-color));--_calendar-text-color-case-others: var(--calendar-text-color-case-others, var(--secondary-color));--_calendar-text-color-case-header: var(--calendar-text-color-case-header, var(--text-color-light));--_calendar-text-color-case-today: var(--calendar-text-color-case-today, var(--orange));--_calendar-case-size: var(--calendar-case-size, 30px);--_calendar-case-font-size: var(--calendar-case-font-size, var(--font-size, 16px));--_calendar-chevron-size: var(--calendar-chevron-size, calc(var(--_calendar-case-font-size) * 1.5));--_calendar-month-font-size: var(--calendar-month-font-size, calc(var(--_calendar-case-font-size) * 1.25));--_calendar-month-selector-height: var(--calendar-month-selector-height, var(--_calendar-case-size));--_calendar-year-selector-height: var(--calendar-year-selector-height, var(--_calendar-case-size));--_calendar-case-gap: var(--calendar-case-gap, 10px);--_calendar-row-gap: var(--calendar-row-gap, 5px)}:host{background-color:var(--_calendar-background-color);border-radius:var(--border-radius);box-shadow:var(--elevation-3);display:flex;flex-direction:column;padding:15px;position:relative;width:fit-content}:host .hover{transition:background-color .2s var(--bezier-curve)}:host .header{align-items:center;display:flex;flex-direction:row;justify-content:space-between;position:relative}:host .header .current-info{align-items:center;display:flex;flex-direction:row;flex-grow:1;font-size:var(--_calendar-month-font-size);justify-content:center}:host .header .current-info .month-year{align-items:center;border-radius:var(--border-radius-sm);display:flex;flex-direction:row;padding:5px 10px}:host .header .current-info .month-year .month{margin-right:5px}:host .header .chevron{align-items:center;border-radius:var(--border-radius-sm);display:flex;font-size:var(--_calendar-chevron-size);height:var(--_calendar-case-size);justify-content:center;text-align:center;width:var(--_calendar-case-size)}:host .header .selectors{background-color:var(--_calendar-background-color-selector);border-radius:var(--border-radius);box-shadow:var(--elevation-3);left:50%;opacity:0;padding:10px;pointer-events:none;position:absolute;top:calc(100% + 12px);transform:translateX(-50%);transition:opacity .2s var(--bezier-curve),visibility .2s var(--bezier-curve);visibility:hidden;width:100%;z-index:5}:host .header .selectors::after{border-bottom:10px solid var(--_calendar-background-color-selector);border-left:10px solid rgba(0,0,0,0);border-right:10px solid rgba(0,0,0,0);content:\"\";left:50%;position:absolute;top:-8px;transform:translateX(-50%)}:host .header .selectors .month-select{display:none;width:100%}:host .header .selectors .month-select .month-select-header{align-items:center;display:flex;margin-bottom:var(--_calendar-row-gap)}:host .header .selectors .month-select .month-select-header .current-info .temp-year{border-radius:var(--border-radius-sm);display:flex;font-size:var(--_calendar-month-font-size);padding:5px 10px}:host .header .selectors .month-select .month-select-body{display:flex;flex-wrap:wrap;font-size:var(--_calendar-case-font-size);gap:var(--_calendar-row-gap) var(--_calendar-case-gap);width:100%}:host .header .selectors .month-select .month-select-body .month-el{align-items:center;border-radius:var(--border-radius-sm);display:flex;height:var(--_calendar-month-selector-height);justify-content:center;width:calc((100% - var(--_calendar-case-gap)*2)/3)}:host .header .selectors .month-select .month-select-body .month-el.active{background-color:var(--_calendar-background-color-case-active)}:host .header .selectors .year-select{display:none;width:100%}:host .header .selectors .year-select .year-select-header{align-items:center;display:flex;margin-bottom:var(--_calendar-row-gap)}:host .header .selectors .year-select .year-select-header .current-info .temp-year-range{border-radius:var(--border-radius-sm);display:flex;font-size:var(--_calendar-month-font-size);padding:5px 10px}:host .header .selectors .year-select .year-select-body{display:flex;flex-wrap:wrap;font-size:var(--_calendar-case-font-size);gap:var(--_calendar-row-gap) var(--_calendar-case-gap);width:100%}:host .header .selectors .year-select .year-select-body .year-el{align-items:center;border-radius:var(--border-radius-sm);display:flex;height:var(--_calendar-year-selector-height);justify-content:center;width:calc((100% - var(--_calendar-case-gap)*2)/3)}:host .header .selectors .year-select .year-select-body .year-el.active{background-color:var(--_calendar-background-color-case-active)}:host .body{display:flex;flex-direction:column;margin-top:var(--_calendar-row-gap);gap:var(--_calendar-row-gap)}:host .body .days-header{color:var(--_calendar-text-color-case-header);display:flex;flex-direction:row;gap:10px}:host .body .days-header .day-header{align-items:center;display:flex;font-size:var(--_calendar-case-font-size);height:var(--_calendar-case-size);justify-content:center;width:var(--_calendar-case-size)}:host .body .days-body{display:flex;flex-direction:column;gap:var(--_calendar-row-gap)}:host .body .days-body .days-row{display:flex;flex-direction:row;gap:var(--_calendar-case-gap)}:host .hider{display:none;inset:0;position:absolute;z-index:1}:host([show_selector]) .hider{display:block}:host([show_selector]) .header .selectors{opacity:1;pointer-events:auto;visibility:visible}:host([selector=month]) .header .selectors .month-select{display:block}:host([selector=year]) .header .selectors .year-select{display:block}@media screen and (min-width: 1225px){:host .hover:hover{background-color:var(--_calendar-background-color-case-hover)}}`;\n    __getStatic() {\n        return Calendar;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Calendar.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"header\">\r    <mi-icon icon=\"chevron_left\" class=\"chevron touch hover\" _id=\"calendar_0\"></mi-icon>\r    <div class=\"current-info\" _id=\"calendar_1\">\r        <div class=\"month-year touch hover\">\r            <div class=\"month\" _id=\"calendar_2\"></div>\r            <div class=\"year\" _id=\"calendar_3\"></div>\r        </div>\r    </div>\r    <mi-icon icon=\"chevron_right\" class=\"chevron touch hover\" _id=\"calendar_4\"></mi-icon>\r    <div class=\"selectors\">\r        <div class=\"month-select\">\r            <div class=\"month-select-header\">\r                <mi-icon icon=\"chevron_left\" class=\"chevron touch hover\" _id=\"calendar_5\"></mi-icon>\r                <div class=\"current-info\" _id=\"calendar_6\">\r                    <div class=\"temp-year touch hover\" _id=\"calendar_7\"></div>\r                </div>\r                <mi-icon icon=\"chevron_right\" class=\"chevron touch hover\" _id=\"calendar_8\"></mi-icon>\r            </div>\r            <div class=\"month-select-body\" _id=\"calendar_9\">\r                <div class=\"month-el touch hover\" _id=\"calendar_10\">Janv.</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_11\">Févr.</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_12\">Mars</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_13\">Avr.</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_14\">Mai</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_15\">Juin</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_16\">Juil.</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_17\">Août</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_18\">Sept.</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_19\">Oct.</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_20\">Nov.</div>\r                <div class=\"month-el touch hover\" _id=\"calendar_21\">Déc.</div>\r            </div>\r        </div>\r        <div class=\"year-select\">\r            <div class=\"year-select-header\">\r                <mi-icon icon=\"chevron_left\" class=\"chevron touch hover\" _id=\"calendar_22\"></mi-icon>\r                <div class=\"current-info\">\r                    <div class=\"temp-year-range\" _id=\"calendar_23\"></div>\r                </div>\r                <mi-icon icon=\"chevron_right\" class=\"chevron touch hover\" _id=\"calendar_24\"></mi-icon>\r            </div>\r            <div class=\"year-select-body\" _id=\"calendar_25\">\r            </div>\r        </div>\r    </div>\r</div><div class=\"body\">\r    <div class=\"days-header\">\r        <div class=\"day-header\">Lu</div>\r        <div class=\"day-header\">Ma</div>\r        <div class=\"day-header\">Me</div>\r        <div class=\"day-header\">Je</div>\r        <div class=\"day-header\">Ve</div>\r        <div class=\"day-header\">Sa</div>\r        <div class=\"day-header\">Di</div>\r    </div>\r    <div class=\"days-body\" _id=\"calendar_26\">\r    </div>\r</div><div class=\"hider\" _id=\"calendar_27\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"monthEl\",\n      \"ids\": [\n        \"calendar_2\"\n      ]\n    },\n    {\n      \"name\": \"yearEl\",\n      \"ids\": [\n        \"calendar_3\"\n      ]\n    },\n    {\n      \"name\": \"bodyMonthEl\",\n      \"ids\": [\n        \"calendar_9\"\n      ]\n    },\n    {\n      \"name\": \"bodyYearEl\",\n      \"ids\": [\n        \"calendar_25\"\n      ]\n    },\n    {\n      \"name\": \"bodyEl\",\n      \"ids\": [\n        \"calendar_26\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"calendar_7°@HTML\": {\n      \"fct\": (c) => `\\r\\n                        ${c.print(c.comp.__209c968d688f11ad02afc05e2a5220a2method0())}\\r\\n                    `,\n      \"once\": true\n    },\n    \"calendar_23°@HTML\": {\n      \"fct\": (c) => `\\r\\n                        ${c.print(c.comp.__209c968d688f11ad02afc05e2a5220a2method1())}\\r\\n                    `,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"calendar_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.previousMonth(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showMonthSelect(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_4\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.nextMonth(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_5\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.previousYearTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_6\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showYearSelect(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_8\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.nextMonthYearTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_10\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_11\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_12\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_13\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_14\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_15\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_16\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_17\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_18\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_19\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_20\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_21\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectMonthTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_22\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.previousYearGroupTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_24\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.nextYearGroupTemp(e, pressInstance); }\n    },\n    {\n      \"id\": \"calendar_27\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.hideSelector(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Calendar\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('selector')){ this['selector'] = 'month'; }\rif(!this.hasAttribute('date')){ this['date'] = new Date(); }\rif(!this.hasAttribute('show_selector')) { this.attributeChangedCallback('show_selector', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"dateTemp\"] = new Date();\rw[\"yearGroupPage\"] = 0;\rw[\"yearGroupTxt\"] = \"\";\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('selector');\rthis.__upgradeProperty('date');\rthis.__upgradeProperty('show_selector');\rthis.__correctGetter('dateTemp');\rthis.__correctGetter('yearGroupPage');\rthis.__correctGetter('yearGroupTxt');\r }\n    __listBoolProps() { return [\"show_selector\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    monthsName() {\n        return [\n            'Janvier',\n            'Février',\n            'Mars',\n            'Avril',\n            'Mai',\n            'Juin',\n            'Juillet',\n            'Août',\n            'Septembre',\n            'Octobre',\n            'Novembre',\n            'Décembre'\n        ];\n    }\n    nextMonth() {\n        let date = this.date;\n        let newDate = new Date();\n        newDate.setTime(date.getTime());\n        newDate.setDate(1);\n        newDate.setMonth(newDate.getMonth() + 1);\n        this.date = newDate;\n    }\n    previousMonth() {\n        let date = this.date;\n        let newDate = new Date();\n        newDate.setTime(date.getTime());\n        newDate.setDate(1);\n        newDate.setMonth(newDate.getMonth() - 1);\n        this.date = newDate;\n    }\n    defineCalendarDay() {\n        return Components.CalendarDayDefault;\n    }\n    getCase(date) {\n        return this.cases[Lib.DateTools.print(date)];\n    }\n    renderDates() {\n        if (!this.isConnected)\n            return;\n        this.cases = {};\n        Lib.DomTools.clearElement(this.bodyEl);\n        let date = this.date;\n        this.yearEl.innerHTML = date.getFullYear() + '';\n        this.monthEl.innerHTML = this.monthsName()[date.getMonth()];\n        let startDate = Lib.DateTools.getStartWeek(Lib.DateTools.getStartMonth(date));\n        let endDate = Lib.DateTools.getEndWeek(Lib.DateTools.getEndMonth(date));\n        let i = 0;\n        let row = document.createElement(\"div\");\n        row.classList.add(\"days-row\");\n        let CaseCst = this.defineCalendarDay();\n        while (startDate < endDate) {\n            let caseEl = new CaseCst();\n            this.cases[Lib.DateTools.print(startDate)] = caseEl;\n            caseEl.init(date, startDate, this);\n            row.appendChild(caseEl);\n            startDate.setDate(startDate.getDate() + 1);\n            i++;\n            if (i == 7) {\n                i = 0;\n                this.bodyEl.appendChild(row);\n                row = document.createElement(\"div\");\n                row.classList.add(\"days-row\");\n            }\n        }\n        this.onDateChanged.trigger([this.date]);\n    }\n    renderDatesTemp() {\n        let el = this.bodyMonthEl.querySelector(\".active\");\n        if (el) {\n            el.classList.remove(\"active\");\n        }\n        if (this.dateTemp.getFullYear() == this.date.getFullYear())\n            this.bodyMonthEl.children[this.dateTemp.getMonth()].classList.add(\"active\");\n        let now = new Date();\n        this.yearGroupPage = Math.ceil((this.dateTemp.getFullYear() - now.getFullYear() - 5) / 12);\n    }\n    showMonthSelect() {\n        this.selector = 'month';\n        this.show_selector = true;\n    }\n    showYearSelect() {\n        this.selector = 'year';\n        this.show_selector = true;\n    }\n    hideSelector() {\n        this.show_selector = false;\n    }\n    selectMonthTemp(e, instance) {\n        let children = Array.from(this.bodyMonthEl.children);\n        let index = children.indexOf(instance.getElement());\n        if (index != -1) {\n            let date = this.date;\n            let newDate = new Date();\n            newDate.setTime(date.getTime());\n            newDate.setDate(1);\n            newDate.setMonth(index);\n            newDate.setFullYear(this.dateTemp.getFullYear());\n            this.date = newDate;\n        }\n        this.hideSelector();\n    }\n    previousYearTemp() {\n        let date = this.dateTemp ?? new Date();\n        let newDate = new Date();\n        newDate.setTime(date.getTime());\n        newDate.setDate(1);\n        newDate.setFullYear(newDate.getFullYear() - 1);\n        this.dateTemp = newDate;\n    }\n    nextMonthYearTemp() {\n        let date = this.dateTemp ?? new Date();\n        let newDate = new Date();\n        newDate.setTime(date.getTime());\n        newDate.setDate(1);\n        newDate.setFullYear(newDate.getFullYear() + 1);\n        this.dateTemp = newDate;\n    }\n    previousYearGroupTemp() {\n        this.yearGroupPage--;\n    }\n    nextYearGroupTemp() {\n        this.yearGroupPage++;\n    }\n    printYearRange() {\n        let currentYear = new Date().getFullYear();\n        let basicRangeStart = (currentYear + this.yearGroupPage * 12) - 6;\n        let basicRangeEnd = (currentYear + this.yearGroupPage * 12) + 6;\n        this.yearGroupTxt = `${basicRangeStart} - ${basicRangeEnd - 1}`;\n        this.bodyYearEl.innerHTML = \"\";\n        for (let i = basicRangeStart; i < basicRangeEnd; i++) {\n            this.createYearCase(i);\n        }\n    }\n    createYearCase(year) {\n        let div = document.createElement(\"div\");\n        div.classList.add(\"year-el\");\n        div.classList.add(\"touch\");\n        div.classList.add(\"hover\");\n        div.innerHTML = year + '';\n        if (year == this.dateTemp.getFullYear()) {\n            div.classList.add(\"active\");\n        }\n        div.addEventListener(\"click\", (e) => {\n            let newDate = new Date();\n            newDate.setTime(this.dateTemp.getTime());\n            newDate.setFullYear(year);\n            this.dateTemp = newDate;\n            this.showMonthSelect();\n        });\n        this.bodyYearEl.appendChild(div);\n    }\n    postDisonnect() {\n        this.show_selector = false;\n    }\n    postCreation() {\n    }\n    __209c968d688f11ad02afc05e2a5220a2method0() {\n        return this.dateTemp.getFullYear();\n    }\n    __209c968d688f11ad02afc05e2a5220a2method1() {\n        return this.yearGroupTxt;\n    }\n}\nComponents.Calendar.Namespace=`Core.Components`;\nComponents.Calendar.Tag=`rk-calendar`;\n_.Components.Calendar=Components.Calendar;\nif(!window.customElements.get('rk-calendar')){window.customElements.define('rk-calendar', Components.Calendar);Aventus.WebComponentInstance.registerDefinition(Components.Calendar);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Calendar","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.CalendarDay","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Core.Components.CalendarDayDefault","isStrong":false},{"fullName":"Core.Lib.DateTools","isStrong":false},{"fullName":"Core.Lib.DomTools","isStrong":false},{"fullName":"Event","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.Calendar","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-calendar"},{"code":"Components.DatePickerCalendarDay = class DatePickerCalendarDay extends Components.CalendarDay {\n    get 'selected'() { return this.getBoolAttr('selected') }\n    set 'selected'(val) { this.setBoolAttr('selected', val) }\r    static __style = `:host([selected]){background-color:var(--primary-color)}`;\n    constructor() { super(); \rthis.checkIfSelected=this.checkIfSelected.bind(this) }\n    __getStatic() {\n        return DatePickerCalendarDay;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(DatePickerCalendarDay.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`` }\n    });\n}\n    getClassName() {\n        return \"DatePickerCalendarDay\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('selected')) { this.attributeChangedCallback('selected', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('selected');\r }\n    __listBoolProps() { return [\"selected\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    init(dateDisplayed, dateDay, calendar) {\n        super.init(dateDisplayed, dateDay, calendar);\n        if (calendar instanceof Components.DatePickerCalendar) {\n            if (Lib.DateTools.isSameDate(calendar.picker.value, dateDay)) {\n                this.selected = true;\n            }\n            calendar.onDateClicked.add(this.checkIfSelected);\n        }\n    }\n    checkIfSelected(date, element) {\n        this.selected = element == this;\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.calendar.onDateClicked.remove(this.checkIfSelected);\n    }\n}\nComponents.DatePickerCalendarDay.Namespace=`Core.Components`;\nComponents.DatePickerCalendarDay.Tag=`rk-date-picker-calendar-day`;\n_.Components.DatePickerCalendarDay=Components.DatePickerCalendarDay;\nif(!window.customElements.get('rk-date-picker-calendar-day')){window.customElements.define('rk-date-picker-calendar-day', Components.DatePickerCalendarDay);Aventus.WebComponentInstance.registerDefinition(Components.DatePickerCalendarDay);}\n","dependances":[{"fullName":"Core.Components.CalendarDay","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"Core.Components.Calendar","isStrong":false},{"fullName":"Core.Components.DatePickerCalendar","isStrong":false},{"fullName":"Core.Lib.DateTools","isStrong":false},{"fullName":"BindThis","isStrong":false}],"fullName":"Core.Components.DatePickerCalendarDay","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-date-picker-calendar-day"},{"code":"System.AddOnTime = class AddOnTime extends Aventus.WebComponent {\n    get 'active'() { return this.getBoolAttr('active') }\n    set 'active'(val) { this.setBoolAttr('active', val) }\r    days = [\n        'Dim.',\n        'Lun.',\n        'Mar.',\n        'Mer.',\n        'Jeu.',\n        'Ven.',\n        'Sam.'\n    ];\n    months = [\n        'Janvier',\n        'Février',\n        'Mars',\n        'Avril',\n        'Mai',\n        'Juin',\n        'Juillet',\n        'Août',\n        'Septembre',\n        'Octobre',\n        'Novembre',\n        'Décembre'\n    ];\n    static __style = `:host{position:relative;height:var(--desktop-bottom-bar-element)}:host .display{align-items:center;border-radius:var(--border-radius-sm);cursor:pointer;display:flex;margin-right:10px;padding:0 10px;transition:background-color linear .2s;height:100%}:host .display .date{font-size:var(--font-size-sm)}:host .display .hour{font-size:var(--font-size-sm);margin-left:5px}:host .calendar{--calendar-background-color: var(--primary-color-opacity);bottom:calc(100% + (var(--desktop-bottom-bar) - var(--desktop-bottom-bar-element))/2 + 3px);box-shadow:var(--elevation-3);height:0;overflow:hidden;padding:0px 15px;position:absolute;right:10px;pointer-events:none;transition:bottom var(--bezier-curve) .5s,height var(--bezier-curve) .5s,padding var(--bezier-curve) .5s}:host([active]) .display{background-color:var(--lighter-active)}:host([active]) .calendar{bottom:calc(100% + (var(--desktop-bottom-bar) - var(--desktop-bottom-bar-element))/2 + 3px);height:var(--time-calendar-height);padding:15px;pointer-events:all}@media screen and (min-width: 1225px){:host .display:hover{background-color:var(--lighter-active)}}`;\n    constructor() {\n            super();\n            this.classList.add(\"touch\");\nthis.calculateCalendarSize=this.calculateCalendarSize.bind(this) }\n    __getStatic() {\n        return AddOnTime;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(AddOnTime.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"display\" _id=\"addontime_0\">\r    <div class=\"date\" _id=\"addontime_1\"></div>\r    <div class=\"hour\" _id=\"addontime_2\"></div>\r</div><rk-calendar class=\"calendar\" _id=\"addontime_3\"></rk-calendar>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"date\",\n      \"ids\": [\n        \"addontime_1\"\n      ]\n    },\n    {\n      \"name\": \"hour\",\n      \"ids\": [\n        \"addontime_2\"\n      ]\n    },\n    {\n      \"name\": \"calendarEl\",\n      \"ids\": [\n        \"addontime_3\"\n      ]\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"addontime_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleActive(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"AddOnTime\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('active')) { this.attributeChangedCallback('active', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('active');\r }\n    __listBoolProps() { return [\"active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    firstLoading() {\n        let missingSec = 60 - new Date().getSeconds();\n        if (missingSec == 0) {\n            this.displayDate(true);\n            this.normalLoading();\n        }\n        else {\n            this.displayDate(true);\n            setTimeout(() => {\n                this.normalLoading();\n            }, missingSec * 1000);\n        }\n    }\n    displayDate(force = false) {\n        if (!this.hour || !this.date) {\n            return;\n        }\n        let date = new Date();\n        let minutes = date.getMinutes();\n        let hours = date.getHours();\n        this.hour.innerHTML = this.prettyNumber(hours) + \":\" + this.prettyNumber(minutes);\n        if (force || (minutes == 0 && hours == 0)) {\n            let day = this.days[date.getDay()];\n            let month = this.months[date.getMonth()];\n            let nb = date.getDate();\n            let txt = day + ' ' + this.prettyNumber(nb) + ' ' + month;\n            this.date.innerHTML = txt;\n        }\n    }\n    prettyNumber(nb) {\n        if (nb < 10) {\n            return '0' + nb;\n        }\n        return nb + '';\n    }\n    normalLoading() {\n        setInterval(() => {\n            this.displayDate();\n        }, 1000 * 60);\n    }\n    calculateCalendarSize() {\n        if (!this.active) {\n            this.calendarEl.style.transition = 'none';\n            setTimeout(() => {\n                this.calendarEl.style.left = '100000px';\n                this.calendarEl.style.height = 'auto';\n                setTimeout(() => {\n                    let height = this.calendarEl.offsetHeight + 30;\n                    this.calendarEl.style.left = '';\n                    this.calendarEl.style.height = '';\n                    this.calendarEl.style.setProperty(\"--time-calendar-height\", height + 'px');\n                    setTimeout(() => {\n                        this.calendarEl.style.transition = '';\n                    }, 50);\n                }, 50);\n            }, 50);\n        }\n        else {\n            this.calendarEl.style.setProperty(\"--time-calendar-height\", this.calendarEl.offsetHeight + 'px');\n        }\n    }\n    bindCalendarSize() {\n        this.calendarEl.onDateChanged.add(this.calculateCalendarSize);\n        this.calculateCalendarSize();\n        this.calendarEl.addEventListener(\"transitionstart\", () => {\n        });\n        this.calendarEl.addEventListener(\"transitionend\", () => {\n            if (this.active) {\n                this.calendarEl.style.height = 'auto';\n            }\n        });\n    }\n    toggleActive() {\n        if (this.active) {\n            this.calendarEl.style.height = '';\n            setTimeout(() => {\n                this.active = false;\n            }, 10);\n        }\n        else {\n            this.active = true;\n        }\n    }\n    postCreation() {\n        this.firstLoading();\n        this.bindCalendarSize();\n    }\n}\nSystem.AddOnTime.Namespace=`Core.System`;\nSystem.AddOnTime.Tag=`rk-add-on-time`;\n_.System.AddOnTime=System.AddOnTime;\nif(!window.customElements.get('rk-add-on-time')){window.customElements.define('rk-add-on-time', System.AddOnTime);Aventus.WebComponentInstance.registerDefinition(System.AddOnTime);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.Calendar","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Calendar","isStrong":false}],"fullName":"Core.System.AddOnTime","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-add-on-time"},{"code":"Lib.FileSaver=class FileSaver {\n    static bom(blob, opts) {\n        if (typeof opts === 'undefined')\n            opts = { autoBom: false };\n        else if (typeof opts !== 'object') {\n            console.warn('Deprecated: Expected third argument to be a object');\n            opts = { autoBom: !opts };\n        }\n        // prepend BOM for UTF-8 XML and text/* types (including HTML)\n        if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n            return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type });\n        }\n        return blob;\n    }\n    static download(url, name, opts) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('GET', url);\n        xhr.responseType = 'blob';\n        xhr.onload = () => {\n            this.saveAs(xhr.response, name, opts);\n        };\n        xhr.onerror = () => {\n            console.error('could not download file');\n        };\n        xhr.send();\n    }\n    static corsEnabled(url) {\n        var xhr = new XMLHttpRequest();\n        xhr.open('HEAD', url, false);\n        try {\n            xhr.send();\n        }\n        catch (e) { }\n        return xhr.status >= 200 && xhr.status <= 299;\n    }\n    static click(node) {\n        try {\n            node.dispatchEvent(new MouseEvent('click'));\n        }\n        catch (e) {\n            var evt = document.createEvent('MouseEvents');\n            evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80, 20, false, false, false, false, 0, null);\n            node.dispatchEvent(evt);\n        }\n    }\n    static get isMacOSWebView() {\n        return navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent);\n    }\n    static _saveAs;\n    static get saveAs() {\n        if (!this._saveAs) {\n            this._saveAs = this.initSaveAs();\n        }\n        return this._saveAs;\n    }\n    static initSaveAs() {\n        let result;\n        // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n        result = ('download' in HTMLAnchorElement.prototype && !this.isMacOSWebView)\n            ? (blob, name, opts) => {\n                return new Promise((resolve) => {\n                    var URL = URL || webkitURL;\n                    // Namespace is used to prevent conflict w/ Chrome Poper Blocker extension (Issue #561)\n                    var a = document.createElementNS('http://www.w3.org/1999/xhtml', 'a');\n                    name = name || 'download';\n                    a.download = name;\n                    a.rel = 'noopener';\n                    if (typeof blob === 'string') {\n                        a.href = blob;\n                        if (a.origin !== location.origin) {\n                            this.corsEnabled(a.href)\n                                ? this.download(blob, name, opts)\n                                : this.click(a);\n                        }\n                        else {\n                            this.click(a);\n                        }\n                        resolve();\n                    }\n                    else {\n                        a.href = URL.createObjectURL(blob);\n                        setTimeout(() => { URL.revokeObjectURL(a.href); resolve(); }, 4E4);\n                        setTimeout(() => { this.click(a); }, 0);\n                    }\n                });\n            }\n            : 'msSaveOrOpenBlob' in navigator\n                ? (blob, name, opts) => {\n                    return new Promise((resolve) => {\n                        name = name || 'download';\n                        if (typeof blob === 'string') {\n                            if (this.corsEnabled(blob)) {\n                                this.download(blob, name, opts);\n                                resolve();\n                            }\n                            else {\n                                var a = document.createElement('a');\n                                a.href = blob;\n                                a.target = '_blank';\n                                setTimeout(() => { this.click(a); resolve(); });\n                            }\n                        }\n                        else {\n                            navigator['msSaveOrOpenBlob'](this.bom(blob, opts), name);\n                            resolve();\n                        }\n                    });\n                }\n                : (blob, name, opts, popup) => {\n                    return new Promise((resolve) => {\n                        popup = popup || open('', '_blank');\n                        if (popup) {\n                            popup.document.title =\n                                popup.document.body.innerText = 'downloading...';\n                        }\n                        if (typeof blob === 'string') {\n                            this.download(blob, name, opts);\n                            resolve();\n                            return;\n                        }\n                        var force = blob.type === 'application/octet-stream';\n                        var isSafari = /constructor/i.test(HTMLElement.toString()) || window['safari'];\n                        var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n                        if ((isChromeIOS || (force && isSafari) || this.isMacOSWebView) && typeof FileReader !== 'undefined') {\n                            var reader = new FileReader();\n                            reader.onloadend = () => {\n                                var url = reader.result;\n                                url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;');\n                                if (popup)\n                                    popup.location.href = url;\n                                else\n                                    location.replace(url);\n                                popup = null;\n                                resolve();\n                            };\n                            reader.readAsDataURL(blob);\n                        }\n                        else {\n                            var URL = URL || webkitURL;\n                            var url = URL.createObjectURL(blob);\n                            if (popup)\n                                popup.location = url;\n                            else\n                                location.href = url;\n                            popup = null;\n                            setTimeout(() => { URL.revokeObjectURL(url); resolve(); }, 4E4);\n                        }\n                    });\n                };\n        return result;\n    }\n}\nLib.FileSaver.Namespace=`Core.Lib`;\r\n_.Lib.FileSaver=Lib.FileSaver;\r\n","dependances":[{"fullName":"Blob","isStrong":true},{"fullName":"Core.Lib.FileSaverOption","isStrong":true},{"fullName":"Promise","isStrong":true},{"fullName":"HTMLAnchorElement","isStrong":false}],"fullName":"Core.Lib.FileSaver","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.Sheet = class Sheet extends Aventus.WebComponent {\n    get 'format'() { return this.getStringAttr('format') }\n    set 'format'(val) { this.setStringAttr('format', val) }\rget 'orientation'() { return this.getStringAttr('orientation') }\n    set 'orientation'(val) { this.setStringAttr('orientation', val) }\r    static sizes = new Map([\n        [\"A3\", new Map([\n                [\"portrait\", { width: 297, height: 420 }],\n                [\"landscape\", { width: 420, height: 297 }],\n            ])],\n        [\"A4\", new Map([\n                [\"portrait\", { width: 210, height: 297 }],\n                [\"landscape\", { width: 297, height: 210 }],\n            ])],\n        [\"A5\", new Map([\n                [\"portrait\", { width: 148, height: 210 }],\n                [\"landscape\", { width: 210, height: 148 }],\n            ])],\n        [\"legal\", new Map([\n                [\"portrait\", { width: 216, height: 357 }],\n                [\"landscape\", { width: 357, height: 216 }],\n            ])],\n        [\"letter\", new Map([\n                [\"portrait\", { width: 216, height: 279 }],\n                [\"landscape\", { width: 280, height: 216 }],\n            ])],\n    ]);\n    currentWrapper;\n    currentBody;\n    currentPage;\n    basicPage;\n    pageWrappers = [];\n    settings;\n    static __style = `:host{--_sheet-padding: var(--sheet-padding, 0)}:host .sheet{box-sizing:border-box;color:#000;display:flex;flex-direction:column;flex-shrink:0;margin:0;overflow:hidden;padding:var(--_sheet-padding);page-break-before:page;position:relative;user-select:text}:host .sheet .header,:host .sheet .footer{flex-grow:0;flex-shrink:0;width:100%}:host .sheet .body{flex-grow:1;overflow:hidden;width:100%}:host .sheet .body .body-wrapper{width:100%}@media screen{:host .sheet{background-color:#fff;box-shadow:0 .5mm 2mm rgba(0,0,0,.3)}}:host([format=A3][orientation=portrait]) .sheet{height:420mm;width:297mm}:host([format=A3][orientation=landscape]) .sheet{height:297mm;width:420mm}:host([format=A4][orientation=portrait]) .sheet{height:297mm;width:210mm}:host([format=A4][orientation=landscape]) .sheet{height:210mm;width:297mm}:host([format=A5][orientation=portrait]) .sheet{height:210mm;width:148mm}:host([format=A5][orientation=landscape]) .sheet{height:148mm;width:210mm}:host([format=letter][orientation=portrait]) .sheet{height:279mm;width:216mm}:host([format=letter][orientation=landscape]) .sheet{height:216mm;width:280mm}:host([format=legal][orientation=portrait]) .sheet{height:357mm;width:216mm}:host([format=legal][orientation=landscape]) .sheet{height:216mm;width:357mm}`;\n    constructor() {\n            super();\n            const settings = this.sheetSettings(this.defaultSettings());\n            this.settings = settings;\n            this.format = settings.format;\n            this.orientation = settings.orientation;\n            this.style.setProperty(\"--sheet-padding\", settings.padding);\nif (this.constructor == Sheet) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return Sheet;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Sheet.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'header':`<slot name=\"header\"></slot>`,'default':`<slot></slot>`,'footer':`<slot name=\"footer\"></slot>` }, \n        blocks: { 'default':`<div class=\"sheet\">\r    <div class=\"header\" _id=\"sheet_0\">\r        <slot name=\"header\"></slot>\r    </div>\r    <div class=\"body\" _id=\"sheet_1\">\r        <div class=\"body-wrapper\" _id=\"sheet_2\">\r            <slot></slot>\r        </div>\r    </div>\r    <div class=\"footer\" _id=\"sheet_3\">\r        <slot name=\"footer\"></slot>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"headerEl\",\n      \"ids\": [\n        \"sheet_0\"\n      ]\n    },\n    {\n      \"name\": \"bodyEl\",\n      \"ids\": [\n        \"sheet_1\"\n      ]\n    },\n    {\n      \"name\": \"bodyWrapper\",\n      \"ids\": [\n        \"sheet_2\"\n      ]\n    },\n    {\n      \"name\": \"footerEl\",\n      \"ids\": [\n        \"sheet_3\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Sheet\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('format')){ this['format'] = \"A4\"; }\rif(!this.hasAttribute('orientation')){ this['orientation'] = \"portrait\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('format');\rthis.__upgradeProperty('orientation');\r }\n    defaultSettings() {\n        return {\n            format: \"A4\",\n            orientation: \"portrait\",\n            padding: \"0\",\n            calculateOnDisplay: true\n        };\n    }\n    addSinglePageValue() {\n        let children = this.currentPage.querySelectorAll(\"[page-number]\");\n        for (let child of children) {\n            child.innerHTML = this.pageWrappers.length + '';\n        }\n    }\n    addAllPagesValue() {\n        let children = this.shadowRoot.querySelectorAll(\"[page-total]\");\n        for (let child of children) {\n            child.innerHTML = this.pageWrappers.length + '';\n        }\n    }\n    createPage(splitter, container) {\n        this.currentPage = this.basicPage.cloneNode(true);\n        this.currentBody = this.currentPage.querySelector(\".body\");\n        this.currentWrapper = this.currentPage.querySelector(\".body-wrapper\");\n        this.pageWrappers.push(this.currentWrapper);\n        this.shadowRoot.appendChild(this.currentPage);\n        const result = this.onNewPage(splitter, container);\n        this.addSinglePageValue();\n        if (!result)\n            return this.currentWrapper;\n        return result;\n    }\n    getIdentifier(node) {\n        let result = [];\n        let samePage = true;\n        const loop = (el) => {\n            if (el instanceof Element) {\n                if (el.classList.contains(\"body-wrapper\")) {\n                    samePage = el == this.currentWrapper;\n                    return;\n                }\n                if (el.classList.length > 0) {\n                    result.push(\".\" + Array.from(el.classList.values()).join(\".\"));\n                }\n            }\n            if (!el.parentNode)\n                return;\n            loop(el.parentNode);\n        };\n        loop(node);\n        if (samePage) {\n            return null;\n        }\n        return result.reverse().join(\" \");\n    }\n    cloneFromParent(classname, container) {\n        let parent = Aventus.ElementExtension.findParentByClass(container, classname);\n        let result = null;\n        const loop = (element, parentClone) => {\n            let nodeClone = element.cloneNode();\n            parentClone.appendChild(nodeClone);\n            if (element == container) {\n                result = nodeClone;\n                return;\n            }\n            if (element instanceof HTMLElement && element.hasAttribute(\"page-avoid-other\")) {\n                for (let child of Array.from(element.childNodes)) {\n                    if (child instanceof HTMLElement) {\n                        if (child.contains(container))\n                            loop(child, nodeClone);\n                    }\n                    else {\n                        loop(child, nodeClone);\n                    }\n                }\n            }\n            else {\n                for (let child of Array.from(element.childNodes)) {\n                    loop(child, nodeClone);\n                }\n            }\n        };\n        if (parent) {\n            loop(parent, this.currentWrapper);\n        }\n        else {\n            debugger;\n            console.warn(\"Parent \" + classname + \" not found from element\", container);\n        }\n        return result;\n    }\n    calculatePageLoop(element, children, nb = 0) {\n        let lastSplitter = null;\n        let lastIndex = 0;\n        let hasNewPageG = false;\n        for (let i = 0; i < children.length; i++) {\n            const child = children[i];\n            if (child instanceof Components.SheetSplitter) {\n                lastSplitter = child;\n                lastIndex = i;\n                continue;\n            }\n            element.appendChild(child);\n            if (this.currentWrapper.offsetHeight > this.currentBody.offsetHeight) {\n                const children2 = Array.from(child.childNodes);\n                for (let child2 of children2) {\n                    child.removeChild(child2);\n                }\n                const hasNewPage = this.calculatePageLoop(child, children2, nb + 1);\n                if (hasNewPage) {\n                    hasNewPageG = true;\n                }\n                if (!hasNewPage) {\n                    for (let child2 of children2) {\n                        child.appendChild(child2);\n                    }\n                    if (lastSplitter) {\n                        for (let j = lastIndex + 1; j <= i; j++) {\n                            element.removeChild(children[j]);\n                        }\n                        const newWrapper = this.createPage(lastSplitter, element);\n                        let missingChild = children.slice(lastIndex + 1);\n                        this.calculatePageLoop(newWrapper, missingChild);\n                        return true;\n                    }\n                    else {\n                        if (nb == 0) {\n                            debugger;\n                            if (child instanceof HTMLElement) {\n                                child.style.backgroundColor = \"red\";\n                            }\n                            throw {\n                                msg: 'Can\\'t find a page-splitter',\n                                element: child\n                            };\n                        }\n                        else {\n                            element.removeChild(child);\n                        }\n                        return false;\n                    }\n                }\n                if (this.pageWrappers.includes(element) && element != this.currentWrapper) {\n                    element = this.currentWrapper;\n                }\n                else {\n                    const identifier = this.getIdentifier(element);\n                    if (identifier) {\n                        const el = this.currentWrapper.querySelector(identifier);\n                        if (el) {\n                            element = el;\n                        }\n                    }\n                }\n            }\n        }\n        return hasNewPageG;\n    }\n    calculatePage() {\n        const mainChildren = Array.from(this.bodyWrapper.childNodes);\n        for (let mainChild of mainChildren) {\n            this.bodyWrapper.removeChild(mainChild);\n        }\n        this.currentPage = this.shadowRoot.querySelector(\".sheet\");\n        this.basicPage = this.currentPage.cloneNode(true);\n        this.currentWrapper = this.bodyWrapper;\n        this.currentBody = this.bodyEl;\n        this.pageWrappers.push(this.currentWrapper);\n        try {\n            this.addSinglePageValue();\n            this.calculatePageLoop(this.bodyWrapper, mainChildren);\n            this.addAllPagesValue();\n            const elements = Array.from(this.shadowRoot.querySelectorAll(\"rk-sheet-splitter\"));\n            for (let element of elements) {\n                element.remove();\n            }\n        }\n        catch (e) {\n            console.error(e);\n        }\n    }\n    urlToBase64(url) {\n        return new Promise(async (resolve, reject) => {\n            try {\n                const response = await fetch(url);\n                const blob = await response.blob();\n                const reader = new FileReader();\n                reader.onloadend = () => resolve(reader.result);\n                reader.onerror = reject;\n                reader.readAsDataURL(blob);\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    }\n    async export() {\n        let stylesheets = this.constructor['__styleSheets'];\n        let cssTxt = \"\";\n        for (let name in stylesheets) {\n            cssTxt += Aventus.Style.sheetToString(stylesheets[name]);\n        }\n        cssTxt = cssTxt.replace(/\\:host\\((.*?)\\)/g, 'body\\$1');\n        cssTxt = cssTxt.replace(/\\:host/g, 'body');\n        const regexVariables = /var\\((--.*?)[,|\\)]/g;\n        let m = null;\n        let computedStyle = null;\n        const cssVarValue = {};\n        while ((m = regexVariables.exec(cssTxt)) !== null) {\n            if (m.index === regexVariables.lastIndex) {\n                regexVariables.lastIndex++;\n            }\n            if (cssVarValue[m[1]])\n                continue;\n            if (!computedStyle) {\n                computedStyle = getComputedStyle(this);\n            }\n            let v = computedStyle.getPropertyValue(m[1]);\n            if (v) {\n                cssVarValue[m[1]] = v;\n            }\n        }\n        let cssVarTxt = \"\";\n        for (let key in cssVarValue) {\n            cssVarTxt += `${key}:${cssVarValue[key]};`;\n        }\n        if (cssVarTxt)\n            cssTxt = `body{${cssVarTxt}}` + cssTxt;\n        let attributes = [];\n        for (let attr of this.attributes) {\n            attributes.push(attr.nodeName + \"=\\\"\" + attr.nodeValue + \"\\\"\");\n        }\n        let imgs = this.shadowRoot.querySelectorAll(\"img\");\n        const imgMemory = {};\n        for (let img of imgs) {\n            if (img.src && !img.src.startsWith(\"data:\")) {\n                if (!imgMemory[img.src]) {\n                    imgMemory[img.src] = await this.urlToBase64(img.src);\n                }\n                img.src = imgMemory[img.src];\n            }\n        }\n        const fonts = await Lib.FontManager.getFontRulesBase64();\n        let generalStyle = \"\";\n        // for(let i = 0; i < document.styleSheets.length; i++) {\n        //     let sheet: CSSStyleSheet = document.styleSheets[i];\n        //     if(sheet.href?.endsWith(\"/autoload/default.css\")) {\n        //         for(let j = 0; j < sheet.cssRules.length; j++) {\n        //             let rule = sheet.cssRules[j];\n        //             if(!(rule instanceof CSSStyleRule)) continue;\n        //             if([\":root\", \"*\"].includes(rule.selectorText)) {\n        //                 generalStyle += rule.cssText + \"\\n\";\n        //             }\n        //         }\n        //     }\n        // }\n        cssTxt = generalStyle + cssTxt;\n        const sizeTxt = this.format + \" \" + this.orientation;\n        const sizes = {\n            \"A3\": {\n                height: '420mm',\n                width: '297mm'\n            },\n            \"A4\": {\n                height: '297mm',\n                width: '210mm'\n            },\n            \"A5\": {\n                height: '210mm',\n                width: '148mm'\n            },\n            \"letter\": {\n                height: '279mm',\n                width: '216mm'\n            },\n            \"legal\": {\n                height: '357mm',\n                width: '216mm'\n            }\n        };\n        const widthTxt = this.orientation == 'portrait' ? sizes[this.format].width : sizes[this.format].height;\n        const heightTxt = this.orientation == 'portrait' ? sizes[this.format].height : sizes[this.format].width;\n        const txt = `<!DOCTYPE html>\n            <html lang=\"en\">\n            <head>\n                <meta charset=\"UTF-8\">\n                <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n                <title>Document</title>\n                <link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@300&amp;display=swap\" rel=\"stylesheet\" />\n                <style>\n                    html {\n                        -webkit-print-color-adjust: exact;\n                        print-color-adjust: exact;\n                    }\n                    html, body {\n                        margin: 0;\n                        padding: 0;\n                    }\n                    body {\n                        width: ${widthTxt};\n                        height:  ${heightTxt};\n                    }\n                    @page {\n                        size: ${sizeTxt};\n                        margin: 0;\n                    }\n                    ${fonts}\n                </style>\n                <style>${cssTxt}</style>\n            </head>\n            <body ${attributes.join(\" \")}>\n                ${this.shadowRoot.innerHTML}\n            </body>\n            </html>`;\n        return txt;\n    }\n    async saveAs(name) {\n        let blob = new Blob([await this.export()], {\n            type: \"text/html\"\n        });\n        Lib.FileSaver.saveAs(blob, name);\n    }\n    postCreation() {\n        super.postCreation();\n        if (this.settings.calculateOnDisplay) {\n            this.calculatePage();\n        }\n    }\n    static isISheetElement(node) {\n        return typeof node.getHtml == 'function' && typeof node.getCSS == 'function';\n    }\n    static getSize(format, orientation) {\n        return this.sizes.get(format).get(orientation);\n    }\n    static mmToPx(mm) { return mm * 3.7795275591; }\n    static pxToMm(px) { return px / 3.7795275591; }\n}\nComponents.Sheet.Namespace=`Core.Components`;\n_.Components.Sheet=Components.Sheet;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.ISheetElement","isStrong":false},{"fullName":"Map","isStrong":true},{"fullName":"Core.Components.SheetFormat","isStrong":true},{"fullName":"Core.Components.SheetOrientation","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"Node","isStrong":false},{"fullName":"Core.Components.SheetSettings","isStrong":false},{"fullName":"Core.Components.SheetSplitter","isStrong":false},{"fullName":"Aventus.ElementExtension","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"CSSStyleSheet","isStrong":false},{"fullName":"Aventus.Style","isStrong":false},{"fullName":"RegExpExecArray","isStrong":false},{"fullName":"CSSStyleDeclaration","isStrong":false},{"fullName":"Core.Lib.FontManager","isStrong":false},{"fullName":"Core.Lib.FileSaver","isStrong":false}],"fullName":"Core.Components.Sheet","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.SheetPreview = class SheetPreview extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"filename\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'loading'() { return this.getBoolAttr('loading') }\n    set 'loading'(val) { this.setBoolAttr('loading', val) }\r    get 'filename'() { return this.getStringProp('filename') }\n    set 'filename'(val) { this.setStringAttr('filename', val) }\r    get 'zoom'() {\n\t\t\t\t\t\treturn this.__watch[\"zoom\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'zoom'(val) {\n\t\t\t\t\t\tthis.__watch[\"zoom\"] = val;\n\t\t\t\t\t}\r    __registerWatchesActions() {\n    this.__addWatchesActions(\"zoom\", ((target) => {\n    target.contentEl.zoom = target.zoom / 100;\n}));\r    super.__registerWatchesActions();\n}\n    static __style = `:host{display:flex;flex-direction:column;height:100%;width:100%}:host .menu{background-color:var(--primary-color);border-bottom:1px solid var(--lighter);box-shadow:var(--elevation-4);display:flex;flex-grow:0;flex-shrink:0;height:42px;padding:3px 15px;width:100%;z-index:2;gap:3px}:host .menu mi-icon{border:1px solid var(--darker);cursor:pointer;padding:5px}:host .menu mi-icon:hover{box-shadow:0px 0px 2px #000 inset}:host .content{--scrollbar-content-padding: 10px;background-color:var(--secondary-color);flex-grow:1;width:100%;padding-top:2px}:host .content *::slotted(*){display:flex;flex-wrap:wrap;gap:10px;justify-content:center}:host .footer{align-items:center;background-color:var(--primary-color);border-top:1px solid var(--lighter);display:flex;flex-direction:row;flex-grow:0;flex-shrink:0;font-size:13px;height:30px;justify-content:space-between;padding:0 15px;width:100%;z-index:2}:host .footer .slider{align-items:center;display:flex;gap:10px}:host .footer .slider mi-icon{cursor:pointer;font-size:18px}:host .footer .slider rk-slider{width:50px}:host .footer .slider .value{font-size:13px;text-align:center;width:30px}:host rk-loading{opacity:0;visibility:hidden}:host(:not([loading])) rk-loading{transition:opacity 1s var(--bezier-curve),visibility 1s var(--bezier-curve)}:host([loading]) rk-loading{opacity:1;visibility:visible}`;\n    __getStatic() {\n        return SheetPreview;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(SheetPreview.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"menu\">\r    <mi-icon icon=\"save\" _id=\"sheetpreview_0\"></mi-icon>\r    <mi-icon icon=\"print\" _id=\"sheetpreview_1\"></mi-icon>\r</div><rk-scrollable class=\"content\" _id=\"sheetpreview_2\">\r    <slot></slot>\r</rk-scrollable><div class=\"footer\">\r    <div class=\"filename\" _id=\"sheetpreview_3\"></div>\r    <div class=\"slider\">\r        <mi-icon icon=\"remove\" _id=\"sheetpreview_4\"></mi-icon>\r        <rk-slider min=\"30\" max=\"200\" _id=\"sheetpreview_5\"></rk-slider>\r        <mi-icon icon=\"add\" _id=\"sheetpreview_6\"></mi-icon>\r        <div class=\"value\" _id=\"sheetpreview_7\"></div>\r    </div>\r</div><rk-loading></rk-loading>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"contentEl\",\n      \"ids\": [\n        \"sheetpreview_2\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"sheetpreview_3°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__ef3ef2c620c645514a1d0f1099b9edaamethod0())}`,\n      \"once\": true\n    },\n    \"sheetpreview_7°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__ef3ef2c620c645514a1d0f1099b9edaamethod3())}%`,\n      \"once\": true\n    }\n  },\n  \"bindings\": [\n    {\n      \"id\": \"sheetpreview_5\",\n      \"injectionName\": \"value\",\n      \"eventNames\": [\n        \"onChange\"\n      ],\n      \"inject\": (c) => c.comp.__ef3ef2c620c645514a1d0f1099b9edaamethod1(),\n      \"extract\": (c, v) => c.comp.__ef3ef2c620c645514a1d0f1099b9edaamethod2(v),\n      \"once\": true,\n      \"isCallback\": true\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"sheetpreview_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.save(e, pressInstance); }\n    },\n    {\n      \"id\": \"sheetpreview_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.print(e, pressInstance); }\n    },\n    {\n      \"id\": \"sheetpreview_4\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.removeZoom(e, pressInstance); }\n    },\n    {\n      \"id\": \"sheetpreview_6\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.addZoom(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"SheetPreview\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('loading')) { this.attributeChangedCallback('loading', false, false); }\rif(!this.hasAttribute('filename')){ this['filename'] = undefined; }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"zoom\"] = 100;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('loading');\rthis.__upgradeProperty('filename');\rthis.__correctGetter('zoom');\r }\n    __listBoolProps() { return [\"loading\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    removeZoom() {\n        let newZoom = this.zoom;\n        newZoom = Math.floor(newZoom / 10) * 10;\n        if (newZoom == this.zoom) {\n            newZoom -= 10;\n        }\n        if (newZoom < 30) {\n            newZoom = 30;\n        }\n        if (newZoom != this.zoom) {\n            this.zoom = newZoom;\n        }\n    }\n    addZoom() {\n        let newZoom = this.zoom;\n        newZoom = Math.ceil(newZoom / 10) * 10;\n        if (newZoom == this.zoom) {\n            newZoom += 10;\n        }\n        if (newZoom > 200) {\n            newZoom = 200;\n        }\n        if (newZoom != this.zoom) {\n            this.zoom = newZoom;\n        }\n    }\n    async print() {\n        let el = this.getElementsInSlot()[0];\n        if (el instanceof Components.Sheet) {\n            let execLoading = async (fct) => {\n                this.loading = true;\n                try {\n                    if (fct instanceof Promise) {\n                        await fct;\n                    }\n                    else {\n                        await fct();\n                    }\n                }\n                catch (e) {\n                }\n                this.loading = false;\n            };\n            let parent = this.findParentByType(System.Application);\n            if (parent) {\n                execLoading = parent.showLoading;\n            }\n            await execLoading(async () => {\n                let pdf = new Data.DataTypes.Pdf();\n                pdf.Name = this.filename ?? \"doucment\";\n                pdf.Html = await el.export();\n                let pdfResult = await new Routes.PdfRouter().Build({\n                    pdf\n                });\n                if (pdfResult.result) {\n                    Lib.FileSaver.saveAs(pdfResult.result, (this.filename ?? \"doucment\") + \".pdf\");\n                }\n            });\n        }\n    }\n    save() {\n        let el = this.getElementsInSlot()[0];\n        if (el instanceof Components.Sheet) {\n            el.saveAs((this.filename ?? \"doucment\") + \".html\");\n        }\n    }\n    __ef3ef2c620c645514a1d0f1099b9edaamethod0() {\n        return this.filename;\n    }\n    __ef3ef2c620c645514a1d0f1099b9edaamethod3() {\n        return this.zoom;\n    }\n    __ef3ef2c620c645514a1d0f1099b9edaamethod1() {\n        return this.zoom;\n    }\n    __ef3ef2c620c645514a1d0f1099b9edaamethod2(v) {\n        if (this) {\n            this.zoom = v;\n        }\n    }\n}\nComponents.SheetPreview.Namespace=`Core.Components`;\nComponents.SheetPreview.Tag=`rk-sheet-preview`;\n_.Components.SheetPreview=Components.SheetPreview;\nif(!window.customElements.get('rk-sheet-preview')){window.customElements.define('rk-sheet-preview', Components.SheetPreview);Aventus.WebComponentInstance.registerDefinition(Components.SheetPreview);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.SheetPreview","isStrong":false},{"fullName":"Core.Components.Sheet","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"Core.Data.DataTypes.Pdf","isStrong":false},{"fullName":"Core.Routes.PdfRouter","isStrong":false},{"fullName":"Core.Lib.FileSaver","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Slider","isStrong":false},{"fullName":"Loading","isStrong":false}],"fullName":"Core.Components.SheetPreview","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-sheet-preview"},{"code":"Components.VirtualForm=class VirtualForm {\n    __watcher;\n    get item() {\n        return this.__watcher.item;\n    }\n    set item(item) {\n        this.__watcher.item = item;\n    }\n    get parts() {\n        return this.__watcher.form;\n    }\n    _elements = {};\n    get elements() {\n        return { ...this._elements };\n    }\n    constructor() {\n        this.onWatcherChanged = this.onWatcherChanged.bind(this);\n        this.__watcher = Aventus.Watcher.get({\n            form: {}\n        }, this.onWatcherChanged);\n    }\n    transformForm(form) {\n        const result = form;\n        const createKey = (key) => {\n            this.transformFormPart(key, result[key]);\n        };\n        for (let key in result) {\n            createKey(key);\n        }\n        return result;\n    }\n    transformFormPart(key, part) {\n        if (!part)\n            return;\n        const realPart = part;\n        realPart.onValidation = new Aventus.Callback();\n        realPart.onValueChange = new Aventus.Callback();\n        realPart.test = async () => {\n            const result = await this.validate(key);\n            return result;\n        };\n        if (!this._elements[key]) {\n            this._elements[key] = [];\n        }\n        realPart.register = (el) => {\n            if (!this._elements[key].includes(el)) {\n                this._elements[key].push(el);\n            }\n        };\n        realPart.unregister = (el) => {\n            const index = this._elements[key].indexOf(el);\n            if (index != -1) {\n                this._elements[key].splice(index, 1);\n            }\n        };\n        realPart.value = {\n            get: () => {\n                return Aventus.getValueFromObject(key, this.item);\n            },\n            set: (value) => {\n                return Aventus.setValueToObject(key, this.item, value);\n            }\n        };\n    }\n    setForm(item) {\n        this.__watcher.form = this.transformForm(item);\n    }\n    addFormEntry(name, part) {\n        this.transformFormPart(name, part);\n        let form = this.parts;\n        form[name] = part;\n    }\n    removeFormEntry(name) {\n        if (!this.parts)\n            return;\n        for (let key in this.parts) {\n            if (key == name) {\n                delete this.parts[key];\n                return;\n            }\n        }\n    }\n    destroy() {\n        delete this.__watcher.form;\n        if (this.__watcher.item) {\n            delete this.__watcher.item;\n        }\n        this.__watcher = undefined;\n        this.onItemChange.clear();\n    }\n    init(config) {\n        this.globalValidation = config.validate;\n        this.validateOnChange = config.validateOnChange;\n        this.handleValidateNoInputError = config.handleValidateNoInputError;\n        this.handleExecuteNoInputError = config.handleExecuteNoInputError;\n    }\n    _globalValidation;\n    set globalValidation(fct) {\n        this._globalValidation = fct;\n    }\n    _validateOnChange;\n    set validateOnChange(value) {\n        this._validateOnChange = value;\n    }\n    _handleValidateNoInputError;\n    set handleValidateNoInputError(value) {\n        this._handleValidateNoInputError = value;\n    }\n    _handleExecuteNoInputError;\n    set handleExecuteNoInputError(value) {\n        this._handleExecuteNoInputError = value;\n    }\n    onItemChange = new Aventus.Callback();\n    async onWatcherChanged(action, path, value) {\n        if (!this.parts)\n            return;\n        if (path == \"item\") {\n            for (let key in this.parts) {\n                let formPart = this.parts[key];\n                formPart.onValueChange.trigger([]);\n            }\n        }\n        else if (path.startsWith(\"item.\")) {\n            let key = path.substring(\"item.\".length);\n            if (this.parts[key]) {\n                let formPart = this.parts[key];\n                formPart.onValueChange.trigger([]);\n                const validateOnChange = formPart.validateOnChange === undefined ? this._validateOnChange : formPart.validateOnChange;\n                if (validateOnChange) {\n                    this.validate(key);\n                }\n            }\n            this.onItemChange.trigger([action, key, value]);\n        }\n    }\n    async _validate(key) {\n        try {\n            if (!this.parts)\n                return { \"@general\": [\"Aucun formulaire trouvé\"] };\n            if (key !== undefined) {\n                let errorsForm = [];\n                if (this.parts[key]) {\n                    let formPart = this.parts[key];\n                    let value = formPart.value.get();\n                    const resultToError = (result) => {\n                        if (result === false) {\n                            errorsForm.push('Le champs n\\'est pas valide');\n                        }\n                        else if (typeof result == 'string' && result !== \"\") {\n                            errorsForm.push(result);\n                        }\n                        else if (Array.isArray(result)) {\n                            errorsForm = [...errorsForm, ...result];\n                        }\n                    };\n                    if (formPart.validate) {\n                        const global = async () => {\n                            if (this._globalValidation) {\n                                const result = await this._globalValidation(key, value);\n                                resultToError(result);\n                            }\n                        };\n                        let result = await formPart.validate(value, global);\n                        resultToError(result);\n                        const proms = formPart.onValidation.trigger([errorsForm]);\n                        // const errors2d = await Promise.all(proms);\n                        // for(let errorsTemp of errors2d) {\n                        //     for(let errorTemp of errorsTemp) {\n                        //         if(!errors.includes(errorTemp)) {\n                        //             errors.push(errorTemp);\n                    }\n                    else if (this._globalValidation) {\n                        const result = await this._globalValidation(key, value);\n                        resultToError(result);\n                    }\n                }\n                return errorsForm.length == 0 ? {} : { [key]: errorsForm };\n            }\n            let errors = {};\n            for (let key in this.parts) {\n                errors = { ...errors, ...await this._validate(key) };\n            }\n            return errors;\n        }\n        catch (e) {\n            return { \"@general\": [e + \"\"] };\n        }\n    }\n    async validate(key) {\n        const result = await this._validate(key);\n        const unhandle = {};\n        let triggerUnhandle = false;\n        for (let key in result) {\n            if (!this._elements[key] || this._elements[key].length == 0) {\n                triggerUnhandle = true;\n                unhandle[key] = result[key];\n            }\n        }\n        if (triggerUnhandle && this._handleValidateNoInputError) {\n            this._handleValidateNoInputError(unhandle);\n        }\n        return Object.keys(result).length == 0;\n    }\n    async execute(query) {\n        let queryResult = await query;\n        if (queryResult.errors.length > 0) {\n            let noPrintErrors = [];\n            const elements = this.elements;\n            for (let error of queryResult.errors) {\n                if (error.details) {\n                    let found = false;\n                    for (let detail of error.details) {\n                        if (detail instanceof AventusSharp.Data.FieldErrorInfo) {\n                            if (elements[detail.Name]) {\n                                for (const element of elements[detail.Name]) {\n                                    element.errors.push(error.message);\n                                }\n                                found = true;\n                                break;\n                            }\n                        }\n                    }\n                    if (found) {\n                        continue;\n                    }\n                }\n                noPrintErrors.push(error);\n            }\n            if (noPrintErrors.length > 0 && this._handleExecuteNoInputError) {\n                this._handleExecuteNoInputError(noPrintErrors);\n            }\n            queryResult.errors = noPrintErrors;\n        }\n        return queryResult;\n    }\n}\nComponents.VirtualForm.Namespace=`Core.Components`;\r\n_.Components.VirtualForm=Components.VirtualForm;\r\n","dependances":[{"fullName":"Aventus.Watcher","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.getValueFromObject","isStrong":false},{"fullName":"Aventus.setValueToObject","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Core.System.ApplicationQueryFctResult","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"AventusSharp.Data.FieldErrorInfo","isStrong":false},{"fullName":"Core.Components.FormPart","isStrong":false},{"fullName":"Core.Components.FormSchema","isStrong":false},{"fullName":"Core.Components.FormValidate","isStrong":false},{"fullName":"Core.Components.FormValidateResult","isStrong":false},{"fullName":"Core.Components.IFormElement","isStrong":false},{"fullName":"Core.Components.InternalForm","isStrong":false},{"fullName":"Core.Components.InternalFormPart","isStrong":false},{"fullName":"Core.Components.VirtualFormConfig","isStrong":false}],"fullName":"Core.Components.VirtualForm","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"State.ApplicationFormState=class ApplicationFormState extends State.ApplicationState {\n    _form;\n    get form() {\n        return this._form.parts;\n    }\n    get item() {\n        return this._form.item;\n    }\n    set item(item) {\n        this._form.item = item;\n    }\n    constructor() {\n        super();\n        this._form = new Components.VirtualForm();\n        this._form.setForm(this.defineForm());\n        this._form.init(this.configureForm(this.defaultConfigureForm()));\n        this._onItemChange = this._onItemChange.bind(this);\n        this._form.onItemChange.add(this._onItemChange);\n    }\n    _onItemChange(action, path, value) {\n        this.saveState();\n        this.onItemChange(action, path, value);\n    }\n    onItemChange(action, path, value) {\n    }\n    defaultConfigureForm() {\n        return {\n            handleValidateNoInputError: (errors) => {\n                this.application.alert({\n                    title: \"Erreur de validation\",\n                    description: Object.values(errors).flat().join(\"<br>\")\n                });\n            },\n            handleExecuteNoInputError: (errors) => {\n                //this.application.popupErrors(errors);\n            }\n        };\n    }\n    syncField(addField) {\n        super.syncField(addField);\n        addField(\"item\");\n    }\n    validate(key) {\n        return this._form.validate(key);\n    }\n    async execute(query) {\n        const queryResult = await this._form.execute(query);\n        return await this.application.parseErrors(queryResult);\n    }\n    addFormEntry(name, part) {\n        this._form.addFormEntry(name, part);\n    }\n    removeFormEntry(name) {\n        this._form.removeFormEntry(name);\n    }\n}\nState.ApplicationFormState.Namespace=`Core.State`;\r\nState.ApplicationFormState.$schema={...(State.ApplicationState?.$schema ?? {}), \"_form\":\"Core.Components.VirtualForm\",\"form\":\"Core.Components.InternalForm\"};\r\nAventus.Converter.register(State.ApplicationFormState.Fullname, State.ApplicationFormState);\r\n_.State.ApplicationFormState=State.ApplicationFormState;\r\n","dependances":[{"fullName":"Core.State.ApplicationState","isStrong":true},{"fullName":"Aventus.IState","isStrong":true},{"fullName":"Core.Components.VirtualForm","isStrong":false},{"fullName":"Core.Components.InternalForm","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"Core.Components.FormSchema","isStrong":false},{"fullName":"Core.Components.VirtualFormConfig","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Core.System.ApplicationQueryFctResult","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Awaited","isStrong":false},{"fullName":"Core.Components.FormPart","isStrong":false}],"fullName":"Core.State.ApplicationFormState","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"State.CreateOrUpdate=class CreateOrUpdate extends State.ApplicationFormState {\n    static _state = \"\";\n    static get state() {\n        if (this._state == \"\") {\n            let cst = this;\n            new cst();\n        }\n        return this._state;\n    }\n    get item() {\n        return this._form.item;\n    }\n    set item(item) {\n        this._form.item = item;\n    }\n    constructor(item) {\n        super();\n        this.constructor['_state'] = this.genericState();\n        this.item = item ?? this.newElement();\n    }\n    /**\n     * @inheritdoc\n     */\n    get name() {\n        const id = this.item?.Id ?? 0;\n        return this.genericState().replace(\"{id:number}\", id + \"\");\n    }\n    genericState() {\n        return `/${this.defineObjectName().toLowerCase()}/{id:number}`;\n    }\n    /**\n     * This will validate the form and save the model though the ram\n     * Errors are deals by this method. If success, result !== undefined\n     */\n    async save() {\n        if (!this.item)\n            return;\n        let result;\n        const validationResult = await this.validate();\n        if (validationResult === true) {\n            let ramResult;\n            if (this.item.Id == 0) {\n                ramResult = await this.application.showLoading(this.defineRAM().createWithError(this.item));\n            }\n            else {\n                ramResult = await this.application.showLoading(this.defineRAM().updateWithError(this.item));\n            }\n            if (ramResult == null) {\n                return undefined;\n            }\n            if (ramResult.errors.length > 0) {\n                let noPrintErrors = [];\n                const elements = this._form.elements;\n                for (let error of ramResult.errors) {\n                    if (error.details) {\n                        let found = false;\n                        for (let detail of error.details) {\n                            if (detail instanceof AventusSharp.Data.FieldErrorInfo) {\n                                if (elements[detail.Name]) {\n                                    for (const element of elements[detail.Name]) {\n                                        element.errors.push(error.message);\n                                    }\n                                    found = true;\n                                    break;\n                                }\n                            }\n                        }\n                        if (found) {\n                            continue;\n                        }\n                    }\n                    noPrintErrors.push(error);\n                }\n                ramResult.errors = noPrintErrors;\n            }\n            return await this.application.parseErrors(ramResult);\n        }\n        return result;\n    }\n    back() {\n        const splitted = this.name.split(\"/\");\n        splitted.pop();\n        this.application.navigate(splitted.join(\"/\"));\n    }\n    cancel() {\n        this.back();\n    }\n}\nState.CreateOrUpdate.Namespace=`Core.State`;\r\nState.CreateOrUpdate.$schema={...(State.ApplicationFormState?.$schema ?? {}), \"item\":\"T\",\"name\":\"string\"};\r\nAventus.Converter.register(State.CreateOrUpdate.Fullname, State.CreateOrUpdate);\r\n_.State.CreateOrUpdate=State.CreateOrUpdate;\r\n","dependances":[{"fullName":"Core.State.ApplicationFormState","isStrong":true},{"fullName":"Partial","isStrong":false},{"fullName":"Aventus.IState","isStrong":true},{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Aventus.Ram","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.ResultRamWithError","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false},{"fullName":"AventusSharp.Data.FieldErrorInfo","isStrong":false}],"fullName":"Core.State.CreateOrUpdate","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Components.PopupFormStorable = class PopupFormStorable extends Components.GenericPopup {\n    get item() {\n        return this._form.item;\n    }\n    set item(value) {\n        this._form.item = value;\n    }\n    get form() {\n        return this._form.parts;\n    }\n    _form;\n    static __style = ``;\n    constructor() {\n            super();\n            this._form = new Components.VirtualForm();\n            this._form.setForm(this.defineSchema());\n            this.onItemChange = this.onItemChange.bind(this);\n            this._form.onItemChange.add(this.onItemChange);\nif (this.constructor == PopupFormStorable) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return PopupFormStorable;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PopupFormStorable.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"PopupFormStorable\";\n    }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('item');\rthis.__correctGetter('form');\r }\n    validate() {\n        return this._form.validate();\n    }\n    onItemChange(action, path, value) {\n    }\n}\nComponents.PopupFormStorable.Namespace=`Core.Components`;\n_.Components.PopupFormStorable=Components.PopupFormStorable;\n","dependances":[{"fullName":"Core.Components.GenericPopup","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Core.Components.InternalForm","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"Core.Components.VirtualForm","isStrong":false},{"fullName":"Core.Components.FormSchema","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false}],"fullName":"Core.Components.PopupFormStorable","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.PopupForm = class PopupForm extends Components.GenericPopup {\n    get item() {\n        return this._form.item;\n    }\n    set item(value) {\n        this._form.item = value;\n    }\n    get form() {\n        return this._form.parts;\n    }\n    _form;\n    static __style = ``;\n    constructor() {\n            super();\n            this._form = new Components.VirtualForm();\n            this._form.setForm(this.defineSchema());\nif (this.constructor == PopupForm) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return PopupForm;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(PopupForm.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"PopupForm\";\n    }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('item');\rthis.__correctGetter('form');\r }\n    validate() {\n        return this._form.validate();\n    }\n}\nComponents.PopupForm.Namespace=`Core.Components`;\n_.Components.PopupForm=Components.PopupForm;\n","dependances":[{"fullName":"Core.Components.GenericPopup","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.InternalForm","isStrong":false},{"fullName":"Core.Components.VirtualForm","isStrong":false},{"fullName":"Core.Components.FormSchema","isStrong":false},{"fullName":"Promise","isStrong":false}],"fullName":"Core.Components.PopupForm","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.FormElement = class FormElement extends Aventus.WebComponent {\n    get 'has_errors'() { return this.getBoolAttr('has_errors') }\n    set 'has_errors'(val) { this.setBoolAttr('has_errors', val) }\r    get 'errors'() {\n\t\t\t\t\t\treturn this.__watch[\"errors\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'errors'(val) {\n\t\t\t\t\t\tthis.__watch[\"errors\"] = val;\n\t\t\t\t\t}\rget 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\r    _formPart;\n    get formPart() {\n        return this._formPart;\n    }\n    set formPart(value) {\n        this.unlinkFormPart();\n        this._formPart = value;\n        this.linkFormPart();\n    }\n    onChange = new Aventus.Callback();\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"errors\", ((target) => {\n    target.has_errors = target.errors.length > 0;\n}));\rthis.__addWatchesActions(\"value\");\r    super.__registerWatchesActions();\n}\n    static __style = ``;\n    constructor() { super(); if (this.constructor == FormElement) { throw \"can't instanciate an abstract class\"; } \rthis.refreshValueFromForm=this.refreshValueFromForm.bind(this)\rthis.onFormValidation=this.onFormValidation.bind(this) }\n    __getStatic() {\n        return FormElement;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(FormElement.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"FormElement\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('has_errors')) { this.attributeChangedCallback('has_errors', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"errors\"] = [];\rw[\"value\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('formPart');\rthis.__upgradeProperty('has_errors');\rthis.__correctGetter('errors');\rthis.__correctGetter('value');\r }\n    __listBoolProps() { return [\"has_errors\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    refreshValueFromForm() {\n        if (this._formPart) {\n            this.errors = [];\n            this.value = this._formPart.value.get();\n        }\n    }\n    unlinkFormPart() {\n        if (this._formPart) {\n            this._formPart.unregister(this);\n            this._formPart.onValueChange.remove(this.refreshValueFromForm);\n            this._formPart.onValidation.remove(this.onFormValidation);\n        }\n    }\n    linkFormPart() {\n        if (this._formPart) {\n            this._formPart.register(this);\n            this._formPart.onValueChange.add(this.refreshValueFromForm);\n            this._formPart.onValidation.add(this.onFormValidation);\n            this.refreshValueFromForm();\n        }\n        else {\n            this.value = undefined;\n        }\n    }\n    onFormValidation(errors) {\n        this.errors = errors;\n        return this.errors;\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.unlinkFormPart();\n    }\n}\nComponents.FormElement.Namespace=`Core.Components`;\n_.Components.FormElement=Components.FormElement;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.IFormElement","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.FormElement","isStrong":false},{"fullName":"Core.Components.InternalFormPart","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false}],"fullName":"Core.Components.FormElement","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.InlineText = class InlineText extends Components.FormElement {\n    get 'edit'() { return this.getBoolAttr('edit') }\n    set 'edit'(val) { this.setBoolAttr('edit', val) }\r    static __style = `:host input{background-color:rgba(0,0,0,0);border:none;box-shadow:none;display:none;margin:0;outline:none;padding:0}:host([edit]) .display{display:none}:host([edit]) input{display:block}`;\n    __getStatic() {\n        return InlineText;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(InlineText.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"display\"></div><input autocomplete=\"off\" _id=\"inlinetext_0\" />` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"inputEl\",\n      \"ids\": [\n        \"inlinetext_0\"\n      ]\n    }\n  ],\n  \"events\": [\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inlinetext_0\",\n      \"fct\": (e, c) => c.comp.removeErrors(e)\n    },\n    {\n      \"eventName\": \"input\",\n      \"id\": \"inlinetext_0\",\n      \"fct\": (e, c) => c.comp.onValueChange(e)\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"InlineText\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('edit')) { this.attributeChangedCallback('edit', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('edit');\r }\n    __listBoolProps() { return [\"edit\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    removeErrors() {\n        this.errors = [];\n    }\n    onValueChange() {\n        this.value = this.inputEl.value;\n        this.onChange.trigger([this.value]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n}\nComponents.InlineText.Namespace=`Core.Components`;\nComponents.InlineText.Tag=`rk-inline-text`;\n_.Components.InlineText=Components.InlineText;\nif(!window.customElements.get('rk-inline-text')){window.customElements.define('rk-inline-text', Components.InlineText);Aventus.WebComponentInstance.registerDefinition(Components.InlineText);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false}],"fullName":"Core.Components.InlineText","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-inline-text"},{"code":"Components.Textarea = class Textarea extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"placeholder\", \"icon\", \"value\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'resize'() { return this.getBoolAttr('resize') }\n    set 'resize'(val) { this.setBoolAttr('resize', val) }\rget 'autogrow'() { return this.getBoolAttr('autogrow') }\n    set 'autogrow'(val) { this.setBoolAttr('autogrow', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'placeholder'() { return this.getStringProp('placeholder') }\n    set 'placeholder'(val) { this.setStringAttr('placeholder', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\rget 'value'() { return this.getStringProp('value') }\n    set 'value'(val) { this.setStringAttr('value', val) }\r    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"value\", ((target) => {\n    target.inputEl.value = target.value ?? \"\";\n}));\r }\n    static __style = `:host{--_textarea-height: var(--textarea-height, 30px);--_textarea-background-color: var(--textarea-background-color, var(--form-element-background, white));--_textarea-icon-height: var(--textarea-icon-height, calc(var(--_textarea-height) / 2));--_textarea-error-logo-size: var(--textarea-error-logo-size, calc(var(--_textarea-height) / 2));--_textarea-font-size: var(--textarea-font-size, var(--form-element-font-size, 16px));--_textarea-font-size-label: var(--textarea-font-size-label, var(--form-element-font-size-label, calc(var(--_textarea-font-size) * 0.95)));--_textarea-input-border: var(--textarea-input-border, var(--form-element-border, 1px solid var(--lighter-active)));--_textarea-border-radius: var(--textarea-border-radius, var(--form-element-border-radius, 0));--_textarea-autogrow-max-height: var(--textarea-autogrow-max-height, none)}:host{min-width:100px;width:100%}:host label{cursor:pointer;display:none;font-size:var(--_textarea-font-size-label);margin-bottom:5px;margin-left:3px}:host .input{align-items:center;background-color:var(--_textarea-background-color);border:var(--_textarea-input-border);border-radius:var(--_textarea-border-radius);display:flex;height:var(--_textarea-height);min-height:var(--_textarea-height);padding:0 10px;position:relative;width:100%}:host .input .icon{display:none;flex-shrink:0;height:var(--_textarea-icon-height);margin-right:10px}:host .input textarea{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;flex-grow:1;font-family:\"Roboto\",sans-serif;font-size:var(--_textarea-font-size);height:100%;margin:0;min-width:0;outline:none;padding:5px 0;padding-right:10px;resize:none}:host .input .error-logo{align-items:center;background-color:var(--red);border-radius:var(--border-radius-round);color:#fff;display:none;flex-shrink:0;font-size:calc(var(--_textarea-error-logo-size) - 5px);height:var(--_textarea-error-logo-size);justify-content:center;width:var(--_textarea-error-logo-size)}:host .input rk-resize{display:none}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:10px;margin-bottom:0px}:host .errors div{margin:5px 0}:host([has_errors]) .input{border:1px solid var(--red)}:host([has_errors]) .input .error-logo{display:flex}:host([has_errors]) .errors{display:block}:host([icon]:not([icon=\"\"])) .input .icon{display:block}:host([label]:not([label=\"\"])) label{display:flex}:host([resize]) .input rk-resize{display:block}:host([autogrow]) .input{max-height:var(--_textarea-autogrow-max-height)}:host([autogrow]) .input textarea{overflow:auto;max-height:var(--_textarea-autogrow-max-height)}`;\n    __getStatic() {\n        return Textarea;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Textarea.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<label for=\"input\" _id=\"textarea_0\"></label><div class=\"input\" _id=\"textarea_1\">\r    <rk-img class=\"icon\" _id=\"textarea_2\"></rk-img>\r    <textarea rows=\"1\" id=\"input\" _id=\"textarea_3\"></textarea>\r    <div class=\"error-logo\">!</div>\r    <rk-resize _id=\"textarea_4\"></rk-resize>\r</div><div class=\"errors\">\r    <template _id=\"textarea_5\"></template>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"inputCont\",\n      \"ids\": [\n        \"textarea_1\"\n      ]\n    },\n    {\n      \"name\": \"inputEl\",\n      \"ids\": [\n        \"textarea_3\"\n      ]\n    },\n    {\n      \"name\": \"resizeEl\",\n      \"ids\": [\n        \"textarea_4\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"textarea_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__1d98574e598563b66bef89b75eeea5admethod1())}`,\n      \"once\": true\n    },\n    \"textarea_2°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__1d98574e598563b66bef89b75eeea5admethod2())}`,\n      \"once\": true\n    },\n    \"textarea_3°placeholder\": {\n      \"fct\": (c) => `${c.print(c.comp.__1d98574e598563b66bef89b75eeea5admethod3())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"textarea_3\",\n      \"fct\": (e, c) => c.comp.removeErrors(e)\n    },\n    {\n      \"eventName\": \"input\",\n      \"id\": \"textarea_3\",\n      \"fct\": (e, c) => c.comp.onValueChange(e)\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r        <template _id=\"textarea_6\"></template>\r    `);\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'textarea_5',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\rconst templ1 = new Aventus.Template(this);\rtempl1.setTemplate(`\r            <div _id=\"textarea_7\"></div>\r        `);\rtempl1.setActions({\n  \"content\": {\n    \"textarea_7°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__1d98574e598563b66bef89b75eeea5admethod4(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rtempl0.addIf({\n                    anchorId: 'textarea_6',\n                    parts: [{once: true,\n                    condition: (c) => true,\n                    template: templ1\n                }]\n            });\r }\n    getClassName() {\n        return \"Textarea\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('resize')) { this.attributeChangedCallback('resize', false, false); }\rif(!this.hasAttribute('autogrow')) { this.attributeChangedCallback('autogrow', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('placeholder')){ this['placeholder'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\rif(!this.hasAttribute('value')){ this['value'] = \"\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('resize');\rthis.__upgradeProperty('autogrow');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('placeholder');\rthis.__upgradeProperty('icon');\rthis.__upgradeProperty('value');\r }\n    __listBoolProps() { return [\"resize\",\"autogrow\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    removeErrors() {\n        this.errors = [];\n    }\n    calculateAutoGrow() {\n        if (this.autogrow) {\n            this.inputEl.style.height = 'auto';\n            let h = this.inputEl.scrollHeight + 'px';\n            this.inputEl.style.height = h;\n            this.inputCont.style.height = h;\n        }\n    }\n    onValueChange() {\n        this.calculateAutoGrow();\n        this.value = this.inputEl.value;\n        this.onChange.trigger([this.value]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    postCreation() {\n        if (this.resize) {\n            this.resizeEl.init(this.inputCont);\n        }\n        this.calculateAutoGrow();\n    }\n    __1d98574e598563b66bef89b75eeea5admethod1() {\n        return this.label;\n    }\n    __1d98574e598563b66bef89b75eeea5admethod2() {\n        return this.icon;\n    }\n    __1d98574e598563b66bef89b75eeea5admethod3() {\n        return this.placeholder;\n    }\n    __1d98574e598563b66bef89b75eeea5admethod4(error) {\n        return error;\n    }\n}\nComponents.Textarea.Namespace=`Core.Components`;\nComponents.Textarea.Tag=`rk-textarea`;\n_.Components.Textarea=Components.Textarea;\nif(!window.customElements.get('rk-textarea')){window.customElements.define('rk-textarea', Components.Textarea);Aventus.WebComponentInstance.registerDefinition(Components.Textarea);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Textarea","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLTextAreaElement","isStrong":false},{"fullName":"Core.Components.Resize","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"Resize","isStrong":false}],"fullName":"Core.Components.Textarea","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-textarea"},{"code":"Components.Switch = class Switch extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"disabled\", \"checked\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'label_end'() { return this.getBoolAttr('label_end') }\n    set 'label_end'(val) { this.setBoolAttr('label_end', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'disabled'() { return this.getBoolProp('disabled') }\n    set 'disabled'(val) { this.setBoolAttr('disabled', val) }\rget 'checked'() { return this.getBoolProp('checked') }\n    set 'checked'(val) { this.setBoolAttr('checked', val) }\r    get 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\r    __registerWatchesActions() {\n    this.__addWatchesActions(\"value\", ((target) => {\n    target.checked = target.value;\n}));\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"disabled\", ((target) => {\n}));\rthis.__addPropertyActions(\"checked\", ((target) => {\n    target.value = target.checked;\n}));\r }\n    static __style = `:host{--_switch-background-color: var(--switch-background-color, var(--form-element-background, white));--_switch-dot-size: var(--switch-dot-size, 20px);--_switch-dot-color: var(--switch-dot-color, var(--secondary-color));--_switch-active-dot-color: var(--switch-active-dot-color, var(--secondary-color-active));--_switch-active-background-color: var(--switch-active-background-color, var(--secondary-color));--_switch-font-size: var(--switch-font-size, var(--form-element-font-size, 16px));--_switch-font-size-label: var(--switch-font-size-label, var(--form-element-font-size-label, calc(var(--_input-font-size) * 0.95)));--_switch-border-radius: var(--switch-border-radius, 10px)}:host{align-items:center;display:flex;font-size:var(--_switch-font-size);min-height:var(--_switch-dot-size);width:100%}:host .label:not(:empty){cursor:pointer;font-size:var(--_switch-font-size-label);margin-right:30px;transition:filter .3s var(--bezier-curve)}:host .bar{align-items:center;background-color:var(--_switch-background-color);border-radius:var(--_switch-border-radius);cursor:pointer;display:flex;height:10px;position:relative;transition:filter .3s var(--bezier-curve);width:30px}:host .bar input{appearance:none;background-color:rgba(0,0,0,0);border:0;cursor:pointer;height:100%;left:0;margin:0;outline:none;padding:0;position:absolute;top:0;width:100%}:host .bar .bar-content{align-items:center;background-color:rgba(0,0,0,0);display:flex;height:100%;pointer-events:none;position:relative;width:100%}:host .bar .bar-content .dot{background-color:var(--_switch-dot-color);border-radius:var(--border-radius-round);box-shadow:none;cursor:pointer;height:var(--_switch-dot-size);left:0%;pointer-events:all;position:absolute;transform:translateX(-50%);transition:left var(--bezier-curve) .3s,box-shadow var(--bezier-curve) .3s,background-color var(--bezier-curve) .3s;width:var(--_switch-dot-size)}:host .bar .bar-content .bar-fill{background-color:var(--_switch-active-background-color);border-radius:var(--border-radius-round);height:100%;left:0;pointer-events:all;position:absolute;top:0;transition:width var(--bezier-curve) .3s;width:0%}:host .bar input:checked+.bar-content .dot{background-color:var(--_switch-active-dot-color);box-shadow:0 0 5px var(--emphasize);left:100%}:host .bar input:checked+.bar-content .bar-fill{width:100%}:host([label_end]) .label:not(:empty){margin-left:30px;margin-right:0px;order:2}:host([checked]) .bar .bar-content .dot{background-color:var(--_switch-active-dot-color);box-shadow:0 0 5px var(--emphasize);left:100%}:host([checked]) .bar .bar-content .bar-fill{width:100%}:host([disabled]) .bar{cursor:not-allowed;filter:brightness(0.75)}:host([disabled]) .bar input{cursor:not-allowed}:host([disabled]) .bar .bar-content .dot{cursor:not-allowed}:host([disabled]) .label{cursor:default;filter:brightness(0.75)}`;\n    __getStatic() {\n        return Switch;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Switch.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"label\" _id=\"switch_0\"></div><div class=\"bar\" _id=\"switch_1\">\r    <div class=\"bar-content\">\r        <div class=\"bar-fill\"></div>\r        <div class=\"dot\"></div>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"switch_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__0c8ab707a91de23d54bc9c39ebe1aeafmethod0())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"switch_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleActive(e, pressInstance); }\n    },\n    {\n      \"id\": \"switch_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.toggleActive(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Switch\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('label_end')) { this.attributeChangedCallback('label_end', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('disabled')) { this.attributeChangedCallback('disabled', false, false); }\rif(!this.hasAttribute('checked')) { this.attributeChangedCallback('checked', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"value\"] = false;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('label_end');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('disabled');\rthis.__upgradeProperty('checked');\rthis.__correctGetter('value');\r }\n    __listBoolProps() { return [\"label_end\",\"disabled\",\"checked\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    toggleActive() {\n        if (this.disabled)\n            return;\n        this.checked = !this.checked;\n        this.onChange.trigger([this.checked]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    __0c8ab707a91de23d54bc9c39ebe1aeafmethod0() {\n        return this.label;\n    }\n}\nComponents.Switch.Namespace=`Core.Components`;\nComponents.Switch.Tag=`rk-switch`;\n_.Components.Switch=Components.Switch;\nif(!window.customElements.get('rk-switch')){window.customElements.define('rk-switch', Components.Switch);Aventus.WebComponentInstance.registerDefinition(Components.Switch);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Switch","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Core.Components.Switch","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-switch"},{"code":"Components.Slider = class Slider extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"min\", \"max\", \"value\", \"step\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'popup'() { return this.getStringAttr('popup') }\n    set 'popup'(val) { this.setStringAttr('popup', val) }\rget 'no_transition'() { return this.getBoolAttr('no_transition') }\n    set 'no_transition'(val) { this.setBoolAttr('no_transition', val) }\rget 'popup_visible'() { return this.getBoolAttr('popup_visible') }\n    set 'popup_visible'(val) { this.setBoolAttr('popup_visible', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'min'() { return this.getNumberProp('min') }\n    set 'min'(val) { this.setNumberAttr('min', val) }\rget 'max'() { return this.getNumberProp('max') }\n    set 'max'(val) { this.setNumberAttr('max', val) }\rget 'value'() { return this.getNumberProp('value') }\n    set 'value'(val) { this.setNumberAttr('value', val) }\rget 'step'() { return this.getNumberProp('step') }\n    set 'step'(val) { this.setNumberAttr('step', val) }\r    currentPercent = 0;\n    timerPopup = 0;\n    onDragStart = new Aventus.Callback();\n    onDragStop = new Aventus.Callback();\n    onValidateValue = new Aventus.Callback();\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"min\", ((target) => {\n    target.calculatePercent();\n}));\rthis.__addPropertyActions(\"max\", ((target) => {\n    target.calculatePercent();\n}));\rthis.__addPropertyActions(\"value\", ((target) => {\n    target.calculatePercent();\n}));\r }\n    static __style = `:host{--_slider-background-color: var(--slider-background-color, var(--form-element-background, white));--_slider-background-image: var(--slider-background-image, none);--_slider-background-position: var(--slider-background-position, 0 0);--_slider-background-size: var(--slider-background-size, auto);--_slider-active-background-color: var(--slider-active-background-color, var(--secondary-color-active));--_slider-dot-color: var(--slider-dot-color, var(--secondary-color));--_slider-dot-size: var(--slider-dot-size, var(--form-element-font-size, 16px));--_slider-popup-font-size: var(--slider-popup-font-size, var(--font-size-sm));--_slider-font-size-label: var(--slider-font-size-label, var(--form-element-font-size-label));--_slider-border-radius: var(--slider-border-radius, var(--form-element-border-radius));--_slider-bar-height: var(--slider-bar-height, 5px);--local-slider-dot-percent: 0%}:host{align-items:center;display:flex;flex-direction:column;height:var(--_slider-dot-size);justify-content:center;min-width:100px;width:100%}:host label{cursor:pointer;display:none;flex-shrink:0;font-size:var(--_slider-font-size-label);margin-bottom:5px;margin-left:3px;width:100%}:host .bar{align-items:center;background-color:var(--_slider-background-color);background-image:var(--_slider-background-image);background-position:var(--_slider-background-position);background-size:var(--_slider-background-size);border-radius:var(--_slider-border-radius);cursor:pointer;display:flex;flex-direction:row;flex-shrink:0;height:var(--_slider-bar-height);position:relative;width:100%}:host .bar .bar-fill{background-color:var(--_slider-active-background-color);border-radius:var(--border-radius-round);height:100%;left:0;pointer-events:all;position:absolute;top:0;transition:width var(--bezier-curve) .3s;width:var(--local-slider-dot-percent)}:host .bar .dot{background-color:var(--_slider-dot-color);border-radius:var(--border-radius-round);box-shadow:var(--elevation-2);cursor:pointer;height:var(--_slider-dot-size);left:var(--local-slider-dot-percent);pointer-events:all;position:absolute;transform:translateX(-50%);transition:left var(--bezier-curve) .3s,box-shadow var(--bezier-curve) .3s,background-color var(--bezier-curve) .3s;width:var(--_slider-dot-size);z-index:10}:host .bar .value{background-color:var(--_slider-dot-color);border-radius:var(--_slider-border-radius);box-shadow:var(--elevation-2);font-size:var(--_slider-popup-font-size);left:var(--local-slider-dot-percent);opacity:0;padding:5px 10px;padding-bottom:2px;position:absolute;top:0;transform:translateY(calc(-100% - 12px)) translateX(-50%);transform-origin:center center;transition:left var(--bezier-curve) .3s,opacity var(--bezier-curve) .3s,visibility var(--bezier-curve) .3s;visibility:hidden}:host .bar .value::after{border-left:6px solid rgba(0,0,0,0);border-right:6px solid rgba(0,0,0,0);border-top:8px solid var(--_slider-dot-color);bottom:-7px;content:\"\";left:50%;position:absolute;transform:translateX(-50%)}:host([no_transition]) .bar .bar-fill{transition:none}:host([no_transition]) .bar .dot{transition:none}:host([no_transition]) .bar .value{transition:opacity var(--bezier-curve) .3s,visibility var(--bezier-curve) .3s}:host([popup_visible]) .bar .value{opacity:1;visibility:visible}:host([label]:not([label=\"\"])) label{display:flex}`;\n    __getStatic() {\n        return Slider;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Slider.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'dot':`<slot name=\"dot\"></slot>`,'bar':`<slot name=\"bar\"></slot>` }, \n        blocks: { 'default':`<label for=\"element\" class=\"label\" _id=\"slider_0\"></label><div class=\"bar\" _id=\"slider_1\">\r    <div class=\"value\" part=\"popup\" _id=\"slider_2\"></div>\r    <div class=\"bar-fill\">\r    </div>\r    <div class=\"dot\" _id=\"slider_3\">\r        <slot name=\"dot\"></slot>\r    </div>\r    <slot name=\"bar\"></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"barEl\",\n      \"ids\": [\n        \"slider_1\"\n      ]\n    },\n    {\n      \"name\": \"dotEl\",\n      \"ids\": [\n        \"slider_3\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"slider_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__2a6eb0eb8efd251816e4040a1af5645dmethod0())}`,\n      \"once\": true\n    },\n    \"slider_2°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__2a6eb0eb8efd251816e4040a1af5645dmethod1())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"Slider\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('popup')){ this['popup'] = 'never'; }\rif(!this.hasAttribute('no_transition')) { this.attributeChangedCallback('no_transition', false, false); }\rif(!this.hasAttribute('popup_visible')) { this.attributeChangedCallback('popup_visible', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('min')){ this['min'] = 0; }\rif(!this.hasAttribute('max')){ this['max'] = 100; }\rif(!this.hasAttribute('value')){ this['value'] = 0; }\rif(!this.hasAttribute('step')){ this['step'] = 1; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('popup');\rthis.__upgradeProperty('no_transition');\rthis.__upgradeProperty('popup_visible');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('min');\rthis.__upgradeProperty('max');\rthis.__upgradeProperty('value');\rthis.__upgradeProperty('step');\r }\n    __listBoolProps() { return [\"no_transition\",\"popup_visible\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    addMoveDot() {\n        let startX = 0;\n        let currentPosition = 0;\n        new Aventus.DragAndDrop({\n            element: this.dotEl,\n            applyDrag: false,\n            offsetDrag: 0,\n            stopPropagation: false,\n            onPointerDown: (e) => {\n                Components.Scrollable.lock(this);\n                this.no_transition = true;\n                if (this.popup == \"onMove\") {\n                    clearTimeout(this.timerPopup);\n                    this.popup_visible = true;\n                }\n                this.onDragStart.trigger([]);\n            },\n            onStart: (e) => {\n                startX = e.pageX;\n                currentPosition = this.dotEl.offsetLeft;\n            },\n            onMove: (e) => {\n                let diff = startX - e.pageX;\n                let newPosition = currentPosition - diff;\n                let percent = newPosition / this.offsetWidth * 100;\n                this.setPercent(percent);\n                this.calculateValue();\n            },\n            onPointerUp: () => {\n                Components.Scrollable.unlock(this);\n                this.no_transition = false;\n                if (this.popup == \"onMove\") {\n                    this.timerPopup = setTimeout(() => {\n                        this.popup_visible = false;\n                    }, 1000);\n                }\n                this.onDragStop.trigger([]);\n            }\n        });\n    }\n    addClickBar() {\n        new Aventus.PressManager({\n            element: this.barEl,\n            onPress: (e) => {\n                let left = this.getBoundingClientRect().left;\n                let newPosition = e.pageX - left;\n                let percent = newPosition / this.offsetWidth * 100;\n                this.setPercent(percent);\n                this.calculateValue();\n                if (this.popup == \"onMove\") {\n                    clearTimeout(this.timerPopup);\n                    this.timerPopup = setTimeout(() => {\n                        this.popup_visible = false;\n                    }, 1000);\n                    this.popup_visible = true;\n                }\n            }\n        });\n    }\n    calculatePercent(value) {\n        if (!this.isConnected)\n            return;\n        if (value === undefined) {\n            value = this.value;\n        }\n        let range = this.max - this.min;\n        let percent = (value - this.min) / range * 100;\n        this.setPercent(percent);\n    }\n    calculateValue(emit = true) {\n        let range = this.max - this.min;\n        let value = (range * this.currentPercent / 100) + this.min;\n        let diff = value % this.step;\n        if (diff > this.step / 2) {\n            value += (this.step - diff);\n        }\n        else {\n            value -= diff;\n        }\n        let result = this.onValidateValue.trigger([value]);\n        if (result.length > 0) {\n            if (result[0] != value) {\n                // we correct the value so apply percent\n                this.calculatePercent(result[0]);\n                value = result[0];\n            }\n        }\n        if (value != this.value) {\n            this.value = value;\n            if (emit) {\n                this.onChange.trigger([value]);\n                if (this.formPart) {\n                    this.formPart.value.set(this.value);\n                }\n            }\n        }\n    }\n    setPercent(percent) {\n        if (percent < 0) {\n            percent = 0;\n        }\n        else if (percent > 100) {\n            percent = 100;\n        }\n        // correct step\n        let range = this.max - this.min;\n        let value = (range * percent / 100) + this.min;\n        let diff = value % this.step;\n        if (diff > this.step / 2) {\n            value += (this.step - diff);\n        }\n        else {\n            value -= diff;\n        }\n        percent = (value - this.min) / range * 100;\n        this.currentPercent = percent;\n        this.style.setProperty(\"--local-slider-dot-percent\", percent + \"%\");\n    }\n    removeErrors() {\n        this.errors = [];\n    }\n    postCreation() {\n        super.postCreation();\n        this.addMoveDot();\n        this.addClickBar();\n        this.calculatePercent();\n        this.calculateValue(false);\n        if (this.popup == 'always') {\n            this.popup_visible = true;\n        }\n    }\n    __2a6eb0eb8efd251816e4040a1af5645dmethod0() {\n        return this.label;\n    }\n    __2a6eb0eb8efd251816e4040a1af5645dmethod1() {\n        return this.value;\n    }\n}\nComponents.Slider.Namespace=`Core.Components`;\nComponents.Slider.Tag=`rk-slider`;\n_.Components.Slider=Components.Slider;\nif(!window.customElements.get('rk-slider')){window.customElements.define('rk-slider', Components.Slider);Aventus.WebComponentInstance.registerDefinition(Components.Slider);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Slider","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Core.Components.Slider","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-slider"},{"code":"Components.InputNumber = class InputNumber extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"placeholder\", \"icon\", \"value\", \"min\", \"max\", \"unit\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'readonly'() { return this.getBoolAttr('readonly') }\n    set 'readonly'(val) { this.setBoolAttr('readonly', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'placeholder'() { return this.getStringProp('placeholder') }\n    set 'placeholder'(val) { this.setStringAttr('placeholder', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\rget 'value'() { return this.getNumberProp('value') }\n    set 'value'(val) { this.setNumberAttr('value', val) }\rget 'min'() { return this.getNumberProp('min') }\n    set 'min'(val) { this.setNumberAttr('min', val) }\rget 'max'() { return this.getNumberProp('max') }\n    set 'max'(val) { this.setNumberAttr('max', val) }\rget 'unit'() { return this.getStringProp('unit') }\n    set 'unit'(val) { this.setStringAttr('unit', val) }\r    errorsTxt = {};\n    defaultErrorsTxt = {\n        notNumber: \"Le nombre n'est pas valide\",\n        lowerThanMin: \"Le nombre n'est pas plus grand que \" + this.min,\n        biggerThanMax: \"Le nombre n'est pas plus petit que \" + this.max,\n    };\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"value\", ((target) => {\n    target.inputEl.value = target.value + '';\n}));\r }\n    static __style = `:host{--_input-number-height: var(--input-number-height, 30px);--_input-number-background-color: var(--input-number-background-color, var(--form-element-background, white));--_input-number-icon-height: var(--input-number-icon-height, calc(var(--_input-number-height) / 2));--_input-number-error-logo-size: var(--input-number-error-logo-size, calc(var(--_input-number-height) / 2));--_input-number-font-size: var(--input-number-font-size, var(--form-element-font-size, 16px));--_input-number-font-size-label: var(--input-number-font-size-label, var(--form-element-font-size-label, calc(var(--_input-number-font-size) * 0.95)));--_input-number-input-border: var(--input-number-input-border, var(--form-element-border, 1px solid var(--lighter-active)));--_input-number-border-radius: var(--input-number-border-radius, var(--form-element-border-radius, 0));--_input-number-unit-background-color: var(--input-number-unit-background-color, var(--secondary-color));--_input-number-unit-color: var(--input-number-unit-color, var(--text-color-secondary));--_input-number-readonly-background-color: var(--input-number-readonly-background-color, var(--form-element-background-readonly, var(--_input-number-background-color)));--_input-number-readonly-border: var(--input-number-readonly-border, var(--form-element-border-readonly, var(--_input-number-input-border)))}:host{min-width:100px;width:100%}:host label{display:none;font-size:var(--_input-number-font-size-label);margin-bottom:5px;margin-left:3px}:host .input{align-items:center;background-color:var(--_input-number-background-color);border:var(--_input-number-input-border);border-radius:var(--_input-number-border-radius);display:flex;height:var(--_input-number-height);overflow:hidden;padding:0 10px;width:100%}:host .input .icon{display:none;flex-shrink:0;height:var(--_input-number-icon-height);margin-right:10px}:host .input input{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;flex-grow:1;font-size:var(--_input-number-font-size);height:100%;margin:0;min-width:0;outline:none;padding:5px 0;padding-right:10px}:host .input .error-logo{align-items:center;background-color:var(--red);border-radius:var(--border-radius-round);color:#fff;display:none;flex-shrink:0;font-size:calc(var(--_input-number-error-logo-size) - 5px);height:var(--_input-number-error-logo-size);justify-content:center;width:var(--_input-number-error-logo-size)}:host .input .unit{align-items:center;background-color:var(--_input-number-unit-background-color);color:var(--_input-number-unit-color);display:flex;font-size:14px;height:100%;justify-content:center;margin-right:-10px;padding-left:10px;padding-right:10px}:host .input .unit:empty{display:none}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:0 10px}:host .errors>div{margin:5px 0}:host .errors>div:first-child{margin-top:10px}:host([has_errors]) .input{border:1px solid var(--red)}:host([has_errors]) .input .error-logo{display:flex}:host([has_errors]) .errors{display:block}:host([icon]:not([icon=\"\"])) .input .icon{display:block}:host([label]:not([label=\"\"])) label{display:flex}:host([readonly]){pointer-events:none}:host([readonly]) .input{background-color:var(--_input-readonly-background-color);border:var(--_input-readonly-border)}`;\n    __getStatic() {\n        return InputNumber;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(InputNumber.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'append':`<slot name=\"append\">\r        <span class=\"unit\" _id=\"inputnumber_3\"></span>\r    </slot>` }, \n        blocks: { 'default':`<label for=\"input\" _id=\"inputnumber_0\"></label><div class=\"input\">\r    <rk-img class=\"icon\" _id=\"inputnumber_1\"></rk-img>\r    <input inputmode=\"numeric\" pattern=\"[0-9]*\" autocomplete=\"off\" id=\"input\" _id=\"inputnumber_2\" />\r    <slot name=\"append\">\r        <span class=\"unit\" _id=\"inputnumber_3\"></span>\r    </slot>\r    <div class=\"error-logo\">!</div>\r</div><div class=\"errors\">\r    <template _id=\"inputnumber_4\"></template>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"inputEl\",\n      \"ids\": [\n        \"inputnumber_2\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"inputnumber_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__181298e531eab1a15f907371f4223808method1())}`,\n      \"once\": true\n    },\n    \"inputnumber_1°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__181298e531eab1a15f907371f4223808method2())}`,\n      \"once\": true\n    },\n    \"inputnumber_2°placeholder\": {\n      \"fct\": (c) => `${c.print(c.comp.__181298e531eab1a15f907371f4223808method3())}`,\n      \"once\": true\n    },\n    \"inputnumber_3°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__181298e531eab1a15f907371f4223808method4())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inputnumber_2\",\n      \"fct\": (e, c) => c.comp.removeErrors(e)\n    },\n    {\n      \"eventName\": \"input\",\n      \"id\": \"inputnumber_2\",\n      \"fct\": (e, c) => c.comp.onValueChange(e)\n    },\n    {\n      \"eventName\": \"blur\",\n      \"id\": \"inputnumber_2\",\n      \"fct\": (e, c) => c.comp.validate(e)\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r        <div _id=\"inputnumber_5\"></div>\r    `);\rtempl0.setActions({\n  \"content\": {\n    \"inputnumber_5°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__181298e531eab1a15f907371f4223808method5(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'inputnumber_4',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\r }\n    getClassName() {\n        return \"InputNumber\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('readonly')) { this.attributeChangedCallback('readonly', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('placeholder')){ this['placeholder'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\rif(!this.hasAttribute('value')){ this['value'] = 0; }\rif(!this.hasAttribute('min')){ this['min'] = undefined; }\rif(!this.hasAttribute('max')){ this['max'] = undefined; }\rif(!this.hasAttribute('unit')){ this['unit'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('readonly');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('placeholder');\rthis.__upgradeProperty('icon');\rthis.__upgradeProperty('value');\rthis.__upgradeProperty('min');\rthis.__upgradeProperty('max');\rthis.__upgradeProperty('unit');\r }\n    __listBoolProps() { return [\"readonly\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    removeErrors() {\n        this.errors = [];\n    }\n    isNumber() {\n        let valueTemp = Number(this.inputEl.value);\n        if (!this.inputEl.value || isNaN(valueTemp)) {\n            return false;\n        }\n        return true;\n    }\n    isBiggerThanMin() {\n        if (this.min != 0 || this.hasAttribute(\"min\")) {\n            return this.value >= this.min;\n        }\n        return true;\n    }\n    isLowerThanMax() {\n        if (this.max != 0 || this.hasAttribute(\"max\")) {\n            return this.value <= this.max;\n        }\n        return true;\n    }\n    localValidation() {\n        let errors = [];\n        if (!this.isNumber()) {\n            const txt = this.errorsTxt.notNumber ?? this.defaultErrorsTxt.notNumber;\n            errors.push(txt);\n        }\n        else if (!this.isBiggerThanMin()) {\n            const txt = this.errorsTxt.lowerThanMin ?? this.defaultErrorsTxt.lowerThanMin;\n            errors.push(txt);\n        }\n        else if (!this.isLowerThanMax()) {\n            const txt = this.errorsTxt.biggerThanMax ?? this.defaultErrorsTxt.biggerThanMax;\n            errors.push(txt);\n        }\n        return errors;\n    }\n    onFormValidation(errors) {\n        errors = [...this.localValidation(), ...errors];\n        return super.onFormValidation(errors);\n    }\n    async validate() {\n        if (!this.formPart) {\n            this.errors = this.localValidation();\n            return this.errors.length == 0;\n        }\n        return await this.formPart.test();\n    }\n    onValueChange() {\n        if (!this.isNumber()) {\n            return;\n        }\n        this.value = Number(this.inputEl.value);\n        this.onChange.trigger([this.value]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    __181298e531eab1a15f907371f4223808method1() {\n        return this.label;\n    }\n    __181298e531eab1a15f907371f4223808method2() {\n        return this.icon;\n    }\n    __181298e531eab1a15f907371f4223808method3() {\n        return this.placeholder;\n    }\n    __181298e531eab1a15f907371f4223808method4() {\n        return this.unit;\n    }\n    __181298e531eab1a15f907371f4223808method5(error) {\n        return error;\n    }\n}\nComponents.InputNumber.Namespace=`Core.Components`;\nComponents.InputNumber.Tag=`rk-input-number`;\n_.Components.InputNumber=Components.InputNumber;\nif(!window.customElements.get('rk-input-number')){window.customElements.define('rk-input-number', Components.InputNumber);Aventus.WebComponentInstance.registerDefinition(Components.InputNumber);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.InputNumber","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.InputNumber","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-input-number"},{"code":"Components.InputDate = class InputDate extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"placeholder\", \"icon\", \"icon_position\", \"time\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'year_format'() { return this.getStringAttr('year_format') }\n    set 'year_format'(val) { this.setStringAttr('year_format', val) }\rget 'month_format'() { return this.getStringAttr('month_format') }\n    set 'month_format'(val) { this.setStringAttr('month_format', val) }\rget 'day_format'() { return this.getStringAttr('day_format') }\n    set 'day_format'(val) { this.setStringAttr('day_format', val) }\rget 'locale'() { return this.getStringAttr('locale') }\n    set 'locale'(val) { this.setStringAttr('locale', val) }\rget 'time_zone'() { return this.getStringAttr('time_zone') }\n    set 'time_zone'(val) { this.setStringAttr('time_zone', val) }\rget 'is_focus'() { return this.getBoolAttr('is_focus') }\n    set 'is_focus'(val) { this.setBoolAttr('is_focus', val) }\rget 'clearable'() { return this.getBoolAttr('clearable') }\n    set 'clearable'(val) { this.setBoolAttr('clearable', val) }\rget 'show_clear_icon'() { return this.getBoolAttr('show_clear_icon') }\n    set 'show_clear_icon'(val) { this.setBoolAttr('show_clear_icon', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'placeholder'() { return this.getStringProp('placeholder') }\n    set 'placeholder'(val) { this.setStringAttr('placeholder', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\rget 'icon_position'() { return this.getStringProp('icon_position') }\n    set 'icon_position'(val) { this.setStringAttr('icon_position', val) }\rget 'time'() { return this.getBoolProp('time') }\n    set 'time'(val) { this.setBoolAttr('time', val) }\r    get 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\r    __registerWatchesActions() {\n    this.__addWatchesActions(\"value\", ((target) => {\n    target.setValueToInputs();\n}));\r    super.__registerWatchesActions();\n}\n    static __style = `:host{--_input-date-height: var(--input-date-height, 30px);--_input-date-background-color: var(--input-date-background-color, var(--form-element-background, white));--_input-date-icon-height: var(--input-date-icon-height, calc(var(--_input-date-height) / 2));--_input-date-error-logo-size: var(--input-date-error-logo-size, calc(var(--_input-date-height) / 2));--_input-date-font-size: var(--input-date-font-size, var(--form-element-font-size, 16px));--_input-date-font-size-label: var(--input-date-font-size-label, var(--form-element-font-size-label, calc(var(--_input-date-font-size) * 0.95)));--_input-date-input-border: var(--input-date-input-border, var(--form-element-border, 1px solid var(--lighter-active)));--_input-date-border-radius: var(--input-date-border-radius, var(--form-element-border-radius, 0))}:host{min-width:100px;width:100%}:host label{display:none;font-size:var(--_input-date-font-size-label);margin-bottom:5px;margin-left:3px;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0)}:host .input{align-items:center;background-color:var(--_input-date-background-color);border:var(--_input-date-input-border);border-radius:var(--_input-date-border-radius);display:flex;height:var(--_input-date-height);padding:0 10px;width:100%}:host .input .icon{display:none;flex-shrink:0;height:var(--_input-date-icon-height);margin-right:10px}:host .input .edit{align-items:center;display:flex;display:none;flex-grow:1;height:100%}:host .input .edit input{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;font-size:var(--_input-date-font-size);height:100%;margin:0;min-width:0;outline:none;padding:5px 0;text-align:center;width:20px}:host .input .edit .year-input{width:38px}:host .input .edit span{color:var(--text-color);font-size:var(--_input-date-font-size);height:100%;padding:5px 0;text-align:center}:host .input .visual{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;font-size:var(--_input-date-font-size);height:100%;margin:0;min-width:0;outline:none;padding:5px 0;width:20px;flex-grow:1}:host .input .clear-icon{font-size:18px;flex-shrink:0;display:none}:host .input .error-logo{align-items:center;background-color:var(--red);border-radius:var(--border-radius-round);color:#fff;display:none;flex-shrink:0;font-size:calc(var(--_input-date-error-logo-size) - 5px);height:var(--_input-date-error-logo-size);justify-content:center;width:var(--_input-date-error-logo-size)}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:10px;margin-bottom:0px}:host .errors div{margin:5px 0}:host([has_errors]) .input{border:1px solid var(--red)}:host([has_errors]) .input .error-logo{display:flex}:host([has_errors]) .errors{display:block}:host([icon]:not([icon=\"\"])) .input .icon{display:block}:host([icon_position=right]) .input .icon{margin-right:0px;order:2}:host([icon_position=right]) .input .input{order:1}:host([icon_position=right]) .input .error-logo{margin-left:10px;order:3}:host([label]:not([label=\"\"])) label{display:flex}:host(:not([time])) .time{display:none}:host([is_focus]) .input .edit{display:flex}:host([is_focus]) .input .visual{display:none}:host([show_clear_icon]) .input .clear-icon{display:inline-block}`;\n    __getStatic() {\n        return InputDate;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(InputDate.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'prepend':`<slot name=\"prepend\">\r        <rk-img class=\"icon\" _id=\"inputdate_1\"></rk-img>\r    </slot>`,'append':`<slot name=\"append\"></slot>` }, \n        blocks: { 'default':`<label for=\"input\" _id=\"inputdate_0\"></label><div class=\"input\">\r    <slot name=\"prepend\">\r        <rk-img class=\"icon\" _id=\"inputdate_1\"></rk-img>\r    </slot>\r    <input class=\"visual\" readonly _id=\"inputdate_2\" />\r    <div class=\"edit\">\r        <input autocomplete=\"off\" inputmode=\"numeric\" pattern=\"[0-9]*\" placeholder=\"xx\" _id=\"inputdate_3\" />\r        <span>.</span>\r        <input autocomplete=\"off\" inputmode=\"numeric\" pattern=\"[0-9]*\" placeholder=\"xx\" _id=\"inputdate_4\" />\r        <span>.</span>\r        <input class=\"year-input\" inputmode=\"numeric\" pattern=\"[0-9]*\" autocomplete=\"off\" placeholder=\"xxxx\" _id=\"inputdate_5\" />\r        <span class=\"time\">&nbsp;</span>\r        <input class=\"time\" inputmode=\"numeric\" pattern=\"[0-9]*\" autocomplete=\"off\" placeholder=\"xx\" _id=\"inputdate_6\" />\r        <span class=\"time\">:</span>\r        <input class=\"time\" inputmode=\"numeric\" pattern=\"[0-9]*\" autocomplete=\"off\" placeholder=\"xx\" _id=\"inputdate_7\" />\r    </div>\r    <slot name=\"append\"></slot>\r    <mi-icon class=\"clear-icon touch\" icon=\"close\" tabindex=\"-1\" _id=\"inputdate_8\"></mi-icon>\r    <div class=\"error-logo\">!</div>\r</div><div class=\"errors\">\r    <template _id=\"inputdate_9\"></template>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"iconEl\",\n      \"ids\": [\n        \"inputdate_1\"\n      ]\n    },\n    {\n      \"name\": \"dayEl\",\n      \"ids\": [\n        \"inputdate_3\"\n      ]\n    },\n    {\n      \"name\": \"monthEl\",\n      \"ids\": [\n        \"inputdate_4\"\n      ]\n    },\n    {\n      \"name\": \"yearEl\",\n      \"ids\": [\n        \"inputdate_5\"\n      ]\n    },\n    {\n      \"name\": \"hourEl\",\n      \"ids\": [\n        \"inputdate_6\"\n      ]\n    },\n    {\n      \"name\": \"minuteEl\",\n      \"ids\": [\n        \"inputdate_7\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"inputdate_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__85f0c0fbb346d55c45d594cadd252d33method1())}`,\n      \"once\": true\n    },\n    \"inputdate_1°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__85f0c0fbb346d55c45d594cadd252d33method2())}`,\n      \"once\": true\n    },\n    \"inputdate_2°value\": {\n      \"fct\": (c) => `${c.print(c.comp.__85f0c0fbb346d55c45d594cadd252d33method3())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inputdate_3\",\n      \"fct\": (e, c) => c.comp.selectContent(e)\n    },\n    {\n      \"eventName\": \"keydown\",\n      \"id\": \"inputdate_3\",\n      \"fct\": (e, c) => c.comp.triggerPoint(e)\n    },\n    {\n      \"eventName\": \"keyup\",\n      \"id\": \"inputdate_3\",\n      \"fct\": (e, c) => c.comp.validateLength2(e)\n    },\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inputdate_4\",\n      \"fct\": (e, c) => c.comp.selectContent(e)\n    },\n    {\n      \"eventName\": \"keydown\",\n      \"id\": \"inputdate_4\",\n      \"fct\": (e, c) => c.comp.triggerPoint(e)\n    },\n    {\n      \"eventName\": \"keyup\",\n      \"id\": \"inputdate_4\",\n      \"fct\": (e, c) => c.comp.validateLength2(e)\n    },\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inputdate_5\",\n      \"fct\": (e, c) => c.comp.selectContent(e)\n    },\n    {\n      \"eventName\": \"keydown\",\n      \"id\": \"inputdate_5\",\n      \"fct\": (e, c) => c.comp.triggerSpace(e)\n    },\n    {\n      \"eventName\": \"keyup\",\n      \"id\": \"inputdate_5\",\n      \"fct\": (e, c) => c.comp.validateLength4(e)\n    },\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inputdate_6\",\n      \"fct\": (e, c) => c.comp.selectContent(e)\n    },\n    {\n      \"eventName\": \"keydown\",\n      \"id\": \"inputdate_6\",\n      \"fct\": (e, c) => c.comp.triggerSemiCol(e)\n    },\n    {\n      \"eventName\": \"keyup\",\n      \"id\": \"inputdate_6\",\n      \"fct\": (e, c) => c.comp.validateLength2(e)\n    },\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inputdate_7\",\n      \"fct\": (e, c) => c.comp.selectContent(e)\n    },\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"inputdate_8\",\n      \"fct\": (e, c) => c.comp.preventFocus(e)\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"inputdate_8\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.clearValue(e, pressInstance); }\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(` \r        <div _id=\"inputdate_10\"></div>\r    `);\rtempl0.setActions({\n  \"content\": {\n    \"inputdate_10°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__85f0c0fbb346d55c45d594cadd252d33method4(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'inputdate_9',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\r }\n    getClassName() {\n        return \"InputDate\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('year_format')){ this['year_format'] = \"2-digit\"; }\rif(!this.hasAttribute('month_format')){ this['month_format'] = \"short\"; }\rif(!this.hasAttribute('day_format')){ this['day_format'] = \"2-digit\"; }\rif(!this.hasAttribute('locale')){ this['locale'] = undefined; }\rif(!this.hasAttribute('time_zone')){ this['time_zone'] = undefined; }\rif(!this.hasAttribute('is_focus')) { this.attributeChangedCallback('is_focus', false, false); }\rif(!this.hasAttribute('clearable')) {this.setAttribute('clearable' ,'true'); }\rif(!this.hasAttribute('show_clear_icon')) { this.attributeChangedCallback('show_clear_icon', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('placeholder')){ this['placeholder'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\rif(!this.hasAttribute('icon_position')){ this['icon_position'] = undefined; }\rif(!this.hasAttribute('time')) { this.attributeChangedCallback('time', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"value\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('year_format');\rthis.__upgradeProperty('month_format');\rthis.__upgradeProperty('day_format');\rthis.__upgradeProperty('locale');\rthis.__upgradeProperty('time_zone');\rthis.__upgradeProperty('is_focus');\rthis.__upgradeProperty('clearable');\rthis.__upgradeProperty('show_clear_icon');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('placeholder');\rthis.__upgradeProperty('icon');\rthis.__upgradeProperty('icon_position');\rthis.__upgradeProperty('time');\rthis.__correctGetter('value');\r }\n    __listBoolProps() { return [\"is_focus\",\"clearable\",\"show_clear_icon\",\"time\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    selectContent(e) {\n        e.currentTarget.select();\n    }\n    setValueToInputs() {\n        if (this.value) {\n            const pretty = (nb) => {\n                if (nb < 10) {\n                    return '0' + nb;\n                }\n                return nb + '';\n            };\n            this.dayEl.value = pretty(this.value.getDate());\n            this.monthEl.value = pretty(this.value.getMonth() + 1);\n            this.yearEl.value = pretty(this.value.getFullYear());\n            this.hourEl.value = pretty(this.value.getHours());\n            this.minuteEl.value = pretty(this.value.getMinutes());\n        }\n        else {\n            this.dayEl.value = '';\n            this.monthEl.value = '';\n            this.yearEl.value = '';\n            this.hourEl.value = '';\n            this.minuteEl.value = '';\n        }\n        this.show_clear_icon = this.clearable && this.value !== undefined;\n    }\n    displayVisualDate() {\n        if (!this.value)\n            return \"\";\n        return this.value.toLocaleDateString(this.locale, {\n            year: this.year_format,\n            month: this.month_format,\n            day: this.day_format,\n            hour: '2-digit',\n            minute: '2-digit',\n            timeZone: this.time_zone,\n        });\n    }\n    clearValue() {\n        this.value = undefined;\n        if (this.is_focus) {\n            this.dayEl.focus();\n            this.setValueToInputs();\n        }\n    }\n    localValidation() {\n        let errors = [];\n        let dayValue = this.dayEl.value;\n        let monthValue = this.monthEl.value;\n        let yearValue = this.yearEl.value;\n        let hourValue = this.hourEl.value;\n        let minuteValue = this.minuteEl.value;\n        if (!dayValue && !monthValue && !yearValue && !hourValue && !minuteValue) {\n            return [];\n        }\n        if (!monthValue) {\n            const txt = 'Le mois est obligatoire';\n            errors.push(txt);\n        }\n        else {\n            let nb = Number(monthValue);\n            if (isNaN(nb)) {\n                const txt = 'Le mois doit être un nombre';\n                errors.push(txt);\n            }\n            else if (nb < 1 || nb > 12) {\n                const txt = 'Le mois mois est compris entre 1 et 12';\n                errors.push(txt);\n            }\n        }\n        if (!yearValue) {\n            const txt = 'L\\'année est obligatoire';\n            errors.push(txt);\n        }\n        else {\n            let nb = Number(yearValue);\n            if (isNaN(nb)) {\n                const txt = 'L\\'année doit être un nombre';\n                errors.push(txt);\n            }\n            else if (nb < 0) {\n                const txt = 'L\\'année doit être un nombre positif';\n                errors.push(txt);\n            }\n        }\n        if (!dayValue) {\n            const txt = 'Le jour est obligatoire';\n            errors.push(txt);\n        }\n        else if (errors.length == 0) {\n            let max = new Date(Number(yearValue), Number(monthValue), 0).getDate();\n            let nb = Number(dayValue);\n            if (isNaN(nb)) {\n                const txt = 'Le jour doit être un nombre';\n                errors.push(txt);\n            }\n            else if (nb < 1 || nb > max) {\n                const txt = 'Le jour est compris entre 1 et $max'.replace(\"$max\", max + '');\n                errors.push(txt);\n            }\n        }\n        if (hourValue) {\n            let nb = Number(hourValue);\n            if (isNaN(nb)) {\n                const txt = 'L\\'heure doit être un nombre';\n                errors.push(txt);\n            }\n            else if (nb < 0 || nb > 23) {\n                const txt = 'L\\'heure doit est comprise entre 1 et 23';\n                errors.push(txt);\n            }\n        }\n        if (minuteValue) {\n            let nb = Number(minuteValue);\n            if (isNaN(nb)) {\n                const txt = 'La minute doit être un nombre';\n                errors.push(txt);\n            }\n            else if (nb < 0 || nb > 59) {\n                const txt = 'La minute doite est comprise entre 1 et 59';\n                errors.push(txt);\n            }\n        }\n        return errors;\n    }\n    async validate() {\n        if (!this.formPart) {\n            this.errors = this.localValidation();\n            return this.errors.length == 0;\n        }\n        return await this.formPart.test();\n    }\n    async onValueChange() {\n        let localValidations = this.localValidation();\n        if (localValidations.length == 0) {\n            let dayValue = this.dayEl.value;\n            let monthValue = this.monthEl.value;\n            let yearValue = this.yearEl.value;\n            let hourValue = this.hourEl.value;\n            let minuteValue = this.minuteEl.value;\n            let result = undefined;\n            if (!dayValue && !monthValue && !yearValue && !hourValue && !minuteValue) {\n            }\n            else {\n                let date = new Date(Number(yearValue), Number(monthValue) - 1, Number(dayValue), 0, 0, 0, 0);\n                if (this.time) {\n                    if (hourValue) {\n                        date.setHours(Number(hourValue));\n                    }\n                    if (minuteValue) {\n                        date.setMinutes(Number(minuteValue));\n                    }\n                }\n                result = date;\n            }\n            const isSame = this.time ? Lib.DateTools.isSameDateTime(this.value, result) : Lib.DateTools.isSameDate(this.value, result);\n            if (!isSame) {\n                this.value = result;\n                this.onChange.trigger([this.value]);\n                if (this.formPart) {\n                    this.formPart.value.set(this.value);\n                }\n            }\n            this.is_focus = false;\n        }\n        else {\n            this.errors = localValidations;\n        }\n    }\n    addBlurEvents() {\n        const elements = [this, this.dayEl, this.monthEl, this.yearEl, this.hourEl, this.minuteEl];\n        let blurTimeout = 0;\n        let blur = () => {\n            blurTimeout = setTimeout(() => {\n                this.onValueChange();\n            }, 100);\n        };\n        for (let element of elements) {\n            element.addEventListener(\"focus\", () => {\n                this.errors = [];\n                this.is_focus = true;\n                clearTimeout(blurTimeout);\n            });\n            element.addEventListener(\"blur\", () => {\n                blur();\n            });\n        }\n        this.addEventListener(\"focus\", () => {\n            setTimeout(() => {\n                this.dayEl.focus();\n            });\n        });\n    }\n    triggerPoint(e) {\n        this.triggerChar(e, '.');\n    }\n    triggerSpace(e) {\n        this.triggerChar(e, ' ');\n    }\n    triggerSemiCol(e) {\n        this.triggerChar(e, ':');\n    }\n    triggerChar(e, char) {\n        if (e.key == char) {\n            e.preventDefault();\n            let el = e.target;\n            let nextInput = el.nextElementSibling?.nextElementSibling;\n            if (nextInput) {\n                nextInput.focus();\n            }\n        }\n    }\n    validateLength2(e) {\n        this.validateLength(e, 2);\n    }\n    validateLength4(e) {\n        this.validateLength(e, 4);\n    }\n    validateLength(e, length) {\n        if (e.key == 'Tab') {\n            return;\n        }\n        let el = e.target;\n        if (el.value.length == length) {\n            let nextInput = el.nextElementSibling?.nextElementSibling;\n            if (nextInput) {\n                nextInput.focus();\n            }\n        }\n    }\n    preventFocus(e) {\n        e.preventDefault();\n        e.stopPropagation();\n    }\n    postCreation() {\n        super.postCreation();\n        this.setAttribute(\"tabindex\", \"-1\");\n        this.addBlurEvents();\n    }\n    __85f0c0fbb346d55c45d594cadd252d33method1() {\n        return this.label;\n    }\n    __85f0c0fbb346d55c45d594cadd252d33method2() {\n        return this.icon;\n    }\n    __85f0c0fbb346d55c45d594cadd252d33method3() {\n        return this.displayVisualDate();\n    }\n    __85f0c0fbb346d55c45d594cadd252d33method4(error) {\n        return error;\n    }\n}\nComponents.InputDate.Namespace=`Core.Components`;\nComponents.InputDate.Tag=`rk-input-date`;\n_.Components.InputDate=Components.InputDate;\nif(!window.customElements.get('rk-input-date')){window.customElements.define('rk-input-date', Components.InputDate);Aventus.WebComponentInstance.registerDefinition(Components.InputDate);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Date","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"locale","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Img","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.InputDate","isStrong":false},{"fullName":"Event","isStrong":false},{"fullName":"Core.Lib.DateTools","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"KeyboardEvent","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.InputDate","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-input-date"},{"code":"Components.Form = class Form extends Aventus.WebComponent {\n    elements = [];\n    onSubmit = new Aventus.Callback();\n    static __style = `:host{padding:15px;width:100%}`;\n    __getStatic() {\n        return Form;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Form.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Form\";\n    }\n    registerFormElement(element) {\n        if (!this.elements.includes(element)) {\n            this.elements.push(element);\n        }\n    }\n    registerSubmit(element) {\n        new Aventus.PressManager({\n            element,\n            onPress: () => {\n                this.submit();\n            }\n        });\n    }\n    async submit() {\n        if (await this.validate()) {\n            this.onSubmit.trigger([]);\n        }\n    }\n    async validate() {\n        return false;\n    }\n}\nComponents.Form.Namespace=`Core.Components`;\nComponents.Form.Tag=`rk-form`;\n_.Components.Form=Components.Form;\nif(!window.customElements.get('rk-form')){window.customElements.define('rk-form', Components.Form);Aventus.WebComponentInstance.registerDefinition(Components.Form);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.IFormElement","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"HTMLElement","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Promise","isStrong":false}],"fullName":"Core.Components.Form","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-form"},{"code":"Components.Button = class Button extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"icon_before\", \"icon_after\", \"icon\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'color'() { return this.getStringAttr('color') }\n    set 'color'(val) { this.setStringAttr('color', val) }\rget 'outline'() { return this.getBoolAttr('outline') }\n    set 'outline'(val) { this.setBoolAttr('outline', val) }\rget 'submit'() { return this.getBoolAttr('submit') }\n    set 'submit'(val) { this.setBoolAttr('submit', val) }\rget 'disabled'() { return this.getBoolAttr('disabled') }\n    set 'disabled'(val) { this.setBoolAttr('disabled', val) }\r    get 'icon_before'() { return this.getStringProp('icon_before') }\n    set 'icon_before'(val) { this.setStringAttr('icon_before', val) }\rget 'icon_after'() { return this.getStringProp('icon_after') }\n    set 'icon_after'(val) { this.setStringAttr('icon_after', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\r    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"icon\", ((target) => {\n    target.icon_before = target.icon;\n}));\r }\n    static __style = `:host{--_button-background-color: var(--button-background-color);--_button-background-color-hover: var(--button-background-color-hover, var(--darker));--_button-color: var(--button-color, currentcolor);--_button-box-shadow: var(--button-box-shadow);--_button-box-shadow-hover: var(--button-box-shadow-hover);--_button-border-radius: var(--button-border-radius, var(--border-radius-sm, 5px));--_button-padding: var(--button-padding, 0 16px);--_button-icon-fill-color: var(--button-icon-fill-color, --_button-color);--_button-icon-stroke-color: var(--button-icon-stroke-color, transparent);--_button-icon-margin: var(--button-icon-margin, 10px);--_button-background-color-disable: var(--button-background-color-disable, var(--disable-color));--_button-color-disable: var(--button-color-disable, var(--text-disable))}:host{background-color:var(--_button-background-color);border-radius:var(--_button-border-radius);box-shadow:var(--_button-box-shadow);color:var(--_button-color);cursor:pointer;height:36px;position:relative}:host .hider{background-color:var(--_button-background-color-hover);border-radius:var(--_button-border-radius);inset:0;opacity:0;position:absolute;transition:opacity .3s var(--bezier-curve),visibility .3s var(--bezier-curve);visibility:hidden;z-index:1}:host .content{align-items:center;display:flex;height:100%;justify-content:center;padding:var(--_button-padding);position:relative;z-index:2}:host .content .icon-before,:host .content .icon-after{--img-stroke-color: var(--_button-icon-stroke-color);--img-fill-color: var(--_button-icon-fill-color);display:none;height:100%;padding:10px 0}:host([disabled]){background-color:var(--_button-background-color-disable) !important;box-shadow:none;color:var(--_button-color-disable);cursor:not-allowed}:host([icon_before]) .icon-before{display:block;margin-right:var(--_button-icon-margin)}:host([icon_after]) .icon-after{display:block;margin-left:var(--_button-icon-margin)}:host([icon]) .icon-before{margin-right:0px}:host([outline]){background-color:rgba(0,0,0,0);border:1px solid var(--button-background-color);color:var(--text-color)}:host([color=primary]){background-color:var(--primary);color:var(--text-color-primary)}:host([outline][color=primary]){background-color:rgba(0,0,0,0);border:1px solid var(--primary);color:var(--text-color)}:host([color=secondary]){background-color:var(--secondary);color:var(--text-color-secondary)}:host([outline][color=secondary]){background-color:rgba(0,0,0,0);border:1px solid var(--secondary);color:var(--text-color)}:host([color=green]){background-color:var(--green);color:var(--text-color-green)}:host([outline][color=green]){background-color:rgba(0,0,0,0);border:1px solid var(--green);color:var(--text-color)}:host([color=success]){background-color:var(--success);color:var(--text-color-success)}:host([outline][color=success]){background-color:rgba(0,0,0,0);border:1px solid var(--success);color:var(--text-color)}:host([color=red]){background-color:var(--red);color:var(--text-color-red)}:host([outline][color=red]){background-color:rgba(0,0,0,0);border:1px solid var(--red);color:var(--text-color)}:host([color=error]){background-color:var(--error);color:var(--text-color-error)}:host([outline][color=error]){background-color:rgba(0,0,0,0);border:1px solid var(--error);color:var(--text-color)}:host([color=orange]){background-color:var(--orange);color:var(--text-color-orange)}:host([outline][color=orange]){background-color:rgba(0,0,0,0);border:1px solid var(--orange);color:var(--text-color)}:host([color=warning]){background-color:var(--warning);color:var(--text-color-warning)}:host([outline][color=warning]){background-color:rgba(0,0,0,0);border:1px solid var(--warning);color:var(--text-color)}:host([color=blue]){background-color:var(--blue);color:var(--text-color-blue)}:host([outline][color=blue]){background-color:rgba(0,0,0,0);border:1px solid var(--blue);color:var(--text-color)}:host([color=information]){background-color:var(--information);color:var(--text-color-information)}:host([outline][color=information]){background-color:rgba(0,0,0,0);border:1px solid var(--information);color:var(--text-color)}@media screen and (min-width: 1225px){:host(:not([disabled]):hover){box-shadow:var(--_button-box-shadow-hover)}:host(:not([disabled]):hover) .hider{opacity:1;visibility:visible}}`;\n    __getStatic() {\n        return Button;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Button.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"hider\"></div><div class=\"content\">\r    <rk-img class=\"icon-before\" _id=\"button_0\"></rk-img>\r    <slot></slot>\r    <rk-img class=\"icon-after\" _id=\"button_1\"></rk-img>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"button_0°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__e17753be66eb8c36ad73f4b01845474bmethod0())}`,\n      \"once\": true\n    },\n    \"button_1°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__e17753be66eb8c36ad73f4b01845474bmethod1())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"Button\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('color')){ this['color'] = undefined; }\rif(!this.hasAttribute('outline')) { this.attributeChangedCallback('outline', false, false); }\rif(!this.hasAttribute('submit')) { this.attributeChangedCallback('submit', false, false); }\rif(!this.hasAttribute('disabled')) { this.attributeChangedCallback('disabled', false, false); }\rif(!this.hasAttribute('icon_before')){ this['icon_before'] = undefined; }\rif(!this.hasAttribute('icon_after')){ this['icon_after'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('color');\rthis.__upgradeProperty('outline');\rthis.__upgradeProperty('submit');\rthis.__upgradeProperty('disabled');\rthis.__upgradeProperty('icon_before');\rthis.__upgradeProperty('icon_after');\rthis.__upgradeProperty('icon');\r }\n    __listBoolProps() { return [\"outline\",\"submit\",\"disabled\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    registerToForm() {\n        if (!this.submit)\n            return;\n        const parent = this.findParentByType(Components.Form);\n        if (parent) {\n            parent.registerSubmit(this);\n        }\n    }\n    postCreation() {\n        this.registerToForm();\n    }\n    __e17753be66eb8c36ad73f4b01845474bmethod0() {\n        return this.icon_before;\n    }\n    __e17753be66eb8c36ad73f4b01845474bmethod1() {\n        return this.icon_after;\n    }\n}\nComponents.Button.Namespace=`Core.Components`;\nComponents.Button.Tag=`rk-button`;\n_.Components.Button=Components.Button;\nif(!window.customElements.get('rk-button')){window.customElements.define('rk-button', Components.Button);Aventus.WebComponentInstance.registerDefinition(Components.Button);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.ColorsType","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Button","isStrong":false},{"fullName":"Core.Components.Form","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.Button","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-button"},{"code":"Components.Checkbox = class Checkbox extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"placeholder\", \"icon\", \"checked\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'left_label'() { return this.getBoolAttr('left_label') }\n    set 'left_label'(val) { this.setBoolAttr('left_label', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'placeholder'() { return this.getStringProp('placeholder') }\n    set 'placeholder'(val) { this.setStringAttr('placeholder', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\rget 'checked'() { return this.getBoolProp('checked') }\n    set 'checked'(val) { this.setBoolAttr('checked', val) }\r    get 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\r    __registerWatchesActions() {\n    this.__addWatchesActions(\"value\", ((target) => {\n    target.checked = target.value;\n}));\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"checked\", ((target) => {\n    target.value = target.checked;\n}));\r }\n    static __style = `:host{--_checkbox-size: var(--checkbox-size, 18px);--_checkbox-height: var(--checkbox-height, var(--_checkbox-size));--_checkbox-width: var(--checkbox-width, var(--_checkbox-size));--_checkbox-border-radius: var(--checkbox-border-radius, var(--form-element-border-radius));--_checkbox-border: var(--checkbox-border, var(--form-element-border));--_checkbox-border-active: var(--checkbox-border-active, var(--form-element-border-active, var(--_checkbox-border)));--_checkbox-background: var(--checkbox-background, var(--form-element-background, white));--_checkbox-background-active: var(--checkbox-background-active, var(--form-element-background-active, white));--_checkbox-tick-color: var(--checkbox-tick-color, var(--_checkbox-background));--_checkbox-tick-size: var(--checkbox-tick-size, 2px);--_checkbox-tick-padding: var(--checkbox-tick-padding, 10%);--_checkbox-font-size-label: var(--checkbox-font-size-label, var(--form-element-font-size-label, calc(var(--_input-font-size) * 0.95)));--_checkbox-margin-label: var(--checkbox-margin-label, 5px)}:host{align-items:center;display:flex}:host .label:not(:empty){cursor:pointer;font-size:var(--_checkbox-font-size-label);margin-left:var(--_checkbox-margin-label)}:host .square{background-color:var(--_checkbox-background);border:var(--_checkbox-border);border-radius:var(--_checkbox-border-radius);cursor:pointer;flex-shrink:0;height:var(--_checkbox-height);position:relative;transition:border .4s var(--bezier-curve),background-color .4s var(--bezier-curve);width:var(--_checkbox-width);display:flex;align-items:center;justify-content:center}:host .square rk-img{--img-stroke-color: var(--_checkbox-tick-color);--img-stroke-width: var(--_checkbox-tick-size);height:calc(100% - var(--_checkbox-tick-padding));opacity:0;visibility:hidden;width:calc(100% - var(--_checkbox-tick-padding))}:host([checked]) .square{background-color:var(--_checkbox-background-active);border:var(--_checkbox-border-active)}:host([checked]) .square rk-img{opacity:1;visibility:visible}:host([checked]) .square rk-img::part(tick){animation:dash .3s linear forwards;animation-delay:.2s;stroke-dasharray:100;stroke-dashoffset:100}:host([left_label]) .label:not(:empty){margin-left:0;margin-right:var(--_checkbox-margin-label);order:1}:host([left_label]) .square{order:2}@keyframes dash{to{stroke-dashoffset:70}}`;\n    __getStatic() {\n        return Checkbox;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Checkbox.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"square\">\r    <rk-img src=\"/img/icons/tick.svg\"></rk-img>\r</div><div class=\"label\" _id=\"checkbox_0\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"checkbox_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__ab411575f51bcaf15868d94c774ac9c3method0())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"Checkbox\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('left_label')) { this.attributeChangedCallback('left_label', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('placeholder')){ this['placeholder'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\rif(!this.hasAttribute('checked')) { this.attributeChangedCallback('checked', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"value\"] = false;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('left_label');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('placeholder');\rthis.__upgradeProperty('icon');\rthis.__upgradeProperty('checked');\rthis.__correctGetter('value');\r }\n    __listBoolProps() { return [\"left_label\",\"checked\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    removeErrors() {\n        this.errors = [];\n    }\n    postCreation() {\n        super.postCreation();\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                this.removeErrors();\n                this.checked = !this.checked;\n                this.onChange.trigger([this.checked]);\n                if (this.formPart) {\n                    this.formPart.value.set(this.value);\n                }\n            }\n        });\n    }\n    __ab411575f51bcaf15868d94c774ac9c3method0() {\n        return this.label;\n    }\n}\nComponents.Checkbox.Namespace=`Core.Components`;\nComponents.Checkbox.Tag=`rk-checkbox`;\n_.Components.Checkbox=Components.Checkbox;\nif(!window.customElements.get('rk-checkbox')){window.customElements.define('rk-checkbox', Components.Checkbox);Aventus.WebComponentInstance.registerDefinition(Components.Checkbox);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Checkbox","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.Checkbox","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-checkbox"},{"code":"Lib.Color=class Color {\n    static isValid(txt) {\n        return this.getColorType(txt) != -1;\n    }\n    static types = {\n        rgb: \"rgb\",\n        hex: \"hex\",\n        rgba: \"rgba\",\n        hsl: \"hsl\",\n        hsla: \"hsla\",\n        hsv: \"hsv\",\n        hsva: \"hsva\",\n        static: \"static\"\n    };\n    static getColorType(colorString) {\n        let treatedColor = colorString.replaceAll(\" \", \"\");\n        if (/^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i.test(treatedColor) ||\n            /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i.test(treatedColor)) {\n            return Lib.Color.types.hex;\n        }\n        else if (/^rgba?\\((\\d{1,3},*){3,4}\\)$/.test(treatedColor)) {\n            return treatedColor.startsWith(\"rgba\") ? Lib.Color.types.rgba : Lib.Color.types.rgb;\n        }\n        else if (/^hsla?\\(\\s*(\\d{1,3})\\s*(,| )\\s*(\\d{1,3})%?\\s*(,| )\\s*(\\d{1,3})%?\\s*(,\\s*(0|1|0?\\.\\d+)\\s*)?\\)$/.test(treatedColor)) {\n            return treatedColor.startsWith(\"hsla\") ? Lib.Color.types.hsla : Lib.Color.types.hsl;\n        }\n        else if (/^hsva?\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*(,\\s*(0|1|0?\\.\\d+))?\\s*\\)$/.test(treatedColor)) {\n            return treatedColor.startsWith(\"hsva\") ? Lib.Color.types.hsva : Lib.Color.types.hsv;\n        }\n        else if (Object.hasOwn(Lib.Colors, colorString.toUpperCase())) {\n            return Lib.Color.types.static;\n        }\n        else {\n            return -1;\n        }\n    }\n    static createFromRgb(r, g, b) {\n        return new Lib.Color(`rgb(${r},${g},${b})`);\n    }\n    static createFromHsl(h, s, l) {\n        return new Lib.Color(`hsl(${h},${s}%,${l}%)`);\n    }\n    static createFromRgba(r, g, b, a) {\n        return new Lib.Color(`rgba(${r},${g},${b},${a})`);\n    }\n    static createFromHsla(h, s, l, a) {\n        return new Lib.Color(`hsla(${h},${s}%,${l}%,${a})`);\n    }\n    static createFromHsvla(h, s, v, a) {\n        return new Lib.Color(`hsva(${h},${s}%,${v}%,${a})`);\n    }\n    _watcher;\n    get currentColor() {\n        return this._watcher.currentColor;\n    }\n    set currentColor(value) {\n        this._watcher.currentColor = value;\n    }\n    get r() {\n        return this.currentColor.r;\n    }\n    set r(newValue) {\n        if (newValue >= 0 && newValue <= 255) {\n            this.currentColor.r = newValue;\n        }\n        else {\n            throw new Error(\"Invalid value\");\n        }\n    }\n    get g() {\n        return this.currentColor.g;\n    }\n    set g(newValue) {\n        if (newValue >= 0 && newValue <= 255) {\n            this.currentColor.g = newValue;\n        }\n        else {\n            throw new Error(\"Invalid value\");\n        }\n    }\n    get b() {\n        return this.currentColor.b;\n    }\n    set b(newValue) {\n        if (newValue >= 0 && newValue <= 255) {\n            this.currentColor.b = newValue;\n        }\n        else {\n            throw new Error(\"Invalid value\");\n        }\n    }\n    get a() {\n        return this.currentColor.a;\n    }\n    set a(newValue) {\n        if (newValue >= 0 && newValue <= 1) {\n            this.currentColor.a = newValue;\n        }\n        else {\n            throw new Error(\"Invalid value for A (Alpha). It should be between 0 and 1.\");\n        }\n    }\n    get h() {\n        return this.hsl.h;\n    }\n    set h(newValue) {\n        if (newValue >= 0 && newValue <= 360) {\n            let currentHSL = this.hsl;\n            currentHSL.h = newValue;\n            this.currentColor = { ...this.hslToRgb(currentHSL.h, currentHSL.s, currentHSL.l), a: this.currentColor.a };\n        }\n        else {\n            throw new Error(\"Invalid value for H (Hue). It should be between 0 and 360.\");\n        }\n    }\n    /**\n     * The hex format of the color\n     */\n    get hex() {\n        return this.rgbToHex(this.currentColor.r, this.currentColor.g, this.currentColor.b, this.currentColor.a);\n    }\n    set hex(hexString) {\n        this.currentColor = this.hexStringToRgba(hexString);\n    }\n    /**\n     * The rgb format of the color\n     */\n    get rgb() {\n        const { r, g, b } = this.currentColor;\n        return { r, g, b };\n    }\n    get rgbString() {\n        const { r, g, b } = this.rgb;\n        return `rgb(${r}, ${g}, ${b})`;\n    }\n    set rgb(value) {\n        if (typeof value == 'string') {\n            this.currentColor = { ...this.stringToRgba(value), a: this.currentColor.a };\n        }\n        else if (typeof value === 'object' &&\n            !Array.isArray(value) &&\n            value !== null) {\n            value.r = Math.min(Math.max(value.r, 0), 255);\n            value.g = Math.min(Math.max(value.g, 0), 255);\n            value.b = Math.min(Math.max(value.b, 0), 255);\n            this.currentColor = { ...value, a: this.currentColor.a };\n        }\n    }\n    /**\n     * The rgba format of the color\n     */\n    get rgba() {\n        return this.currentColor;\n    }\n    set rgba(value) {\n        if (typeof value == 'string') {\n            this.currentColor = this.stringToRgba(value);\n        }\n        else if (typeof value === 'object' &&\n            !Array.isArray(value) &&\n            value !== null) {\n            value.r = Math.min(Math.max(value.r, 0), 255);\n            value.g = Math.min(Math.max(value.g, 0), 255);\n            value.b = Math.min(Math.max(value.b, 0), 255);\n            value.a = Math.min(Math.max(value.a, 0), 1);\n            this.currentColor = value;\n        }\n    }\n    get rgbaString() {\n        const { r, g, b, a } = this.rgba;\n        return `rgba(${r}, ${g}, ${b}, ${a})`;\n    }\n    /**\n     * The hsl format of the color\n     */\n    get hsl() {\n        const { h, s, l } = this.rgbToHsl(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        return { h, s, l };\n    }\n    get hslString() {\n        const { h, s, l } = this.hsl;\n        return `hsl(${h}, ${s}, ${l})`;\n    }\n    set hsl(value) {\n        if (typeof value == 'string') {\n            this.currentColor = { ...this.hslaStringToRgba(value), a: this.currentColor.a };\n        }\n        else if (typeof value === 'object' &&\n            !Array.isArray(value) &&\n            value !== null) {\n            this.currentColor = { ...this.hslToRgb(value.h, value.s, value.l), a: this.currentColor.a };\n        }\n    }\n    /**\n    * The hsla format of the color\n    */\n    get hsla() {\n        return this.rgbToHsla(this.currentColor.r, this.currentColor.g, this.currentColor.b, this.currentColor.a);\n    }\n    get hslaString() {\n        const { h, s, l, a } = this.hsla;\n        return `hsla(${h}, ${s}, ${l}, ${a})`;\n    }\n    set hsla(value) {\n        if (typeof value == 'string') {\n            this.currentColor = this.hslaStringToRgba(value);\n        }\n        else if (typeof value === 'object' &&\n            !Array.isArray(value) &&\n            value !== null) {\n            this.currentColor = this.hslaToRgba(value.h, value.s, value.l, value.a);\n        }\n    }\n    /**\n     * The hsv format of the color\n     */\n    get hsv() {\n        const { h, s, v } = this.rgbToHsv(this.currentColor.r, this.currentColor.g, this.currentColor.b);\n        return { h, s, v };\n    }\n    get hsvString() {\n        const { h, s, v } = this.hsv;\n        return `hsv(${h}, ${s}%, ${v}%)`;\n    }\n    set hsv(value) {\n        if (typeof value === 'string') {\n            this.currentColor = { ...this.hsvaStringToRgba(value), a: this.currentColor.a };\n        }\n        else if (typeof value === 'object' &&\n            !Array.isArray(value) &&\n            value !== null) {\n            this.currentColor = { ...this.hsvaToRgba(value.h, value.s, value.v, this.currentColor.a) };\n        }\n    }\n    /**\n     * The hsva format of the color\n     */\n    get hsva() {\n        return this.rgbToHsva(this.currentColor.r, this.currentColor.g, this.currentColor.b, this.currentColor.a);\n    }\n    get hsvaString() {\n        const { h, s, v, a } = this.hsva;\n        return `hsva(${h}, ${s}%, ${v}%, ${a})`;\n    }\n    set hsva(value) {\n        if (typeof value === 'string') {\n            this.currentColor = this.hsvaStringToRgba(value);\n        }\n        else if (typeof value === 'object' &&\n            !Array.isArray(value) &&\n            value !== null) {\n            this.currentColor = this.hsvaToRgba(value.h, value.s, value.v, value.a);\n        }\n    }\n    get isLight() {\n        const luminance = (0.299 * this.currentColor.r * this.currentColor.r + 0.587 * this.currentColor.g * this.currentColor.g + 0.114 * this.currentColor.b * this.currentColor.b);\n        return luminance > 16256;\n    }\n    /**\n     * Create a new color\n     * @param {string} colorString - The color in hex or rgb format\n     */\n    constructor(colorString) {\n        let currentColor;\n        if (colorString === \"\" || !colorString) {\n            colorString = \"#ffffff\";\n        }\n        let colorType = Lib.Color.getColorType(colorString);\n        if (colorType !== -1) {\n            if (colorType === Lib.Color.types.static) {\n                let staticColor = Lib.Colors[colorString.toUpperCase()];\n                if (staticColor instanceof Lib.Color) {\n                    currentColor = staticColor.currentColor;\n                }\n                else {\n                    throw new Error(\"Unknown color type\");\n                }\n            }\n            else if (colorType === Lib.Color.types.rgb || colorType === Lib.Color.types.rgba) {\n                currentColor = this.stringToRgba(colorString);\n            }\n            else if (colorType === Lib.Color.types.hex) {\n                currentColor = this.hexStringToRgba(colorString);\n            }\n            else if (colorType === Lib.Color.types.hsl || colorType === Lib.Color.types.hsla) {\n                currentColor = this.hslaStringToRgba(colorString);\n            }\n            else {\n                throw new Error(\"Unknown color type\");\n            }\n        }\n        else {\n            throw new Error(`${colorString} is not a supported color`);\n        }\n        this._watcher = Aventus.Watcher.get({ currentColor }, () => {\n            this.onColorChange.trigger([]);\n        });\n    }\n    setColorTxt(colorString) {\n        if (colorString === \"\" || !colorString) {\n            colorString = \"#ffffff\";\n        }\n        let colorType = Lib.Color.getColorType(colorString);\n        if (colorType !== -1) {\n            if (colorType === Lib.Color.types.static) {\n                let staticColor = Lib.Colors[colorString.toUpperCase()];\n                if (staticColor instanceof Lib.Color) {\n                    this.currentColor = staticColor.currentColor;\n                }\n                else {\n                    throw new Error(\"Unknown color type\");\n                }\n            }\n            else if (colorType === Lib.Color.types.rgb || colorType === Lib.Color.types.rgba) {\n                this.currentColor = this.stringToRgba(colorString);\n            }\n            else if (colorType === Lib.Color.types.hex) {\n                this.currentColor = this.hexStringToRgba(colorString);\n            }\n            else if (colorType === Lib.Color.types.hsl || colorType === Lib.Color.types.hsla) {\n                this.currentColor = this.hslaStringToRgba(colorString);\n            }\n            else {\n                throw new Error(\"Unknown color type\");\n            }\n        }\n        else {\n            throw new Error(`${colorString} is not a supported color`);\n        }\n    }\n    onColorChange = new Aventus.Callback();\n    hexStringToRgba(hexColorString) {\n        // Expand shorthand form (e.g. \"03F\") to full form (e.g. \"0033FF\")\n        let shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])([a-f\\d])?$/i;\n        hexColorString = hexColorString.replace(shorthandRegex, function (m, r, g, b, a) {\n            return r + r + g + g + b + b + (a ? a + a : \"\");\n            ;\n        });\n        let result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})?$/i.exec(hexColorString);\n        if (!result) {\n            console.error(`Invalid hex string : ${hexColorString}`);\n            return {\n                r: 0,\n                g: 0,\n                b: 0,\n                a: 1\n            };\n        }\n        else {\n            return {\n                r: parseInt(result[1], 16),\n                g: parseInt(result[2], 16),\n                b: parseInt(result[3], 16),\n                a: result[4] ? parseInt(result[4], 16) / 255 : 1\n            };\n        }\n    }\n    stringToRgba(rgbColorString) {\n        let splitted = rgbColorString.replaceAll(/[\\(\\)rgb ]/g, \"\").split(\",\");\n        let result = [];\n        for (let i = 0; i < 4; i++) {\n            if (i < 3) {\n                result.push(Math.min(Math.max(parseInt(splitted[i]), 0), 255));\n            }\n            else {\n                result.push(Math.min(Math.max(parseFloat(splitted[i]), 0), 1));\n            }\n        }\n        return {\n            r: result[0],\n            g: result[1],\n            b: result[2],\n            a: result[3] || 1\n        };\n    }\n    rgbToHex(r, g, b, a = 1) {\n        let hex = \"#\" + ((1 << 24) + (Math.round(r) << 16) + (Math.round(g) << 8) + Math.round(b)).toString(16).slice(1);\n        if (a < 1) {\n            let alphaHex = Math.round(a * 255).toString(16).padStart(2, '0');\n            hex += alphaHex;\n        }\n        return hex;\n    }\n    hslStringToRgb(hslColorString) {\n        let [h, s, l] = hslColorString.replaceAll(/[\\(\\)hsl% ]/g, \"\").split(\",\").map(Number);\n        return this.hslToRgb(h, s, l);\n    }\n    rgbToHsl(r, g, b) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let h, s, l = (max + min) / 2;\n        if (max == min) {\n            h = s = 0;\n        }\n        else {\n            let d = max - min;\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n            switch (max) {\n                case r:\n                    h = (g - b) / d + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / d + 2;\n                    break;\n                case b:\n                    h = (r - g) / d + 4;\n                    break;\n                default: h = 0;\n            }\n            h /= 6;\n        }\n        return {\n            h: this.round(h * 360),\n            s: this.round(s * 100),\n            l: this.round(l * 100)\n        };\n    }\n    rgbToHsla(r, g, b, a) {\n        let hsl = this.rgbToHsl(r, g, b);\n        return { ...hsl, a: a };\n    }\n    hslToRgb(h, s, l) {\n        s /= 100;\n        l /= 100;\n        let c = (1 - Math.abs(2 * l - 1)) * s;\n        let x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        let m = l - c / 2;\n        let r = 0, g = 0, b = 0;\n        if (0 <= h && h < 60) {\n            r = c;\n            g = x;\n            b = 0;\n        }\n        else if (60 <= h && h < 120) {\n            r = x;\n            g = c;\n            b = 0;\n        }\n        else if (120 <= h && h < 180) {\n            r = 0;\n            g = c;\n            b = x;\n        }\n        else if (180 <= h && h < 240) {\n            r = 0;\n            g = x;\n            b = c;\n        }\n        else if (240 <= h && h < 300) {\n            r = x;\n            g = 0;\n            b = c;\n        }\n        else if (300 <= h && h <= 360) {\n            r = c;\n            g = 0;\n            b = x;\n        }\n        return {\n            r: this.round((r + m) * 255),\n            g: this.round((g + m) * 255),\n            b: this.round((b + m) * 255)\n        };\n    }\n    hslaToRgba(h, s, l, a) {\n        let rgb = this.hslToRgb(h, s, l);\n        return { ...rgb, a: a };\n    }\n    hslaStringToRgba(hslaColorString) {\n        let [h, s, l, a] = hslaColorString.replaceAll(/[\\(\\)hsla% ]/g, \"\").split(\",\").map(Number);\n        return this.hslaToRgba(h, s, l, a);\n    }\n    rgbToHsv(r, g, b) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n        let max = Math.max(r, g, b);\n        let min = Math.min(r, g, b);\n        let h, s, v = max;\n        let delta = max - min;\n        s = max === 0 ? 0 : delta / max;\n        if (delta === 0) {\n            h = 0;\n        }\n        else {\n            switch (max) {\n                case r:\n                    h = (g - b) / delta + (g < b ? 6 : 0);\n                    break;\n                case g:\n                    h = (b - r) / delta + 2;\n                    break;\n                case b:\n                    h = (r - g) / delta + 4;\n                    break;\n                default:\n                    h = 0;\n            }\n            h /= 6;\n        }\n        return {\n            h: this.round(h * 360),\n            s: this.round(s * 100),\n            v: this.round(v * 100)\n        };\n    }\n    hsvToRgb(h, s, v) {\n        s /= 100;\n        v /= 100;\n        let c = v * s;\n        let x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        let m = v - c;\n        let r = 0, g = 0, b = 0;\n        if (0 <= h && h < 60) {\n            r = c;\n            g = x;\n            b = 0;\n        }\n        else if (60 <= h && h < 120) {\n            r = x;\n            g = c;\n            b = 0;\n        }\n        else if (120 <= h && h < 180) {\n            r = 0;\n            g = c;\n            b = x;\n        }\n        else if (180 <= h && h < 240) {\n            r = 0;\n            g = x;\n            b = c;\n        }\n        else if (240 <= h && h < 300) {\n            r = x;\n            g = 0;\n            b = c;\n        }\n        else if (300 <= h && h <= 360) {\n            r = c;\n            g = 0;\n            b = x;\n        }\n        return {\n            r: this.round((r + m) * 255),\n            g: this.round((g + m) * 255),\n            b: this.round((b + m) * 255)\n        };\n    }\n    rgbToHsva(r, g, b, a) {\n        let hsv = this.rgbToHsv(r, g, b);\n        return { ...hsv, a };\n    }\n    hsvaToRgba(h, s, v, a) {\n        let rgb = this.hsvToRgb(h, s, v);\n        return { ...rgb, a };\n    }\n    hsvaStringToRgba(hsvaColorString) {\n        let [h, s, v, a] = hsvaColorString.replaceAll(/[\\(\\)hsva% ]/g, \"\").split(\",\").map(Number);\n        return this.hsvaToRgba(h, s, v, a);\n    }\n    round(nb) {\n        return Math.round(nb * 100) / 100;\n    }\n    /**\n     * Print the color in hex format\n     * @returns {string} - A pretty print of the color in hex format\n     */\n    toString() {\n        return this.rgbToHex(this.currentColor.r, this.currentColor.g, this.currentColor.b, this.currentColor.a);\n    }\n}\nLib.Color.Namespace=`Core.Lib`;\r\n_.Lib.Color=Lib.Color;\r\n","dependances":[{"fullName":"Core.Lib.Color","isStrong":false},{"fullName":"Core.Lib.Colors","isStrong":false},{"fullName":"Core.Lib.RGBAColor","isStrong":false},{"fullName":"Core.Lib.RGBColor","isStrong":false},{"fullName":"Core.Lib.HSLColor","isStrong":false},{"fullName":"Core.Lib.HSLAColor","isStrong":false},{"fullName":"Core.Lib.HSVColor","isStrong":false},{"fullName":"Core.Lib.HSVAColor","isStrong":false},{"fullName":"Aventus.Watcher","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false}],"fullName":"Core.Lib.Color","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Components.ColorPickerSelector = class ColorPickerSelector extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"color\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'direction'() { return this.getStringAttr('direction') }\n    set 'direction'(val) { this.setStringAttr('direction', val) }\rget 'opacity'() { return this.getBoolAttr('opacity') }\n    set 'opacity'(val) { this.setBoolAttr('opacity', val) }\rget 'show_text_value'() { return this.getBoolAttr('show_text_value') }\n    set 'show_text_value'(val) { this.setBoolAttr('show_text_value', val) }\r    get 'color'() { return this.getStringProp('color') }\n    set 'color'(val) { this.setStringAttr('color', val) }\r    get 'colorTxt'() {\n\t\t\t\t\t\treturn this.__watch[\"colorTxt\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'colorTxt'(val) {\n\t\t\t\t\t\tthis.__watch[\"colorTxt\"] = val;\n\t\t\t\t\t}\rget 'hue'() {\n\t\t\t\t\t\treturn this.__watch[\"hue\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'hue'(val) {\n\t\t\t\t\t\tthis.__watch[\"hue\"] = val;\n\t\t\t\t\t}\rget 'alpha'() {\n\t\t\t\t\t\treturn this.__watch[\"alpha\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'alpha'(val) {\n\t\t\t\t\t\tthis.__watch[\"alpha\"] = val;\n\t\t\t\t\t}\rget 'presets'() {\n\t\t\t\t\t\treturn this.__watch[\"presets\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'presets'(val) {\n\t\t\t\t\t\tthis.__watch[\"presets\"] = val;\n\t\t\t\t\t}\r    _color;\n    canEmit = false;\n    internalSet = false;\n    resizeObserver;\n    onChange = new Aventus.Callback();\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"colorTxt\", ((target, action, path, value) => {\n    target.onColorTxtChange();\n}));\rthis.__addWatchesActions(\"hue\", ((target, action, path, value) => {\n    target.changeHue();\n}));\rthis.__addWatchesActions(\"alpha\", ((target, action, path, value) => {\n    target.changeAlpha();\n}));\rthis.__addWatchesActions(\"presets\", ((target, action, path, value) => {\n    target.renderPresets();\n}));\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"color\", ((target) => {\n    if (!target.internalSet) {\n        target.canEmit = false;\n        target._color.setColorTxt(target.color);\n        target.hue = target._color.hsv.h;\n        target.alpha = target._color.a * 100;\n        target.updatePositionFromColor(target._color);\n        target.canEmit = true;\n    }\n}));\r }\n    static __style = `:host{--_color-picker-selector-area-width: var(--color-picker-selector-area-width, 200px);--_color-picker-selector-panel-width: var(--color-picker-selector-panel-width, 200px);--_color-picker-selector-background-color: var(--color-picker-selector-background-color, white);--_color-picker-selector-border-radius: var(--color-picker-selector-border-radius, var(--border-radius-sm))}:host{background-color:var(--_color-picker-selector-background-color);border-radius:var(--_color-picker-selector-border-radius);box-shadow:var(--elevation-2);width:max(var(--_color-picker-selector-area-width),var(--_color-picker-selector-panel-width));z-index:800}:host .style-wrapper{display:flex;flex-direction:column;width:100%}:host .style-wrapper .color-area{aspect-ratio:1/.5;background-image:linear-gradient(rgba(0, 0, 0, 0), #000),linear-gradient(90deg, #fff, var(--_color-picker-selector-area-color));border-top-left-radius:var(--_color-picker-selector-border-radius);border-top-right-radius:var(--_color-picker-selector-border-radius);cursor:pointer;margin:0 auto;position:relative;width:var(--_color-picker-selector-area-width)}:host .style-wrapper .color-area .area-dot{background-color:var(--_color-picker-selector-color-opacity);border:2px solid #fff;border-radius:var(--border-radius-round);height:10px;left:0;position:absolute;top:0;transform:translate(-50%, -50%);width:10px}:host .style-wrapper .color-panel{margin:0 auto;padding:15px;width:var(--_color-picker-selector-panel-width)}:host .style-wrapper .color-panel .color-hue{margin-bottom:5px;width:100%}:host .style-wrapper .color-panel .color-hue rk-slider{--slider-background-image: linear-gradient(to right, red 0, #ff0 16.66%, #0f0 33.33%, #0ff 50%, #00f 66.66%, #f0f 83.33%, red 100%);--slider-active-background-color: transparent;--slider-background-color: transparent;--slider-dot-color: var(--_color-picker-selector-area-color);--slider-bar-height: 8px;min-width:auto;width:100%}:host .style-wrapper .color-panel .color-alpha{display:none;margin-top:5px;position:relative}:host .style-wrapper .color-panel .color-alpha rk-slider{--slider-background-color: transparent;--slider-active-background-color: transparent;--slider-bar-height: 8px;min-width:auto;position:relative;width:100%;z-index:2}:host .style-wrapper .color-panel .color-alpha .bar{background-image:repeating-linear-gradient(45deg, #aaa 25%, transparent 25%, transparent 75%, #aaa 75%, #aaa),repeating-linear-gradient(45deg, #aaa 25%, #fff 25%, #fff 75%, #aaa 75%, #aaa);background-position:0 0,2px 2px;background-size:4px 4px;border-radius:var(--_color-picker-selector-border-radius);inset:0;position:absolute;width:100%;z-index:1}:host .style-wrapper .color-panel .color-alpha .bar-color{background-image:linear-gradient(90deg, rgba(0, 0, 0, 0), var(--_color-picker-selector-color-opacity));border-radius:var(--_color-picker-selector-border-radius);inset:0;position:absolute;width:100%;z-index:2}:host .style-wrapper .color-panel .color-alpha .dot{background-image:repeating-linear-gradient(45deg, #aaa 25%, transparent 25%, transparent 75%, #aaa 75%, #aaa),repeating-linear-gradient(45deg, #aaa 25%, #fff 25%, #fff 75%, #aaa 75%, #aaa);background-position:0 0,2px 2px;background-size:4px 4px;border-radius:var(--border-radius-round);inset:0;position:absolute;z-index:1}:host .style-wrapper .color-panel .color-alpha .dot-color{background-color:var(--_color-picker-selector-color);border-radius:var(--border-radius-round);inset:0;position:absolute;z-index:2}:host .style-wrapper .color-panel .color-result{align-items:center;display:flex;flex-direction:row;gap:10px;justify-content:center;margin-top:20px}:host .style-wrapper .color-panel .color-result .color-preview{background-image:repeating-linear-gradient(45deg, #aaa 25%, transparent 25%, transparent 75%, #aaa 75%, #aaa),repeating-linear-gradient(45deg, #aaa 25%, #fff 25%, #fff 75%, #aaa 75%, #aaa);background-position:0 0,2px 2px;background-size:4px 4px;border-radius:var(--border-radius-round);flex-shrink:0;height:25px;overflow:hidden;position:relative;width:25px}:host .style-wrapper .color-panel .color-result .color-preview::after{background-color:var(--_color-picker-selector-color);content:\"\";inset:0;position:absolute}:host .style-wrapper .color-panel .color-result .color-text{display:none;width:calc(100% - 35px)}:host .style-wrapper .color-panel .color-result .color-text rk-input{--input-height: 25px;min-width:auto;width:100%}:host .style-wrapper .color-panel .color-preset:not(:empty){align-items:center;display:flex;flex-wrap:wrap;gap:5px;justify-content:center;margin-top:20px;width:100%}:host .style-wrapper .color-panel .color-preset:not(:empty) .preset{border-radius:var(--border-radius-round);flex-shrink:0;height:20px;width:20px}:host([direction=horizontal]){width:fit-content}:host([direction=horizontal]) .style-wrapper{display:flex;flex-direction:row}:host([direction=horizontal]) .style-wrapper .color-area{aspect-ratio:auto;border-bottom-left-radius:var(--_color-picker-selector-border-radius);border-top-right-radius:0}:host([opacity]) .style-wrapper .color-panel .color-alpha{display:block}:host([show_text_value]) .style-wrapper .color-panel .color-result .color-text{display:block}`;\n    constructor() {\r            super();\r            this._color = new Lib.Color(\"#FFFFFF\");\r            this._color.onColorChange.add(() => {\r                this.applyColorChange();\r            });\r        }\n    __getStatic() {\n        return ColorPickerSelector;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ColorPickerSelector.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"style-wrapper\" _id=\"colorpickerselector_0\">\r    <div class=\"color-area\" _id=\"colorpickerselector_1\">\r        <div class=\"area-dot\" _id=\"colorpickerselector_2\"></div>\r    </div>\r    <div class=\"color-panel\">\r        <div class=\"color-hue\">\r            <rk-slider min=\"0\" max=\"360\" _id=\"colorpickerselector_3\"></rk-slider>\r        </div>\r        <div class=\"color-alpha\">\r            <rk-slider min=\"0\" max=\"100\" _id=\"colorpickerselector_4\">\r                <span class=\"bar\" slot=\"bar\"></span>\r                <span class=\"bar-color\" slot=\"bar\"></span>\r                <span class=\"dot\" slot=\"dot\"></span>\r                <span class=\"dot-color\" slot=\"dot\"></span>\r            </rk-slider>\r        </div>\r        <div class=\"color-result\">\r            <div class=\"color-preview\"></div>\r            <div class=\"color-text\">\r                <rk-input _id=\"colorpickerselector_5\"></rk-input>\r            </div>\r        </div>\r        <div class=\"color-preset\" _id=\"colorpickerselector_6\"></div>\r    </div>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"styleWrapper\",\n      \"ids\": [\n        \"colorpickerselector_0\"\n      ]\n    },\n    {\n      \"name\": \"areaEl\",\n      \"ids\": [\n        \"colorpickerselector_1\"\n      ]\n    },\n    {\n      \"name\": \"areaDotEl\",\n      \"ids\": [\n        \"colorpickerselector_2\"\n      ]\n    },\n    {\n      \"name\": \"presetEl\",\n      \"ids\": [\n        \"colorpickerselector_6\"\n      ]\n    }\n  ],\n  \"bindings\": [\n    {\n      \"id\": \"colorpickerselector_3\",\n      \"injectionName\": \"value\",\n      \"eventNames\": [\n        \"onChange\"\n      ],\n      \"inject\": (c) => c.comp.__8e40e5b3dc0703a294a7003ba5b4bc48method0(),\n      \"extract\": (c, v) => c.comp.__8e40e5b3dc0703a294a7003ba5b4bc48method1(v),\n      \"once\": true,\n      \"isCallback\": true\n    },\n    {\n      \"id\": \"colorpickerselector_4\",\n      \"injectionName\": \"value\",\n      \"eventNames\": [\n        \"onChange\"\n      ],\n      \"inject\": (c) => c.comp.__8e40e5b3dc0703a294a7003ba5b4bc48method2(),\n      \"extract\": (c, v) => c.comp.__8e40e5b3dc0703a294a7003ba5b4bc48method3(v),\n      \"once\": true,\n      \"isCallback\": true\n    },\n    {\n      \"id\": \"colorpickerselector_5\",\n      \"injectionName\": \"value\",\n      \"eventNames\": [\n        \"onChange\"\n      ],\n      \"inject\": (c) => c.comp.__8e40e5b3dc0703a294a7003ba5b4bc48method4(),\n      \"extract\": (c, v) => c.comp.__8e40e5b3dc0703a294a7003ba5b4bc48method5(v),\n      \"once\": true,\n      \"isCallback\": true\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"ColorPickerSelector\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('direction')){ this['direction'] = 'horizontal'; }\rif(!this.hasAttribute('opacity')) { this.attributeChangedCallback('opacity', false, false); }\rif(!this.hasAttribute('show_text_value')) {this.setAttribute('show_text_value' ,'true'); }\rif(!this.hasAttribute('color')){ this['color'] = \"#ffffff\"; }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"colorTxt\"] = \"\";\rw[\"hue\"] = 0;\rw[\"alpha\"] = 100;\rw[\"presets\"] = [];\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('direction');\rthis.__upgradeProperty('opacity');\rthis.__upgradeProperty('show_text_value');\rthis.__upgradeProperty('color');\rthis.__correctGetter('colorTxt');\rthis.__correctGetter('hue');\rthis.__correctGetter('alpha');\rthis.__correctGetter('presets');\r }\n    __listBoolProps() { return [\"opacity\",\"show_text_value\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    onColorTxtChange() {\n        if (Lib.Color.isValid(this.colorTxt) && !this.internalSet) {\n            this._color.setColorTxt(this.colorTxt);\n            this.hue = this._color.hsv.h;\n            this.alpha = this._color.a * 100;\n            this.updatePositionFromColor(this._color);\n        }\n    }\n    emitChange() {\n        if (this.canEmit) {\n            this.onChange.trigger([this.color]);\n        }\n    }\n    changeHue() {\n        this._color.h = this.hue;\n        this.styleWrapper.style.setProperty(\"--_color-picker-selector-area-color\", `hsl(${this.hue}, 100%, 50%)`);\n    }\n    changeAlpha() {\n        this._color.a = this.alpha / 100;\n    }\n    applyColorChange() {\n        this.styleWrapper.style.setProperty(\"--_color-picker-selector-color\", this._color.hex);\n        this.styleWrapper.style.setProperty(\"--_color-picker-selector-area-color\", `hsl(${this.hue}, 100%, 50%)`);\n        this.styleWrapper.style.setProperty(\"--_color-picker-selector-color-opacity\", this._color.rgbString);\n        this.internalSet = true;\n        let hex = this._color.hex;\n        if (this.colorTxt != hex) {\n            this.colorTxt = this._color.hex;\n        }\n        if (this.color != hex) {\n            this.color = this._color.hex;\n            this.emitChange();\n        }\n        this.internalSet = false;\n    }\n    addPressManager() {\n        let clientRect;\n        const calc = (e) => {\n            let positionX = e.clientX - clientRect.x;\n            let positionY = e.clientY - clientRect.y;\n            if (positionX < 0)\n                positionX = 0;\n            else if (positionX > clientRect.width)\n                positionX = clientRect.width;\n            if (positionY < 0)\n                positionY = 0;\n            else if (positionY > clientRect.height)\n                positionY = clientRect.height;\n            this.areaDotEl.style.left = positionX + 'px';\n            this.areaDotEl.style.top = positionY + 'px';\n            this.updateColorFromPosition(positionX, positionY);\n        };\n        new Aventus.DragAndDrop({\n            element: this.areaEl,\n            applyDrag: false,\n            offsetDrag: 0,\n            onPointerDown: (e) => {\n                clientRect = this.areaEl.getBoundingClientRect();\n                calc(e);\n            },\n            onMove: (e, position) => {\n                calc(e);\n            }\n        });\n    }\n    updateColorFromPosition(x, y) {\n        const { width, height } = this.areaEl.getBoundingClientRect();\n        const hsv = {\n            h: this.hue,\n            s: x / width * 100,\n            v: 100 - (y / height * 100),\n        };\n        this._color.hsv = hsv;\n    }\n    updatePositionFromColor(color) {\n        const { width, height } = this.areaEl.getBoundingClientRect();\n        const { h, s, v } = color.hsv;\n        const x = width * s / 100;\n        const y = (100 - v) * height / 100;\n        this.areaDotEl.style.left = x + 'px';\n        this.areaDotEl.style.top = y + 'px';\n    }\n    renderPresets() {\n        this.presetEl.innerHTML = '';\n        const createPreset = (color) => {\n            const el = document.createElement(\"div\");\n            el.classList.add(\"preset\");\n            el.style.backgroundColor = color;\n            el.addEventListener(\"click\", () => {\n                this._color.setColorTxt(color);\n                this.hue = this._color.hsv.h;\n                this.alpha = this._color.a * 100;\n                this.updatePositionFromColor(this._color);\n            });\n            this.presetEl.appendChild(el);\n        };\n        for (const preset of this.presets) {\n            createPreset(preset);\n        }\n    }\n    addObserver() {\n        this.resizeObserver = new Aventus.ResizeObserver(() => {\n            this.updatePositionFromColor(this._color);\n        });\n        this.resizeObserver.observe(this.areaEl);\n    }\n    postCreation() {\n        this.hue = this._color.hsv.h;\n        this.alpha = this._color.a * 100;\n        this.applyColorChange();\n        this.addPressManager();\n        this.renderPresets();\n        this.updatePositionFromColor(this._color);\n        this.addObserver();\n    }\n    postDestruction() {\n        if (this.resizeObserver) {\n            this.resizeObserver.disconnect();\n            this.resizeObserver = undefined;\n        }\n    }\n    __8e40e5b3dc0703a294a7003ba5b4bc48method0() {\n        return this.hue;\n    }\n    __8e40e5b3dc0703a294a7003ba5b4bc48method1(v) {\n        if (this) {\n            this.hue = v;\n        }\n    }\n    __8e40e5b3dc0703a294a7003ba5b4bc48method2() {\n        return this.alpha;\n    }\n    __8e40e5b3dc0703a294a7003ba5b4bc48method3(v) {\n        if (this) {\n            this.alpha = v;\n        }\n    }\n    __8e40e5b3dc0703a294a7003ba5b4bc48method4() {\n        return this.colorTxt;\n    }\n    __8e40e5b3dc0703a294a7003ba5b4bc48method5(v) {\n        if (this) {\n            this.colorTxt = v;\n        }\n    }\n}\nComponents.ColorPickerSelector.Namespace=`Core.Components`;\nComponents.ColorPickerSelector.Tag=`rk-color-picker-selector`;\n_.Components.ColorPickerSelector=Components.ColorPickerSelector;\nif(!window.customElements.get('rk-color-picker-selector')){window.customElements.define('rk-color-picker-selector', Components.ColorPickerSelector);Aventus.WebComponentInstance.registerDefinition(Components.ColorPickerSelector);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.ColorPickerSelector","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"Core.Lib.Color","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"DOMRect","isStrong":false},{"fullName":"Aventus.NormalizedEvent","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Slider","isStrong":false},{"fullName":"Input","isStrong":false}],"fullName":"Core.Components.ColorPickerSelector","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-color-picker-selector"},{"code":"Components.ColorPicker = class ColorPicker extends Components.FormElement {\n    static get observedAttributes() {return [\"value\", \"label\", \"placeholder\", \"direction\", \"opacity\", \"show_text_value\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'preview'() { return this.getStringAttr('preview') }\n    set 'preview'(val) { this.setStringAttr('preview', val) }\r    get 'value'() { return this.getStringProp('value') }\n    set 'value'(val) { this.setStringAttr('value', val) }\rget 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'placeholder'() { return this.getStringProp('placeholder') }\n    set 'placeholder'(val) { this.setStringAttr('placeholder', val) }\rget 'direction'() { return this.getStringProp('direction') }\n    set 'direction'(val) { this.setStringAttr('direction', val) }\rget 'opacity'() { return this.getBoolProp('opacity') }\n    set 'opacity'(val) { this.setBoolAttr('opacity', val) }\rget 'show_text_value'() { return this.getBoolProp('show_text_value') }\n    set 'show_text_value'(val) { this.setBoolAttr('show_text_value', val) }\r    get 'presets'() {\n\t\t\t\t\t\treturn this.__watch[\"presets\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'presets'(val) {\n\t\t\t\t\t\tthis.__watch[\"presets\"] = val;\n\t\t\t\t\t}\r    errorsTxt = {};\n    defaultErrorsTxt = {\n        notColor: \"La couleur n'est pas valide\",\n    };\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"presets\");\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"value\", ((target) => {\n    if (document.activeElement != target.inputEl && document.activeElement != target) {\n        target.inputEl.value = target.value + '';\n    }\n    target.containerEl.style.setProperty('--_color-picker-selected-color', target.value ?? 'transparent');\n}));\r }\n    static __style = `:host{--_color-picker-height: var(--color-picker-height, 30px);--_color-picker-background-color: var(--color-picker-background-color, var(--form-element-background, white));--_color-picker-icon-height: var(--color-picker-icon-height, calc(var(--_color-picker-height) / 2));--_color-picker-error-logo-size: var(--color-picker-error-logo-size, calc(var(--_color-picker-height) / 2));--_color-picker-font-size: var(--color-picker-font-size, var(--form-element-font-size, 16px));--_color-picker-font-size-label: var(--color-picker-font-size-label, var(--form-element-font-size-label, calc(var(--_color-picker-font-size) * 0.95)));--_color-picker-color-picker-border: var(--color-picker-color-picker-border, var(--form-element-border, 1px solid var(--lighter-active)));--_color-picker-border-radius: var(--color-picker-border-radius, var(--form-element-border-radius, 0))}:host{min-width:100px;width:100%}:host label{display:none;font-size:var(--_color-picker-font-size-label);margin-bottom:5px;margin-left:3px;cursor:pointer}:host .input{align-items:center;background-color:var(--_color-picker-background-color);border:var(--_color-picker-color-picker-border);border-radius:var(--_color-picker-border-radius);display:flex;height:var(--_color-picker-height);overflow:hidden;padding:0 10px;width:100%}:host .input .preview{aspect-ratio:1/1;background-image:repeating-linear-gradient(45deg, #aaa 25%, transparent 25%, transparent 75%, #aaa 75%, #aaa),repeating-linear-gradient(45deg, #aaa 25%, #fff 25%, #fff 75%, #aaa 75%, #aaa);background-position:0 0,2px 2px;background-size:4px 4px;border-radius:var(--_color-picker-border-radius);cursor:pointer;display:none;height:calc(100% - 10px);position:relative}:host .input .preview::after{background-color:var(--_color-picker-selected-color);border-radius:var(--_color-picker-border-radius);content:\"\";inset:0;position:absolute}:host .input .preview-before{margin-right:10px}:host .input .preview-after{margin-left:10px}:host .input input{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;flex-grow:1;font-size:var(--_color-picker-font-size);height:100%;margin:0;min-width:0;outline:none;padding:5px 0;padding-right:10px}:host .input .error-logo{align-items:center;background-color:var(--red);border-radius:var(--border-radius-round);color:#fff;display:none;flex-shrink:0;font-size:calc(var(--_color-picker-error-logo-size) - 5px);height:var(--_color-picker-error-logo-size);justify-content:center;width:var(--_color-picker-error-logo-size)}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:10px;margin-bottom:0px}:host .errors div{margin:5px 0}:host rk-color-picker-selector{display:none}:host([has_errors]) .input{border:1px solid var(--red)}:host([has_errors]) .input .error-logo{display:flex}:host([has_errors]) .errors{display:block}:host([label]:not([label=\"\"])) label{display:flex}:host([preview=before]) .input .preview-before{display:block}:host([preview=after]) .input .preview-after{display:block}`;\n    __getStatic() {\n        return ColorPicker;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ColorPicker.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'prepend':`<slot name=\"prepend\"></slot>`,'append':`<slot name=\"append\"></slot>` }, \n        blocks: { 'default':`<label for=\"input\" _id=\"colorpicker_0\"></label><div class=\"input\" _id=\"colorpicker_1\">\r    <slot name=\"prepend\"></slot>\r    <div class=\"preview preview-before\"></div>\r    <input id=\"input\" autocomplete=\"off\" _id=\"colorpicker_2\" />\r    <slot name=\"append\"></slot>\r    <div class=\"preview preview-after\"></div>\r    <div class=\"error-logo\">!</div>\r</div><div class=\"errors\">\r    <template _id=\"colorpicker_3\"></template>\r</div><rk-color-picker-selector _id=\"colorpicker_6\"></rk-color-picker-selector>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"containerEl\",\n      \"ids\": [\n        \"colorpicker_1\"\n      ]\n    },\n    {\n      \"name\": \"inputEl\",\n      \"ids\": [\n        \"colorpicker_2\"\n      ]\n    },\n    {\n      \"name\": \"pickerEl\",\n      \"ids\": [\n        \"colorpicker_6\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"colorpicker_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod1())}`,\n      \"once\": true\n    },\n    \"colorpicker_2°placeholder\": {\n      \"fct\": (c) => `${c.print(c.comp.__ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod2())}`,\n      \"once\": true\n    }\n  },\n  \"injection\": [\n    {\n      \"id\": \"colorpicker_6\",\n      \"injectionName\": \"direction\",\n      \"inject\": (c) => c.comp.__ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod4(),\n      \"once\": true\n    },\n    {\n      \"id\": \"colorpicker_6\",\n      \"injectionName\": \"opacity\",\n      \"inject\": (c) => c.comp.__ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod5(),\n      \"once\": true\n    },\n    {\n      \"id\": \"colorpicker_6\",\n      \"injectionName\": \"show_text_value\",\n      \"inject\": (c) => c.comp.__ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod6(),\n      \"once\": true\n    },\n    {\n      \"id\": \"colorpicker_6\",\n      \"injectionName\": \"presets\",\n      \"inject\": (c) => c.comp.__ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod7(),\n      \"once\": true\n    }\n  ],\n  \"events\": [\n    {\n      \"eventName\": \"input\",\n      \"id\": \"colorpicker_2\",\n      \"fct\": (e, c) => c.comp.txtChange(e)\n    },\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"colorpicker_2\",\n      \"fct\": (e, c) => c.comp.removeErrors(e)\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"colorpicker_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showPicker(e, pressInstance); }\n    },\n    {\n      \"id\": \"colorpicker_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showPicker(e, pressInstance); }\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(` \r        <template _id=\"colorpicker_4\"></template>\r    `);\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'colorpicker_3',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\rconst templ1 = new Aventus.Template(this);\rtempl1.setTemplate(`\r            <div _id=\"colorpicker_5\"></div>\r        `);\rtempl1.setActions({\n  \"content\": {\n    \"colorpicker_5°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod3(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rtempl0.addIf({\n                    anchorId: 'colorpicker_4',\n                    parts: [{once: true,\n                    condition: (c) => true,\n                    template: templ1\n                }]\n            });\r }\n    getClassName() {\n        return \"ColorPicker\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('preview')){ this['preview'] = 'before'; }\rif(!this.hasAttribute('value')){ this['value'] = undefined; }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('placeholder')){ this['placeholder'] = undefined; }\rif(!this.hasAttribute('direction')){ this['direction'] = 'horizontal'; }\rif(!this.hasAttribute('opacity')) { this.attributeChangedCallback('opacity', false, false); }\rif(!this.hasAttribute('show_text_value')) {this.setAttribute('show_text_value' ,'true'); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"presets\"] = [];\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('preview');\rthis.__upgradeProperty('value');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('placeholder');\rthis.__upgradeProperty('direction');\rthis.__upgradeProperty('opacity');\rthis.__upgradeProperty('show_text_value');\rthis.__correctGetter('presets');\r }\n    __listBoolProps() { return [\"opacity\",\"show_text_value\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    removeErrors() {\n        this.errors = [];\n    }\n    showPicker() {\n        let box = this.getBoundingClientRect();\n        let boxInput = this.inputEl.getBoundingClientRect();\n        let newTop = boxInput.top + boxInput.height + 2;\n        this.pickerEl.style.position = 'absolute';\n        this.pickerEl.style.top = newTop + 'px';\n        this.pickerEl.style.left = box.left + 'px';\n        this.pickerEl.setAttribute(\"tabindex\", \"-1\");\n        this.pickerEl.colorTxt = this.value ?? \"#ffffff\";\n        document.body.appendChild(this.pickerEl);\n    }\n    manageFocus() {\n        let blurTimeout = 0;\n        ;\n        let blur = () => {\n            blurTimeout = setTimeout(() => {\n                this.shadowRoot.appendChild(this.pickerEl);\n                this.validate();\n            }, 100);\n        };\n        this.inputEl.addEventListener(\"blur\", () => {\n            blur();\n        });\n        this.pickerEl.addEventListener(\"blur\", () => {\n            blur();\n        });\n        this.inputEl.addEventListener(\"focus\", () => {\n            clearTimeout(blurTimeout);\n        });\n        this.pickerEl.addEventListener(\"focus\", () => {\n            clearTimeout(blurTimeout);\n        });\n    }\n    localValidation() {\n        let errors = [];\n        if (this.inputEl.value && !Lib.Color.isValid(this.inputEl.value)) {\n            const txt = this.errorsTxt.notColor ?? this.defaultErrorsTxt.notColor;\n            errors.push(txt);\n        }\n        return errors;\n    }\n    onFormValidation(errors) {\n        errors = [...this.localValidation(), ...errors];\n        return super.onFormValidation(errors);\n    }\n    async validate() {\n        if (!this.formPart) {\n            this.errors = this.localValidation();\n            return this.errors.length == 0;\n        }\n        return await this.formPart.test();\n    }\n    txtChange() {\n        if (Lib.Color.isValid(this.inputEl.value)) {\n            this.value = this.inputEl.value;\n            this.pickerEl.colorTxt = this.inputEl.value;\n            this.onChange.trigger([this.value]);\n            if (this.formPart) {\n                this.formPart.value.set(this.value);\n            }\n        }\n    }\n    postCreation() {\n        this.manageFocus();\n        this.pickerEl.onChange.add(() => {\n            this.value = this.pickerEl.colorTxt;\n            this.onChange.trigger([this.value]);\n            if (this.formPart) {\n                this.formPart.value.set(this.value);\n            }\n        });\n    }\n    __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod1() {\n        return this.label;\n    }\n    __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod2() {\n        return this.placeholder;\n    }\n    __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod3(error) {\n        return error;\n    }\n    __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod4() {\n        return this.direction;\n    }\n    __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod5() {\n        return this.opacity;\n    }\n    __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod6() {\n        return this.show_text_value;\n    }\n    __ca0a8e7f97d8ea0f1952ac0ce1ca76bbmethod7() {\n        return this.presets;\n    }\n}\nComponents.ColorPicker.Namespace=`Core.Components`;\nComponents.ColorPicker.Tag=`rk-color-picker`;\n_.Components.ColorPicker=Components.ColorPicker;\nif(!window.customElements.get('rk-color-picker')){window.customElements.define('rk-color-picker', Components.ColorPicker);Aventus.WebComponentInstance.registerDefinition(Components.ColorPicker);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.ColorPicker","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false},{"fullName":"Core.Components.ColorPickerSelector","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Partial","isStrong":false},{"fullName":"Core.Lib.Color","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"ColorPickerSelector","isStrong":false}],"fullName":"Core.Components.ColorPicker","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-color-picker"},{"code":"Components.DatePickerCalendar = class DatePickerCalendar extends Components.Calendar {\n    picker;\n    static __style = ``;\n    __getStatic() {\n        return DatePickerCalendar;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(DatePickerCalendar.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`` }\n    });\n}\n    getClassName() {\n        return \"DatePickerCalendar\";\n    }\n    defineCalendarDay() {\n        return Components.DatePickerCalendarDay;\n    }\n}\nComponents.DatePickerCalendar.Namespace=`Core.Components`;\nComponents.DatePickerCalendar.Tag=`rk-date-picker-calendar`;\n_.Components.DatePickerCalendar=Components.DatePickerCalendar;\nif(!window.customElements.get('rk-date-picker-calendar')){window.customElements.define('rk-date-picker-calendar', Components.DatePickerCalendar);Aventus.WebComponentInstance.registerDefinition(Components.DatePickerCalendar);}\n","dependances":[{"fullName":"Core.Components.Calendar","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.DatePicker","isStrong":false},{"fullName":"Core.Components.CalendarDay","isStrong":false},{"fullName":"Core.Components.DatePickerCalendarDay","isStrong":false}],"fullName":"Core.Components.DatePickerCalendar","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-date-picker-calendar"},{"code":"Components.DatePicker = class DatePicker extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"icon\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'year_format'() { return this.getStringAttr('year_format') }\n    set 'year_format'(val) { this.setStringAttr('year_format', val) }\rget 'month_format'() { return this.getStringAttr('month_format') }\n    set 'month_format'(val) { this.setStringAttr('month_format', val) }\rget 'day_format'() { return this.getStringAttr('day_format') }\n    set 'day_format'(val) { this.setStringAttr('day_format', val) }\rget 'locale'() { return this.getStringAttr('locale') }\n    set 'locale'(val) { this.setStringAttr('locale', val) }\rget 'time_zone'() { return this.getStringAttr('time_zone') }\n    set 'time_zone'(val) { this.setStringAttr('time_zone', val) }\rget 'hide_on_select'() { return this.getBoolAttr('hide_on_select') }\n    set 'hide_on_select'(val) { this.setBoolAttr('hide_on_select', val) }\rget 'show_close'() { return this.getBoolAttr('show_close') }\n    set 'show_close'(val) { this.setBoolAttr('show_close', val) }\rget 'no_undefined'() { return this.getBoolAttr('no_undefined') }\n    set 'no_undefined'(val) { this.setBoolAttr('no_undefined', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\r    get 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\r    calendar;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"value\", ((target) => {\n    target.renderDate();\n}));\r    super.__registerWatchesActions();\n}\n    static __style = `:host{--_datepicker-height: var(--input-height, 30px);--_datepicker-background-color: var(--input-background-color, var(--form-element-background, white));--_datepicker-icon-height: var(--input-icon-height, calc(var(--_datepicker-height) / 2));--_datepicker-error-logo-size: var(--input-error-logo-size, calc(var(--_datepicker-height) / 2));--_datepicker-font-size: var(--input-font-size, var(--form-element-font-size, 16px));--_datepicker-font-size-label: var(--input-font-size-label, var(--form-element-font-size-label, calc(var(--_datepicker-font-size) * 0.95)));--_datepicker-input-border: var(--input-input-border, var(--form-element-border, 1px solid var(--lighter-active)));--_datepicker-border-radius: var(--input-border-radius, var(--form-element-border-radius, 0))}:host{min-width:100px;width:100%}:host label{display:none;font-size:var(--_datepicker-font-size-label);margin-bottom:5px;margin-left:3px;cursor:pointer}:host .input{align-items:center;background-color:var(--_datepicker-background-color);border:var(--_datepicker-input-border);border-radius:var(--_datepicker-border-radius);display:flex;height:var(--_datepicker-height);padding:0 10px;width:100%}:host .input .icon{display:none;flex-shrink:0;height:var(--_datepicker-icon-height);margin-right:10px}:host .input input{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;flex-grow:1;font-size:var(--_datepicker-font-size);height:100%;margin:0;min-width:0;outline:none;padding:5px 0;padding-right:10px}:host .input .close-icon{font-size:18px;flex-shrink:0;display:none}:host .input .error-logo{align-items:center;background-color:var(--red);border-radius:var(--border-radius-round);color:#fff;display:none;flex-shrink:0;font-size:calc(var(--_datepicker-error-logo-size) - 5px);height:var(--_datepicker-error-logo-size);justify-content:center;width:var(--_datepicker-error-logo-size)}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:10px;margin-bottom:0px}:host .errors div{margin:5px 0}:host([has_errors]) .input{border:1px solid var(--red)}:host([has_errors]) .input .error-logo{display:flex}:host([has_errors]) .errors{display:block}:host([icon]:not([icon=\"\"])) .input .icon{display:block}:host([label]:not([label=\"\"])) label{display:flex}:host([show_close]:not([no_undefined])) .input .close-icon{display:inline-block}`;\n    constructor() {\n            super();\n            this.bindCalendar();\n        }\n    __getStatic() {\n        return DatePicker;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(DatePicker.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<label for=\"input\" _id=\"datepicker_0\"></label><div class=\"input\" _id=\"datepicker_1\">\r    <rk-img class=\"icon\" _id=\"datepicker_2\"></rk-img>\r    <input id=\"input\" readonly autocomplete=\"off\" _id=\"datepicker_3\" />\r    <mi-icon class=\"close-icon touch\" icon=\"close\" _id=\"datepicker_4\"></mi-icon>\r    <div class=\"error-logo\">!</div>\r</div><div class=\"errors\">\r    <template _id=\"datepicker_5\"></template>\r</div><rk-calendar-container _id=\"datepicker_7\"></rk-calendar-container>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"inputEl\",\n      \"ids\": [\n        \"datepicker_3\"\n      ]\n    },\n    {\n      \"name\": \"calendarContainer\",\n      \"ids\": [\n        \"datepicker_7\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"datepicker_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__e3c5860a3719823edab2c4b36e42865dmethod1())}`,\n      \"once\": true\n    },\n    \"datepicker_2°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__e3c5860a3719823edab2c4b36e42865dmethod2())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"datepicker_3\",\n      \"fct\": (e, c) => c.comp.removeErrors(e)\n    },\n    {\n      \"eventName\": \"input\",\n      \"id\": \"datepicker_3\",\n      \"fct\": (e, c) => c.comp.onValueChange(e)\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"datepicker_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showCalendar(e, pressInstance); }\n    },\n    {\n      \"id\": \"datepicker_4\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.clearValue(e, pressInstance); }\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(` \r        <div _id=\"datepicker_6\"></div>\r    `);\rtempl0.setActions({\n  \"content\": {\n    \"datepicker_6°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__e3c5860a3719823edab2c4b36e42865dmethod3(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'datepicker_5',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\r }\n    getClassName() {\n        return \"DatePicker\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('year_format')){ this['year_format'] = \"numeric\"; }\rif(!this.hasAttribute('month_format')){ this['month_format'] = \"2-digit\"; }\rif(!this.hasAttribute('day_format')){ this['day_format'] = \"2-digit\"; }\rif(!this.hasAttribute('locale')){ this['locale'] = undefined; }\rif(!this.hasAttribute('time_zone')){ this['time_zone'] = undefined; }\rif(!this.hasAttribute('hide_on_select')) { this.attributeChangedCallback('hide_on_select', false, false); }\rif(!this.hasAttribute('show_close')) { this.attributeChangedCallback('show_close', false, false); }\rif(!this.hasAttribute('no_undefined')) { this.attributeChangedCallback('no_undefined', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"value\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('year_format');\rthis.__upgradeProperty('month_format');\rthis.__upgradeProperty('day_format');\rthis.__upgradeProperty('locale');\rthis.__upgradeProperty('time_zone');\rthis.__upgradeProperty('hide_on_select');\rthis.__upgradeProperty('show_close');\rthis.__upgradeProperty('no_undefined');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('icon');\rthis.__correctGetter('value');\r }\n    __listBoolProps() { return [\"hide_on_select\",\"show_close\",\"no_undefined\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    defineCalendar() {\n        return Components.DatePickerCalendar;\n    }\n    renderDate() {\n        if (!this.value) {\n            this.inputEl.value = '';\n            this.show_close = false;\n        }\n        else {\n            this.inputEl.value = this.value.toLocaleDateString(this.locale, {\n                year: this.year_format,\n                month: this.month_format,\n                day: this.day_format,\n                timeZone: this.time_zone,\n            });\n            this.show_close = true;\n        }\n        this.calendar.date = this.value ?? new Date();\n    }\n    removeErrors() {\n        this.errors = [];\n    }\n    onValueChange() {\n        this.onChange.trigger([this.value]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    clearValue() {\n        this.value = undefined;\n        this.onValueChange();\n    }\n    showCalendar() {\n        this.calendarContainer.show();\n        setTimeout(() => {\n            this.calendarContainer.focus({ preventScroll: true });\n        }, 100);\n    }\n    bindCalendar() {\n        this.calendar = new (this.defineCalendar())();\n        this.calendar.picker = this;\n        this.calendar.onDateClicked.add((date, caseEl) => {\n            if (!Lib.DateTools.isSameDate(this.value, date)) {\n                this.value = date;\n                this.onValueChange();\n                if (this.hide_on_select) {\n                    this.calendarContainer.hide();\n                }\n            }\n        });\n    }\n    manageFocus() {\n        this.calendarContainer.init(this);\n        let blurTimeout = 0;\n        ;\n        let blur = () => {\n            blurTimeout = setTimeout(() => {\n                this.calendarContainer.hide();\n            }, 100);\n        };\n        this.inputEl.addEventListener(\"blur\", () => {\n            blur();\n        });\n        this.calendarContainer.addEventListener(\"blur\", (e) => {\n            blur();\n        });\n        this.inputEl.addEventListener(\"focus\", () => {\n            clearTimeout(blurTimeout);\n        });\n        this.calendarContainer.addEventListener(\"focus\", () => {\n            clearTimeout(blurTimeout);\n        });\n    }\n    postCreation() {\n        super.postCreation();\n        this.manageFocus();\n        this.renderDate();\n    }\n    __e3c5860a3719823edab2c4b36e42865dmethod1() {\n        return this.label;\n    }\n    __e3c5860a3719823edab2c4b36e42865dmethod2() {\n        return this.icon;\n    }\n    __e3c5860a3719823edab2c4b36e42865dmethod3(error) {\n        return error;\n    }\n}\nComponents.DatePicker.Namespace=`Core.Components`;\nComponents.DatePicker.Tag=`rk-date-picker`;\n_.Components.DatePicker=Components.DatePicker;\nif(!window.customElements.get('rk-date-picker')){window.customElements.define('rk-date-picker', Components.DatePicker);Aventus.WebComponentInstance.registerDefinition(Components.DatePicker);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Date","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"locale","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.CalendarContainer","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.DatePicker","isStrong":false},{"fullName":"Core.Components.DatePickerCalendar","isStrong":false},{"fullName":"InternalProtected","isStrong":false},{"fullName":"Core.Lib.DateTools","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false},{"fullName":"CalendarContainer","isStrong":false}],"fullName":"Core.Components.DatePicker","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-date-picker"},{"code":"Components.CalendarContainer = class CalendarContainer extends Aventus.WebComponent {\n    get 'visible'() { return this.getBoolAttr('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\r    picker;\n    static __style = `:host{display:none;position:absolute;z-index:800}:host([visible]){display:block}`;\n    __getStatic() {\n        return CalendarContainer;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(CalendarContainer.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`` }\n    });\n}\n    getClassName() {\n        return \"CalendarContainer\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('visible')) { this.attributeChangedCallback('visible', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('visible');\r }\n    __listBoolProps() { return [\"visible\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    init(picker) {\n        this.picker = picker;\n        this.shadowRoot.appendChild(picker.calendar);\n    }\n    async show(container) {\n        if (!container) {\n            container = document.body;\n        }\n        let box = this.picker.getBoundingClientRect();\n        let boxInput = this.picker.inputEl.getBoundingClientRect();\n        let contBox = container.getBoundingClientRect();\n        let newTop = boxInput.top + boxInput.height + 2;\n        this.style.top = newTop + 'px';\n        this.style.bottom = '';\n        this.style.left = box.left + 'px';\n        this.style.right = '';\n        container.appendChild(this);\n        this.visible = true;\n        let height = this.offsetHeight;\n        if (height + newTop > contBox.height) {\n            newTop = contBox.height - boxInput.top + 2;\n            this.style.top = '';\n            this.style.bottom = newTop + 'px';\n        }\n        let width = this.offsetWidth;\n        if (width + box.left > contBox.width) {\n            let newRight = contBox.width - (width) - 2;\n            this.style.left = newRight + 'px';\n        }\n    }\n    hide() {\n        this.visible = false;\n        this.parentElement?.removeChild(this);\n    }\n    postCreation() {\n        this.setAttribute(\"tabindex\", \"-1\");\n    }\n}\nComponents.CalendarContainer.Namespace=`Core.Components`;\nComponents.CalendarContainer.Tag=`rk-calendar-container`;\n_.Components.CalendarContainer=Components.CalendarContainer;\nif(!window.customElements.get('rk-calendar-container')){window.customElements.define('rk-calendar-container', Components.CalendarContainer);Aventus.WebComponentInstance.registerDefinition(Components.CalendarContainer);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.DatePicker","isStrong":false},{"fullName":"HTMLElement","isStrong":false}],"fullName":"Core.Components.CalendarContainer","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-calendar-container"},{"code":"Components.Input = class Input extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"placeholder\", \"unit\", \"icon\", \"icon_position\", \"value\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'readonly'() { return this.getBoolAttr('readonly') }\n    set 'readonly'(val) { this.setBoolAttr('readonly', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'placeholder'() { return this.getStringProp('placeholder') }\n    set 'placeholder'(val) { this.setStringAttr('placeholder', val) }\rget 'unit'() { return this.getStringProp('unit') }\n    set 'unit'(val) { this.setStringAttr('unit', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\rget 'icon_position'() { return this.getStringProp('icon_position') }\n    set 'icon_position'(val) { this.setStringAttr('icon_position', val) }\rget 'value'() { return this.getStringProp('value') }\n    set 'value'(val) { this.setStringAttr('value', val) }\r    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"value\", ((target) => {\n    target.inputEl.value = target.value ?? \"\";\n}));\r }\n    static __style = `:host{--_input-height: var(--input-height, 30px);--_input-background-color: var(--input-background-color, var(--form-element-background, white));--_input-icon-height: var(--input-icon-height, calc(var(--_input-height) / 2));--_input-error-logo-size: var(--input-error-logo-size, calc(var(--_input-height) / 2));--_input-font-size: var(--input-font-size, var(--form-element-font-size, 16px));--_input-font-size-label: var(--input-font-size-label, var(--form-element-font-size-label, calc(var(--_input-font-size) * 0.95)));--_input-input-border: var(--input-input-border, var(--form-element-border, 1px solid var(--lighter-active)));--_input-border-radius: var(--input-border-radius, var(--form-element-border-radius, 0));--_input-readonly-background-color: var(--input-readonly-background-color, var(--form-element-background-readonly, var(--_input-background-color)));--_input-readonly-border: var(--input-readonly-border, var(--form-element-border-readonly, var(--_input-input-border)));--_input-unit-background-color: var(--input-unit-background-color, var(--secondary-color));--_input-unit-color: var(--input-unit-color, var(--text-color-secondary))}:host{min-width:100px;width:100%}:host label{cursor:pointer;display:none;font-size:var(--_input-font-size-label);margin-bottom:5px;margin-left:3px}:host .input{align-items:center;background-color:var(--_input-background-color);border:var(--_input-input-border);border-radius:var(--_input-border-radius);display:flex;height:var(--_input-height);overflow:hidden;padding:0 10px;width:100%}:host .input .icon{display:none;flex-shrink:0;height:var(--_input-icon-height);margin-right:10px}:host .input input{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;flex-grow:1;font-size:var(--_input-font-size);height:100%;margin:0;min-width:0;outline:none;padding:5px 0;padding-right:10px}:host .input .error-logo{align-items:center;background-color:var(--red);border-radius:var(--border-radius-round);color:#fff;display:none;flex-shrink:0;font-size:calc(var(--_input-error-logo-size) - 5px);height:var(--_input-error-logo-size);justify-content:center;width:var(--_input-error-logo-size)}:host .input .unit{align-items:center;background-color:var(--_input-unit-background-color);color:var(--_input-unit-color);display:flex;font-size:14px;height:100%;justify-content:center;margin-right:-10px;padding-left:10px;padding-right:10px}:host .input .unit:empty{display:none}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:10px;margin-bottom:0px}:host .errors div{margin:5px 0}:host([has_errors]) .input{border:1px solid var(--red)}:host([has_errors]) .input .error-logo{display:flex}:host([has_errors]) .errors{display:block}:host([icon]:not([icon=\"\"])) .input .icon{display:block}:host([icon_position=right]) .input .icon{margin-right:0px;order:2}:host([icon_position=right]) .input .input{order:1}:host([icon_position=right]) .input .error-logo{margin-left:10px;order:3}:host([label]:not([label=\"\"])) label{display:flex}:host([readonly]){pointer-events:none}:host([readonly]) .input{background-color:var(--_input-readonly-background-color);border:var(--_input-readonly-border)}`;\n    __getStatic() {\n        return Input;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Input.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'prepend':`<slot name=\"prepend\">\r        <rk-img class=\"icon\" _id=\"input_1\"></rk-img>\r    </slot>`,'append':`<slot name=\"append\">\r        <span class=\"unit\" _id=\"input_3\"></span>\r    </slot>` }, \n        blocks: { 'default':`<label for=\"input\" _id=\"input_0\"></label><div class=\"input\">\r    <slot name=\"prepend\">\r        <rk-img class=\"icon\" _id=\"input_1\"></rk-img>\r    </slot>\r    <input autocomplete=\"off\" id=\"input\" _id=\"input_2\" />\r    <slot name=\"append\">\r        <span class=\"unit\" _id=\"input_3\"></span>\r    </slot>\r    <div class=\"error-logo\">!</div>\r</div><div class=\"errors\">\r    <template _id=\"input_4\"></template>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"iconEl\",\n      \"ids\": [\n        \"input_1\"\n      ]\n    },\n    {\n      \"name\": \"inputEl\",\n      \"ids\": [\n        \"input_2\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"input_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__7b4688f1d13a935f88db2286094e0088method1())}`,\n      \"once\": true\n    },\n    \"input_1°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__7b4688f1d13a935f88db2286094e0088method2())}`,\n      \"once\": true\n    },\n    \"input_2°placeholder\": {\n      \"fct\": (c) => `${c.print(c.comp.__7b4688f1d13a935f88db2286094e0088method3())}`,\n      \"once\": true\n    },\n    \"input_3°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__7b4688f1d13a935f88db2286094e0088method4())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"focus\",\n      \"id\": \"input_2\",\n      \"fct\": (e, c) => c.comp.removeErrors(e)\n    },\n    {\n      \"eventName\": \"input\",\n      \"id\": \"input_2\",\n      \"fct\": (e, c) => c.comp.onValueChange(e)\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r        <template _id=\"input_5\"></template>\r    `);\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'input_4',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\rconst templ1 = new Aventus.Template(this);\rtempl1.setTemplate(`\r            <div _id=\"input_6\"></div>\r        `);\rtempl1.setActions({\n  \"content\": {\n    \"input_6°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__7b4688f1d13a935f88db2286094e0088method5(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rtempl0.addIf({\n                    anchorId: 'input_5',\n                    parts: [{once: true,\n                    condition: (c) => true,\n                    template: templ1\n                }]\n            });\r }\n    getClassName() {\n        return \"Input\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('readonly')) { this.attributeChangedCallback('readonly', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('placeholder')){ this['placeholder'] = undefined; }\rif(!this.hasAttribute('unit')){ this['unit'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\rif(!this.hasAttribute('icon_position')){ this['icon_position'] = undefined; }\rif(!this.hasAttribute('value')){ this['value'] = \"\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('readonly');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('placeholder');\rthis.__upgradeProperty('unit');\rthis.__upgradeProperty('icon');\rthis.__upgradeProperty('icon_position');\rthis.__upgradeProperty('value');\r }\n    __listBoolProps() { return [\"readonly\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    removeErrors() {\n        this.errors = [];\n    }\n    onValueChange() {\n        this.value = this.inputEl.value;\n        this.onChange.trigger([this.value]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    __7b4688f1d13a935f88db2286094e0088method1() {\n        return this.label;\n    }\n    __7b4688f1d13a935f88db2286094e0088method2() {\n        return this.icon;\n    }\n    __7b4688f1d13a935f88db2286094e0088method3() {\n        return this.placeholder;\n    }\n    __7b4688f1d13a935f88db2286094e0088method4() {\n        return this.unit;\n    }\n    __7b4688f1d13a935f88db2286094e0088method5(error) {\n        return error;\n    }\n}\nComponents.Input.Namespace=`Core.Components`;\nComponents.Input.Tag=`rk-input`;\n_.Components.Input=Components.Input;\nif(!window.customElements.get('rk-input')){window.customElements.define('rk-input', Components.Input);Aventus.WebComponentInstance.registerDefinition(Components.Input);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Input","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false},{"fullName":"Core.Components.Img","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.Input","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-input"},{"code":"Components.Password = class Password extends Components.Input {\n    static get observedAttributes() {return [\"visible\", \"icon_position\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'visible'() { return this.getBoolProp('visible') }\n    set 'visible'(val) { this.setBoolAttr('visible', val) }\rget 'icon_position'() { return this.getStringProp('icon_position') }\n    set 'icon_position'(val) { this.setStringAttr('icon_position', val) }\r    pressIcon;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"visible\", ((target) => {\n    target.updateIcon();\n}));\r }\n    static __style = `:host .input .icon{cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0)}`;\n    __getStatic() {\n        return Password;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Password.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Password\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('visible')) { this.attributeChangedCallback('visible', false, false); }\rif(!this.hasAttribute('icon_position')){ this['icon_position'] = \"right\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('visible');\rthis.__upgradeProperty('icon_position');\r }\n    __listBoolProps() { return [\"visible\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    toggleVisible() {\n        this.visible = !this.visible;\n    }\n    updateIcon() {\n        if (this.visible) {\n            this.inputEl.type = \"input\";\n            this.icon = \"mi-visibility_off\";\n        }\n        else {\n            this.inputEl.type = \"password\";\n            this.icon = \"mi-visibility\";\n        }\n    }\n    postCreation() {\n        super.postCreation();\n        if (this.iconEl) {\n            this.pressIcon = new Aventus.PressManager({\n                element: this.iconEl,\n                onPress: () => {\n                    this.toggleVisible();\n                }\n            });\n        }\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.pressIcon?.destroy();\n    }\n}\nComponents.Password.Namespace=`Core.Components`;\nComponents.Password.Tag=`rk-password`;\n_.Components.Password=Components.Password;\nif(!window.customElements.get('rk-password')){window.customElements.define('rk-password', Components.Password);Aventus.WebComponentInstance.registerDefinition(Components.Password);}\n","dependances":[{"fullName":"Core.Components.Input","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Password","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Core.Components.Password","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-password"},{"code":"Components.GenericSelect = class GenericSelect extends Components.FormElement {\n    static get observedAttributes() {return [\"label\", \"placeholder\", \"icon\", \"searchable\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'open'() { return this.getBoolAttr('open') }\n    set 'open'(val) { this.setBoolAttr('open', val) }\r    get 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\rget 'placeholder'() { return this.getStringProp('placeholder') }\n    set 'placeholder'(val) { this.setStringAttr('placeholder', val) }\rget 'icon'() { return this.getStringProp('icon') }\n    set 'icon'(val) { this.setStringAttr('icon', val) }\rget 'searchable'() { return this.getBoolProp('searchable') }\n    set 'searchable'(val) { this.setBoolAttr('searchable', val) }\r    get 'displayValue'() {\n\t\t\t\t\t\treturn this.__watch[\"displayValue\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'displayValue'(val) {\n\t\t\t\t\t\tthis.__watch[\"displayValue\"] = val;\n\t\t\t\t\t}\rget 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\r    selectedOption;\n    options = [];\n    optionsInited = false;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"displayValue\", ((target, action, path, value) => {\n    target.inputEl.value = target.displayValue;\n}));\rthis.__addWatchesActions(\"value\", ((target) => {\n    target.onInternalValueChanged();\n}));\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"searchable\", ((target) => {\n    if (target.searchable) {\n        target.inputEl.removeAttribute(\"disabled\");\n    }\n    else {\n        target.inputEl.setAttribute(\"disabled\", \"disabled\");\n    }\n}));\r }\n    static __style = `:host{--_select-height: var(--select-height, 30px);--_select-background-color: var(--select-background-color, var(--form-element-background, white));--_select-icon-height: var(--select-icon-height, calc(var(--_select-height) / 2));--_select-error-logo-size: var(--select-error-logo-size, calc(var(--_select-height) / 2));--_select-font-size: var(--select-font-size, var(--form-element-font-size, 16px));--_select-font-size-label: var(--select-font-size-label, var(--form-element-font-size-label, calc(var(--_select-font-size) * 0.95)));--_select-select-border: var(--select-select-border, var(--form-element-border, 1px solid var(--lighter-active)));--_generic-select-border-radius: var(--generic-select-border-radius, var(--form-element-border-radius, 0));--_select-caret-height: var(--select-caret-height, calc(var(--_select-height) / 2));--_select-caret-color: var(--select-caret-color, var(--form-element-color))}:host{min-width:100px;width:100%}:host label{cursor:pointer;display:none;font-size:var(--_select-font-size-label);margin-bottom:5px;margin-left:3px}:host .input{align-items:center;background-color:var(--_select-background-color);border:var(--_select-select-border);border-radius:var(--_generic-select-border-radius);cursor:pointer;display:flex;height:var(--_select-height);padding:0 10px;width:100%}:host .input .icon{display:none;height:var(--_select-icon-height);margin-right:10px}:host .input rk-img.caret{--img-fill-color: var(--_select-caret-color);--img-stroke-width: 0;aspect-ratio:1;flex-grow:0;flex-shrink:0;height:var(--_select-caret-height);transform:rotate(-90deg);transition:transform .5s var(--bezier-curve)}:host .input input{background-color:rgba(0,0,0,0);border:none;color:var(--text-color);display:block;flex-grow:1;font-size:var(--_select-font-size);height:100%;margin:0;opacity:1;outline:none;padding:5px 0;padding-right:10px;-webkit-text-fill-color:var(--text-color);width:100%}:host .input .error-logo{align-items:center;background-color:var(--red);border-radius:var(--border-radius-round);color:#fff;display:none;flex-shrink:0;font-size:calc(var(--_select-error-logo-size) - 5px);height:var(--_select-error-logo-size);justify-content:center;width:var(--_select-error-logo-size)}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:10px;margin-bottom:0px}:host .errors div{margin:5px 0}:host .hidden{display:none}:host([has_errors]) .input{border:1px solid var(--red)}:host([has_errors]) .input .error-logo{display:flex}:host([has_errors]) .errors{display:block}:host([icon]:not([icon=\"\"])) .input .icon{display:block}:host([label]:not([label=\"\"])) label{display:flex}:host([open]) .input .caret{transform:rotate(-270deg)}`;\n    constructor() { super(); if (this.constructor == GenericSelect) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return GenericSelect;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(GenericSelect.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'prepend':`<slot name=\"prepend\">\r        <rk-img class=\"icon\" _id=\"genericselect_2\"></rk-img>\r    </slot>`,'append':`<slot name=\"append\"></slot>`,'default':`<slot></slot>` }, \n        blocks: { 'default':`<label for=\"input\" _id=\"genericselect_0\"></label><div class=\"input\" _id=\"genericselect_1\">\r    <slot name=\"prepend\">\r        <rk-img class=\"icon\" _id=\"genericselect_2\"></rk-img>\r    </slot>\r    <input id=\"input\" autocomplete=\"off\" _id=\"genericselect_3\" />\r    <slot name=\"append\"></slot>\r    <div class=\"error-logo\">!</div>\r    <rk-img src=\"/img/icons/angle-left.svg\" class=\"caret\"></rk-img>\r</div><div class=\"errors\">\r    <template _id=\"genericselect_4\"></template>\r</div><div class=\"hidden\">\r    <slot></slot>\r</div><rk-options-container class=\"options-container\" _id=\"genericselect_6\"></rk-options-container>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"inputEl\",\n      \"ids\": [\n        \"genericselect_3\"\n      ]\n    },\n    {\n      \"name\": \"optionsContainer\",\n      \"ids\": [\n        \"genericselect_6\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"genericselect_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__efca6c2ed5bcc3ecd5150acdf7f96c13method1())}`,\n      \"once\": true\n    },\n    \"genericselect_2°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__efca6c2ed5bcc3ecd5150acdf7f96c13method2())}`,\n      \"once\": true\n    },\n    \"genericselect_3°placeholder\": {\n      \"fct\": (c) => `${c.print(c.comp.__efca6c2ed5bcc3ecd5150acdf7f96c13method3())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"input\",\n      \"id\": \"genericselect_3\",\n      \"fct\": (e, c) => c.comp.filter(e)\n    },\n    {\n      \"eventName\": \"onOpen\",\n      \"id\": \"genericselect_6\",\n      \"fct\": (c, ...args) => c.comp.syncCaret.apply(c.comp, ...args),\n      \"isCallback\": true\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"genericselect_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showOptions(e, pressInstance); }\n    },\n    {\n      \"id\": \"genericselect_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.showOptions(e, pressInstance); }\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(` \r        <div _id=\"genericselect_5\"></div>\r    `);\rtempl0.setActions({\n  \"content\": {\n    \"genericselect_5°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__efca6c2ed5bcc3ecd5150acdf7f96c13method4(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'genericselect_4',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\r }\n    getClassName() {\n        return \"GenericSelect\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('open')) { this.attributeChangedCallback('open', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\rif(!this.hasAttribute('placeholder')){ this['placeholder'] = undefined; }\rif(!this.hasAttribute('icon')){ this['icon'] = undefined; }\rif(!this.hasAttribute('searchable')) { this.attributeChangedCallback('searchable', false, false); }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"displayValue\"] = \"\";\rw[\"value\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('open');\rthis.__upgradeProperty('label');\rthis.__upgradeProperty('placeholder');\rthis.__upgradeProperty('icon');\rthis.__upgradeProperty('searchable');\rthis.__correctGetter('displayValue');\rthis.__correctGetter('value');\r }\n    __listBoolProps() { return [\"open\",\"searchable\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    compare(item1, item2) {\n        return item1 == item2;\n    }\n    onInternalValueChanged() {\n        if (!this.optionsInited)\n            return;\n        let found = false;\n        for (let option of this.options) {\n            if (this.compare(option.value, this.value)) {\n                found = true;\n                this.selectedOption = option;\n                this.displayValue = this.itemToText(option);\n                this.filter();\n                break;\n            }\n        }\n        if (!found) {\n            this.selectedOption = undefined;\n            this.displayValue = this.placeholder ?? '';\n            this.filter();\n        }\n    }\n    setValueFromOption(option) {\n        this.selectedOption = option;\n        this.value = option.value;\n        this.displayValue = this.itemToText(option);\n        this.hideOptions();\n        this.onChange.trigger([this.value]);\n        this.filter();\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    removeErrors() {\n        this.errors = [];\n    }\n    loadElementsFromSlot() {\n        let elements = this.getElementsInSlot();\n        for (let element of elements) {\n            if (element instanceof Components.GenericOption) {\n                this.options.push(element);\n                element.init(this);\n                this.optionsContainer.appendChild(element);\n            }\n        }\n    }\n    showOptions() {\n        if (!this.open) {\n            this.removeErrors();\n            this.optionsContainer.show();\n        }\n        if (!this.searchable) {\n            setTimeout(() => {\n                this.optionsContainer.focus({ preventScroll: true });\n            }, 100);\n        }\n    }\n    hideOptions() {\n        setTimeout(() => {\n            this.optionsContainer.blur();\n        }, 50);\n    }\n    syncCaret(open) {\n        this.open = open;\n    }\n    filter() {\n        if (this.searchable) {\n            let value = this.inputEl.value.toLowerCase();\n            for (let option of this.options) {\n                option.filter(value);\n            }\n        }\n    }\n    manageFocus() {\n        let blurTimeout = 0;\n        ;\n        let blur = () => {\n            blurTimeout = setTimeout(() => {\n                this.optionsContainer.hide();\n            }, 100);\n        };\n        this.inputEl.addEventListener(\"blur\", () => {\n            blur();\n        });\n        this.optionsContainer.addEventListener(\"blur\", () => {\n            blur();\n        });\n        this.inputEl.addEventListener(\"focus\", () => {\n            clearTimeout(blurTimeout);\n        });\n        this.optionsContainer.addEventListener(\"focus\", () => {\n            clearTimeout(blurTimeout);\n        });\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.optionsContainer.remove();\n    }\n    postCreation() {\n        this.manageFocus();\n        this.optionsContainer.init(this);\n        this.loadElementsFromSlot();\n        this.optionsInited = true;\n        this.onInternalValueChanged();\n    }\n    __efca6c2ed5bcc3ecd5150acdf7f96c13method1() {\n        return this.label;\n    }\n    __efca6c2ed5bcc3ecd5150acdf7f96c13method2() {\n        return this.icon;\n    }\n    __efca6c2ed5bcc3ecd5150acdf7f96c13method3() {\n        return this.placeholder;\n    }\n    __efca6c2ed5bcc3ecd5150acdf7f96c13method4(error) {\n        return error;\n    }\n}\nComponents.GenericSelect.Namespace=`Core.Components`;\n_.Components.GenericSelect=Components.GenericSelect;\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.GenericOption","isStrong":false},{"fullName":"Core.Components.ExtractTypeOption","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.GenericSelect","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLInputElement","isStrong":false},{"fullName":"Core.Components.OptionsContainer","isStrong":false},{"fullName":"InternalProtected","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false},{"fullName":"OptionsContainer","isStrong":false}],"fullName":"Core.Components.GenericSelect","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.GenericOption = class GenericOption extends Aventus.WebComponent {\n    value;\n    select;\n    static __style = `:host{--_option-font-size: var(--option-font-size, var(--form-element-font-size, 16px))}:host{padding:5px 10px;font-size:var(--_option-font-size);cursor:pointer;transition:background-color .2s linear}:host(:hover){background-color:var(--form-element-background-active)}`;\n    __getStatic() {\n        return GenericOption;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(GenericOption.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"GenericOption\";\n    }\n    init(select) {\n        this.select = select;\n    }\n    filter(text) {\n        if (this.innerText.toLowerCase().includes(text)) {\n            this.style.display = \"\";\n        }\n        else {\n            this.style.display = \"none\";\n        }\n    }\n    postCreation() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                this.select.setValueFromOption(this);\n            }\n        });\n    }\n}\nComponents.GenericOption.Namespace=`Core.Components`;\nComponents.GenericOption.Tag=`rk-generic-option`;\n_.Components.GenericOption=Components.GenericOption;\nif(!window.customElements.get('rk-generic-option')){window.customElements.define('rk-generic-option', Components.GenericOption);Aventus.WebComponentInstance.registerDefinition(Components.GenericOption);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.GenericSelect","isStrong":false},{"fullName":"Core.Components.GenericOption","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Core.Components.GenericOption","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-generic-option"},{"code":"Components.OptionEnum = class OptionEnum extends Components.GenericOption {\n    value = undefined;\n    static __style = ``;\n    __getStatic() {\n        return OptionEnum;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(OptionEnum.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"OptionEnum\";\n    }\n}\nComponents.OptionEnum.Namespace=`Core.Components`;\nComponents.OptionEnum.Tag=`rk-option-enum`;\n_.Components.OptionEnum=Components.OptionEnum;\nif(!window.customElements.get('rk-option-enum')){window.customElements.define('rk-option-enum', Components.OptionEnum);Aventus.WebComponentInstance.registerDefinition(Components.OptionEnum);}\n","dependances":[{"fullName":"Core.Components.GenericOption","isStrong":true},{"fullName":"Aventus.EnumValue","isStrong":false},{"fullName":"EnumValue","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Enum","isStrong":false}],"fullName":"Core.Components.OptionEnum","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-option-enum"},{"code":"Components.SelectEnum = class SelectEnum extends Components.GenericSelect {\n    get 'txt_undefined'() { return this.getStringAttr('txt_undefined') }\n    set 'txt_undefined'(val) { this.setStringAttr('txt_undefined', val) }\r    enumEl;\n    static __style = ``;\n    constructor() {\n            super();\n            this.enumEl = this.defineEnum();\n            this.createOptions();\nif (this.constructor == SelectEnum) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return SelectEnum;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(SelectEnum.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"SelectEnum\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('txt_undefined')){ this['txt_undefined'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('txt_undefined');\r }\n    itemToText(option) {\n        return option.innerHTML;\n    }\n    getEnumName(value) {\n        return this.enumEl[value];\n    }\n    createOptions() {\n        if (this.txt_undefined !== undefined) {\n            let option = new Components.OptionEnum();\n            option.value = undefined;\n            option.innerHTML = this.txt_undefined === \"\" ? \"&nbsp;\" : this.txt_undefined;\n            this.appendChild(option);\n        }\n        let _enum = this.defineEnum();\n        for (let key in _enum) {\n            if (!key.match(/^\\d*$/)) {\n                let val = _enum[key];\n                let option = new Components.OptionEnum();\n                option.value = val;\n                option.innerHTML = this.getEnumName(val);\n                this.appendChild(option);\n            }\n        }\n    }\n    postCreation() {\n        super.postCreation();\n    }\n}\nComponents.SelectEnum.Namespace=`Core.Components`;\n_.Components.SelectEnum=Components.SelectEnum;\n","dependances":[{"fullName":"Core.Components.GenericSelect","isStrong":true},{"fullName":"Core.Components.OptionEnum","isStrong":false},{"fullName":"Aventus.EnumValue","isStrong":false},{"fullName":"EnumValue","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Enum","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Extract","isStrong":false}],"fullName":"Core.Components.SelectEnum","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.Option = class Option extends Components.GenericOption {\n    static get observedAttributes() {return [\"value\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'value'() { return this.getStringProp('value') }\n    set 'value'(val) { this.setStringAttr('value', val) }\r    static __style = ``;\n    __getStatic() {\n        return Option;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Option.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Option\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('value')){ this['value'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('value');\r }\n}\nComponents.Option.Namespace=`Core.Components`;\nComponents.Option.Tag=`rk-option`;\n_.Components.Option=Components.Option;\nif(!window.customElements.get('rk-option')){window.customElements.define('rk-option', Components.Option);Aventus.WebComponentInstance.registerDefinition(Components.Option);}\n","dependances":[{"fullName":"Core.Components.GenericOption","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false}],"fullName":"Core.Components.Option","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-option"},{"code":"Components.Select = class Select extends Components.GenericSelect {\n    static get observedAttributes() {return [\"value\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'value'() { return this.getStringProp('value') }\n    set 'value'(val) { this.setStringAttr('value', val) }\r    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"value\", ((target) => {\n    target.onInternalValueChanged();\n}));\r }\n    static __style = ``;\n    __getStatic() {\n        return Select;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Select.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"Select\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('value')){ this['value'] = \"\"; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('value');\r }\n    itemToText(option) {\n        // if(option.value !== undefined) {\n        //     return option.value\n        // }\n        return option.innerHTML;\n    }\n}\nComponents.Select.Namespace=`Core.Components`;\nComponents.Select.Tag=`rk-select`;\n_.Components.Select=Components.Select;\nif(!window.customElements.get('rk-select')){window.customElements.define('rk-select', Components.Select);Aventus.WebComponentInstance.registerDefinition(Components.Select);}\n","dependances":[{"fullName":"Core.Components.GenericSelect","isStrong":true},{"fullName":"Core.Components.Option","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Select","isStrong":false}],"fullName":"Core.Components.Select","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-select"},{"code":"Components.ItemBoxSelect = class ItemBoxSelect extends Components.FormElement {\n    static get observedAttributes() {return [\"space\", \"value\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'space'() { return this.getNumberProp('space') }\n    set 'space'(val) { this.setNumberAttr('space', val) }\rget 'value'() { return this.getStringProp('value') }\n    set 'value'(val) { this.setStringAttr('value', val) }\r    options = [];\n    optionSelected;\n    form;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"space\", ((target) => {\n    target.style.setProperty(\"--item-box-margin\", target.space + 'px');\n}));\rthis.__addPropertyActions(\"value\", ((target) => {\n    target.selectInternalOption();\n}));\r }\n    static __style = `:host{--_item-box-box-width: var(--item-box-box-width, auto);--_item-box-box-height: var(--item-box-box-height, 100%);--_item-box-box-padding: var(--item-box-box-padding, 0 10px);--_item-box-border-radius: var(--item-box-border-radius, 4px);--_item-box-border-color: var(--item-box-border-color, var(--secondary-color, #afafaf));--_item-box-option-background-color-selected: var(--item-box-option-background-color-selected, var(--form-element-background-active, #afafaf));--_item-box-option-color-selected: var(--item-box-option-color-selected, var(--form-element-color-active, #fff))}:host{position:relative}:host .container-option{align-items:center;box-sizing:border-box;display:flex;flex-direction:row;height:100%;justify-content:center;z-index:2}:host ::slotted(*){border:1px solid var(--_item-box-border-color);border-radius:var(--border-radius-sm);max-height:var(--_item-box-box-height);max-width:var(--_item-box-box-width);padding:var(--_item-box-box-padding);width:var(--_item-box-box-width)}:host ::slotted(*:first-child){margin-left:0}:host ::slotted(*:last-child){margin-right:0}:host([space=\"0\"]){border:1px solid var(--_item-box-border-color);border-radius:var(--_item-box-border-radius)}:host([space=\"0\"]) ::slotted(*){border:none;border-radius:0px;border-right:1px solid var(--_item-box-border-color)}:host([space=\"0\"]) ::slotted(*:first-child){border-bottom-left-radius:var(--_item-box-border-radius);border-top-left-radius:var(--_item-box-border-radius)}:host([space=\"0\"]) ::slotted(*:last-child){border-bottom-right-radius:var(--_item-box-border-radius);border-right:none;border-top-right-radius:var(--_item-box-border-radius)}`;\n    __getStatic() {\n        return ItemBoxSelect;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ItemBoxSelect.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"container-option\">\r    <slot></slot>\r</div>` }\n    });\n}\n    getClassName() {\n        return \"ItemBoxSelect\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('space')){ this['space'] = 0; }\rif(!this.hasAttribute('value')){ this['value'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('space');\rthis.__upgradeProperty('value');\r }\n    selectInternalOption() {\n        if (!this.isConnected)\n            return;\n        let oneFound = false;\n        for (let option of this.options) {\n            if (option.value == this.value) {\n                if (this.optionSelected)\n                    this.optionSelected.selected = false;\n                option.selected = true;\n                this.optionSelected = option;\n                oneFound = true;\n            }\n            else {\n                option.selected = false;\n            }\n        }\n        if (!oneFound) {\n            this.optionSelected = undefined;\n        }\n    }\n    selectOption(option) {\n        this.value = option.value;\n        this.onChange.trigger([this.value]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    register(option) {\n        if (!this.options.includes(option)) {\n            this.options.push(option);\n            if (option.value == this.value) {\n                if (this.optionSelected) {\n                    this.optionSelected.selected = false;\n                }\n                option.selected = true;\n                this.optionSelected = option;\n            }\n        }\n    }\n    unregister(option) {\n        const index = this.options.indexOf(option);\n        if (index != -1) {\n            this.options.splice(index, 1);\n        }\n    }\n    removeErrors() {\n        this.errors = [];\n    }\n    postCreation() {\n        this.selectInternalOption();\n    }\n}\nComponents.ItemBoxSelect.Namespace=`Core.Components`;\nComponents.ItemBoxSelect.Tag=`rk-item-box-select`;\n_.Components.ItemBoxSelect=Components.ItemBoxSelect;\nif(!window.customElements.get('rk-item-box-select')){window.customElements.define('rk-item-box-select', Components.ItemBoxSelect);Aventus.WebComponentInstance.registerDefinition(Components.ItemBoxSelect);}\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.BoxContainer","isStrong":false},{"fullName":"Core.Components.ItemBoxSelect","isStrong":false},{"fullName":"Core.Components.ItemBoxOption","isStrong":false},{"fullName":"Core.Components.Form","isStrong":false},{"fullName":"Internal","isStrong":false}],"fullName":"Core.Components.ItemBoxSelect","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-item-box-select"},{"code":"Components.ItemBoxOption = class ItemBoxOption extends Components.ItemBox {\n    get 'selected'() { return this.getBoolAttr('selected') }\n    set 'selected'(val) { this.setBoolAttr('selected', val) }\rget 'value'() { return this.getStringAttr('value') }\n    set 'value'(val) { this.setStringAttr('value', val) }\r    select;\n    static __style = `:host{cursor:pointer;transition:background-color var(--bezier-curve) .4s,color var(--bezier-curve) .4s}:host::slotted(*){pointer-events:none}:host>*{pointer-events:none}:host([selected]){background-color:var(--_item-box-option-background-color-selected);color:var(--_item-box-option-color-selected)}`;\n    __getStatic() {\n        return ItemBoxOption;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ItemBoxOption.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"ItemBoxOption\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('selected')) { this.attributeChangedCallback('selected', false, false); }\rif(!this.hasAttribute('value')){ this['value'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('selected');\rthis.__upgradeProperty('value');\r }\n    __listBoolProps() { return [\"selected\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    register() {\n        this.select = this.findParentByType(Components.ItemBoxSelect);\n        if (this.select) {\n            this.select.register(this);\n        }\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (this.select) {\n                    this.select.selectOption(this);\n                }\n            }\n        });\n    }\n    postCreation() {\n        this.register();\n    }\n    destructor() {\n        super.destructor();\n        if (this.select) {\n            this.select.unregister(this);\n        }\n    }\n}\nComponents.ItemBoxOption.Namespace=`Core.Components`;\nComponents.ItemBoxOption.Tag=`rk-item-box-option`;\n_.Components.ItemBoxOption=Components.ItemBoxOption;\nif(!window.customElements.get('rk-item-box-option')){window.customElements.define('rk-item-box-option', Components.ItemBoxOption);Aventus.WebComponentInstance.registerDefinition(Components.ItemBoxOption);}\n","dependances":[{"fullName":"Core.Components.ItemBox","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.ItemBoxSelect","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Core.Components.ItemBoxOption","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-item-box-option"},{"code":"Components.SelectData = class SelectData extends Components.GenericSelect {\n    get 'loading'() { return this.getBoolAttr('loading') }\n    set 'loading'(val) { this.setBoolAttr('loading', val) }\rget 'txt_undefined'() { return this.getStringAttr('txt_undefined') }\n    set 'txt_undefined'(val) { this.setStringAttr('txt_undefined', val) }\r    data = [];\n    isInit = false;\n    static __style = ``;\n    constructor() {\n            super();\nif (this.constructor == SelectData) { throw \"can't instanciate an abstract class\"; } \rthis.subscribe=this.subscribe.bind(this)\rthis.unsubscribe=this.unsubscribe.bind(this)\rthis.onCreated=this.onCreated.bind(this)\rthis.onDeleted=this.onDeleted.bind(this)\rthis.onUpdated=this.onUpdated.bind(this) }\n    __getStatic() {\n        return SelectData;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(SelectData.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"SelectData\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('loading')) { this.attributeChangedCallback('loading', false, false); }\rif(!this.hasAttribute('txt_undefined')){ this['txt_undefined'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('loading');\rthis.__upgradeProperty('txt_undefined');\r }\n    __listBoolProps() { return [\"loading\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    compare(item1, item2) {\n        if (item1 === undefined && item2 === undefined) {\n            return true;\n        }\n        if (item1 === undefined || item2 === undefined) {\n            return false;\n        }\n        if (typeof item1 == 'number') {\n            return item1 == item2;\n        }\n        const key1 = this.defineRam().getId(item1);\n        const key2 = this.defineRam().getId(item2);\n        return key1 == key2;\n    }\n    itemToText(option) {\n        return option.getText();\n    }\n    defineOption() {\n        return Components.OptionData;\n    }\n    getOption() {\n        const cst = this.defineOption();\n        let option = new cst();\n        option.init(this);\n        return option;\n    }\n    async createOptions() {\n        this.loading = true;\n        this.data = await this.loadData();\n        if (this.txt_undefined !== undefined) {\n            let option = this.getOption();\n            await option.setItem(undefined);\n            if (this.compare(option.value, this.value)) {\n                this.selectedOption = option;\n                this.displayValue = this.itemToText(option);\n                this.filter();\n            }\n            option.innerHTML = this.txt_undefined === \"\" ? \"&nbsp;\" : this.txt_undefined;\n            this.appendChild(option);\n        }\n        for (let item of this.data) {\n            let option = this.getOption();\n            await option.setItem(item);\n            if (this.compare(option.value, this.value)) {\n                this.selectedOption = option;\n                this.displayValue = this.itemToText(option);\n                this.filter();\n            }\n            this.appendChild(option);\n        }\n        this.loading = false;\n        this.init();\n    }\n    async loadData() {\n        const result = await Lib.Process.execute(this, this.defineRam().getListWithError()) ?? [];\n        return result;\n    }\n    subscribe() {\n        this.defineRam().onCreated(this.onCreated);\n        this.defineRam().onUpdated(this.onUpdated);\n        this.defineRam().onDeleted(this.onDeleted);\n    }\n    unsubscribe() {\n        this.defineRam().offCreated(this.onCreated);\n        this.defineRam().offUpdated(this.onUpdated);\n        this.defineRam().offDeleted(this.onDeleted);\n    }\n    async onCreated(item) {\n        this.data.push(item);\n        let option = this.getOption();\n        await option.setItem(item);\n        this.appendChild(option);\n        this.loadElementsFromSlot();\n    }\n    async onDeleted(item) {\n        for (let i = 0; i < this.options.length; i++) {\n            let option = this.options[i];\n            let value = await this.optionValue(item);\n            if (this.compare(option.value, value)) {\n                this.options.splice(i, 1);\n                option.remove();\n                if (this.compare(this.value, value)) {\n                    this.value = undefined;\n                }\n            }\n        }\n    }\n    async onUpdated(item) {\n        for (let i = 0; i < this.options.length; i++) {\n            let option = this.options[i];\n            if (this.compare(option.value, await this.optionValue(item))) {\n                option.innerHTML = await this.optionText(item);\n            }\n        }\n    }\n    async init() {\n        if (!this.isConnected)\n            return;\n        if (this.isInit)\n            return;\n        this.isInit = true;\n        await this.createOptions();\n        super.postCreation();\n        this.subscribe();\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.unsubscribe();\n    }\n    postConnect() {\n    }\n    postCreation() {\n        this.init();\n    }\n}\nComponents.SelectData.Namespace=`Core.Components`;\n_.Components.SelectData=Components.SelectData;\n","dependances":[{"fullName":"Core.Components.GenericSelect","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.IData","isStrong":false},{"fullName":"Core.Components.OptionData","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Aventus.Ram","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Lib.Process","isStrong":false},{"fullName":"InternalProtected","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"BindThis","isStrong":false}],"fullName":"Core.Components.SelectData","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.OptionData = class OptionData extends Components.GenericOption {\n    static __style = ``;\n    __getStatic() {\n        return OptionData;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(OptionData.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"OptionData\";\n    }\n    getText() {\n        return this.innerHTML;\n    }\n    async setItem(item) {\n        let select = this.select;\n        if (!item) {\n            this.value = undefined;\n            this.innerHTML = '';\n        }\n        else {\n            this.value = await select.optionValue(item);\n            this.innerHTML = await select.optionText(item);\n        }\n    }\n}\nComponents.OptionData.Namespace=`Core.Components`;\nComponents.OptionData.Tag=`rk-option-data`;\n_.Components.OptionData=Components.OptionData;\nif(!window.customElements.get('rk-option-data')){window.customElements.define('rk-option-data', Components.OptionData);Aventus.WebComponentInstance.registerDefinition(Components.OptionData);}\n","dependances":[{"fullName":"Core.Components.GenericOption","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.IData","isStrong":false},{"fullName":"Core.Components.SelectData","isStrong":false}],"fullName":"Core.Components.OptionData","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-option-data"},{"code":"Components.TwoColumnsSelect = class TwoColumnsSelect extends Components.FormElement {\n    static get observedAttributes() {return [\"title_unselect\", \"title_select\", \"placeholder_unselect\", \"placeholder_select\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'searchable_unselect'() { return this.getBoolAttr('searchable_unselect') }\n    set 'searchable_unselect'(val) { this.setBoolAttr('searchable_unselect', val) }\rget 'searchable_select'() { return this.getBoolAttr('searchable_select') }\n    set 'searchable_select'(val) { this.setBoolAttr('searchable_select', val) }\r    get 'title_unselect'() { return this.getStringProp('title_unselect') }\n    set 'title_unselect'(val) { this.setStringAttr('title_unselect', val) }\rget 'title_select'() { return this.getStringProp('title_select') }\n    set 'title_select'(val) { this.setStringAttr('title_select', val) }\rget 'placeholder_unselect'() { return this.getStringProp('placeholder_unselect') }\n    set 'placeholder_unselect'(val) { this.setStringAttr('placeholder_unselect', val) }\rget 'placeholder_select'() { return this.getStringProp('placeholder_select') }\n    set 'placeholder_select'(val) { this.setStringAttr('placeholder_select', val) }\r    get 'value'() {\n\t\t\t\t\t\treturn this.__watch[\"value\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'value'(val) {\n\t\t\t\t\t\tthis.__watch[\"value\"] = val;\n\t\t\t\t\t}\r    selectedOption;\n    optionsSelected = [];\n    optionsUnselected = [];\n    canGenerateValues = false;\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"value\", ((target) => {\n    target.onInternalValueChanged();\n}));\r    super.__registerWatchesActions();\n}\n    static __style = `:host{display:flex;flex-direction:column;width:100%}:host .wrapper{align-items:center;display:flex;height:100%;width:100%}:host .wrapper .col{background-color:#fff;border-radius:var(--border-radius-sm);box-shadow:var(--elevation-1);display:flex;flex-direction:column;flex-grow:1;height:100%;padding:15px;width:100%}:host .wrapper .col .title{font-size:calc(var(--font-size)*.85);margin-bottom:10px;margin-left:3px}:host .wrapper .col .title:empty{display:none}:host .wrapper .col .search{display:none;margin-bottom:15px}:host .wrapper .action{display:flex;flex-direction:column;flex-grow:0;flex-shrink:0;gap:5px;padding:10px}:host .wrapper .action .btn{align-items:center;background-color:#fff;border-radius:var(--border-radius-sm);box-shadow:var(--elevation-3);cursor:pointer;display:flex;justify-content:center;transition:box-shadow .3s var(--bezier-curve),background-color .3s var(--bezier-curve)}:host .wrapper .action .btn mi-icon{font-size:var(--font-size-md);padding:2px}:host .wrapper .action .btn[disable=true]{color:var(--text-color-disable);cursor:not-allowed}:host .wrapper .action .btn:hover{background-color:var(--lighter);box-shadow:var(--elevation-1)}:host .errors{color:var(--red);display:none;font-size:var(--font-size-sm);line-height:1.1;margin:10px;margin-bottom:0px}:host .errors div{margin:5px 0}:host .hidden{display:none}:host([has_errors]) .errors{display:block}:host([column]) .wrapper{flex-direction:column}:host([column]) .wrapper .action{flex-direction:row}:host([column]) .wrapper .action .btn mi-icon{transform:rotate(90deg)}:host([searchable_unselect]) .wrapper .col .search-unselect{display:inline-block}:host([searchable_select]) .wrapper .col .search-select{display:inline-block}`;\n    constructor() { super(); if (this.constructor == TwoColumnsSelect) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return TwoColumnsSelect;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TwoColumnsSelect.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"wrapper\">\r    <div class=\"col\">\r        <div class=\"title\" _id=\"twocolumnsselect_0\"></div>\r        <div class=\"search search-unselect\">\r            <rk-input _id=\"twocolumnsselect_1\"></rk-input>\r        </div>\r        <rk-scrollable class=\"options\" _id=\"twocolumnsselect_2\">\r        </rk-scrollable>\r    </div>\r    <div class=\"action\">\r        <div class=\"btn\" _id=\"twocolumnsselect_3\">\r            <mi-icon icon=\"keyboard_double_arrow_right\"></mi-icon>\r        </div>\r        <div class=\"btn\" _id=\"twocolumnsselect_4\">\r            <mi-icon icon=\"keyboard_arrow_right\"></mi-icon>\r        </div>\r        <div class=\"btn\" _id=\"twocolumnsselect_5\">\r            <mi-icon icon=\"keyboard_arrow_left\"></mi-icon>\r        </div>\r        <div class=\"btn\" _id=\"twocolumnsselect_6\">\r            <mi-icon icon=\"keyboard_double_arrow_left\"></mi-icon>\r        </div>\r    </div>\r    <div class=\"col\">\r        <div class=\"title\" _id=\"twocolumnsselect_7\"></div>\r        <div class=\"search search-select\">\r            <rk-input _id=\"twocolumnsselect_8\"></rk-input>\r        </div>\r        <rk-scrollable class=\"options\" _id=\"twocolumnsselect_9\">\r        </rk-scrollable>\r        <div class=\"errors\">\r            <template _id=\"twocolumnsselect_10\"></template>\r        </div>\r    </div>\r</div><div class=\"hidden\">\r    <slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"unselectSearchInput\",\n      \"ids\": [\n        \"twocolumnsselect_1\"\n      ]\n    },\n    {\n      \"name\": \"unselectOptionsCont\",\n      \"ids\": [\n        \"twocolumnsselect_2\"\n      ]\n    },\n    {\n      \"name\": \"selectSearchInput\",\n      \"ids\": [\n        \"twocolumnsselect_8\"\n      ]\n    },\n    {\n      \"name\": \"selectOptionsCont\",\n      \"ids\": [\n        \"twocolumnsselect_9\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"twocolumnsselect_0°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__02ff6a099b7c5d693b75b5727ffdf5e8method1())}`,\n      \"once\": true\n    },\n    \"twocolumnsselect_1°placeholder\": {\n      \"fct\": (c) => `${c.print(c.comp.__02ff6a099b7c5d693b75b5727ffdf5e8method2())}`,\n      \"once\": true\n    },\n    \"twocolumnsselect_7°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__02ff6a099b7c5d693b75b5727ffdf5e8method3())}`,\n      \"once\": true\n    },\n    \"twocolumnsselect_8°placeholder\": {\n      \"fct\": (c) => `${c.print(c.comp.__02ff6a099b7c5d693b75b5727ffdf5e8method4())}`,\n      \"once\": true\n    }\n  },\n  \"events\": [\n    {\n      \"eventName\": \"onChange\",\n      \"id\": \"twocolumnsselect_1\",\n      \"fct\": (c, ...args) => c.comp.searchUnselect.apply(c.comp, ...args),\n      \"isCallback\": true\n    },\n    {\n      \"eventName\": \"onChange\",\n      \"id\": \"twocolumnsselect_8\",\n      \"fct\": (c, ...args) => c.comp.searchSelect.apply(c.comp, ...args),\n      \"isCallback\": true\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"twocolumnsselect_3\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectAll(e, pressInstance); }\n    },\n    {\n      \"id\": \"twocolumnsselect_4\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.selectHighlighted(e, pressInstance); }\n    },\n    {\n      \"id\": \"twocolumnsselect_5\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.unselectHighlighted(e, pressInstance); }\n    },\n    {\n      \"id\": \"twocolumnsselect_6\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.unselectAll(e, pressInstance); }\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(` \r                <div _id=\"twocolumnsselect_11\"></div>\r            `);\rtempl0.setActions({\n  \"content\": {\n    \"twocolumnsselect_11°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__02ff6a099b7c5d693b75b5727ffdf5e8method5(c.data.error))}`,\n      \"once\": true\n    }\n  }\n});\rthis.__getStatic().__template.addLoop({\n                    anchorId: 'twocolumnsselect_10',\n                    template: templ0,\n                simple:{data: \"this.errors\",item:\"error\"}\r});\r }\n    getClassName() {\n        return \"TwoColumnsSelect\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('searchable_unselect')) { this.attributeChangedCallback('searchable_unselect', false, false); }\rif(!this.hasAttribute('searchable_select')) { this.attributeChangedCallback('searchable_select', false, false); }\rif(!this.hasAttribute('title_unselect')){ this['title_unselect'] = undefined; }\rif(!this.hasAttribute('title_select')){ this['title_select'] = undefined; }\rif(!this.hasAttribute('placeholder_unselect')){ this['placeholder_unselect'] = \"Recherche\"; }\rif(!this.hasAttribute('placeholder_select')){ this['placeholder_select'] = \"Recherche\"; }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"value\"] = undefined;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('searchable_unselect');\rthis.__upgradeProperty('searchable_select');\rthis.__upgradeProperty('title_unselect');\rthis.__upgradeProperty('title_select');\rthis.__upgradeProperty('placeholder_unselect');\rthis.__upgradeProperty('placeholder_select');\rthis.__correctGetter('value');\r }\n    __listBoolProps() { return [\"searchable_unselect\",\"searchable_select\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    include(array, value) {\n        return array.includes(value);\n    }\n    onInternalValueChanged() {\n        if (!this.isConnected || !this.canGenerateValues)\n            return;\n        if (!this.value) {\n            for (let option of this.optionsSelected) {\n                this.unselectOptionsCont.appendChild(option);\n            }\n            this.reloadOptions();\n            return;\n        }\n        for (let option of this.optionsSelected) {\n            if (!option.value || !this.include(this.value, option.value)) {\n                this.unselectOptionsCont.appendChild(option);\n            }\n        }\n        for (let option of this.optionsUnselected) {\n            if (option.value && this.include(this.value, option.value)) {\n                this.selectOptionsCont.appendChild(option);\n            }\n        }\n        this.reloadOptions();\n        return;\n    }\n    changeValue() {\n        this.onChange.trigger([this.value]);\n        if (this.formPart) {\n            this.formPart.value.set(this.value);\n        }\n    }\n    loadElementsFromSlot() {\n        let elements = this.getElementsInSlot();\n        for (let element of elements) {\n            if (element instanceof Components.TwoColumnsOption) {\n                element.init(this);\n                this.unselectOptionsCont.appendChild(element);\n            }\n        }\n        this.reloadOptions();\n    }\n    reloadOptions() {\n        this.optionsSelected = Array.from(this.selectOptionsCont.children);\n        this.optionsUnselected = Array.from(this.unselectOptionsCont.children);\n        this.searchSelect();\n        this.searchUnselect();\n        if (this.canGenerateValues) {\n            let values = [];\n            for (let optionSelected of this.optionsSelected) {\n                if (optionSelected.value)\n                    values.push(optionSelected.value);\n            }\n            this.value = values;\n        }\n    }\n    removeErrors() {\n        this.errors = [];\n    }\n    selectAll() {\n        for (let optionUnselected of this.optionsUnselected) {\n            this.selectOptionsCont.appendChild(optionUnselected);\n        }\n        this.reloadOptions();\n        this.changeValue();\n    }\n    selectHighlighted() {\n        debugger;\n        for (let optionUnselected of this.optionsUnselected) {\n            if (optionUnselected.highlight) {\n                this.selectOptionsCont.appendChild(optionUnselected);\n                optionUnselected.highlight = false;\n            }\n        }\n        this.reloadOptions();\n        this.changeValue();\n    }\n    unselectHighlighted() {\n        for (let optionSelected of this.optionsSelected) {\n            if (optionSelected.highlight) {\n                this.unselectOptionsCont.appendChild(optionSelected);\n                optionSelected.highlight = false;\n            }\n        }\n        this.reloadOptions();\n        this.changeValue();\n    }\n    unselectAll() {\n        for (let optionSelected of this.optionsSelected) {\n            this.unselectOptionsCont.appendChild(optionSelected);\n        }\n        this.reloadOptions();\n        this.changeValue();\n    }\n    searchUnselect() {\n        for (let option of this.optionsUnselected) {\n            option.filter(this.unselectSearchInput.value);\n        }\n    }\n    searchSelect() {\n        for (let option of this.optionsSelected) {\n            option.filter(this.selectSearchInput.value);\n        }\n    }\n    postDestruction() {\n        super.postDestruction();\n    }\n    postCreation() {\n        this.loadElementsFromSlot();\n        this.canGenerateValues = true;\n        this.onInternalValueChanged();\n    }\n    __02ff6a099b7c5d693b75b5727ffdf5e8method1() {\n        return this.title_unselect;\n    }\n    __02ff6a099b7c5d693b75b5727ffdf5e8method2() {\n        return this.placeholder_unselect;\n    }\n    __02ff6a099b7c5d693b75b5727ffdf5e8method3() {\n        return this.title_select;\n    }\n    __02ff6a099b7c5d693b75b5727ffdf5e8method4() {\n        return this.placeholder_select;\n    }\n    __02ff6a099b7c5d693b75b5727ffdf5e8method5(error) {\n        return error;\n    }\n}\nComponents.TwoColumnsSelect.Namespace=`Core.Components`;\n_.Components.TwoColumnsSelect=Components.TwoColumnsSelect;\n","dependances":[{"fullName":"Core.Components.FormElement","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.TwoColumnsOption","isStrong":false},{"fullName":"Core.Components.ExtractTypeTwoColumnsOptions","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"Core.Components.Input","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Core.Components.TwoColumnsSelect","isStrong":false},{"fullName":"NoCompile","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Input","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.TwoColumnsSelect","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.TwoColumnsOption = class TwoColumnsOption extends Aventus.WebComponent {\n    get 'highlight'() { return this.getBoolAttr('highlight') }\n    set 'highlight'(val) { this.setBoolAttr('highlight', val) }\r    value;\n    select;\n    static __style = `:host{border-radius:var(--border-radius-sm);cursor:pointer;margin:5px 0;padding:5px;transition:background-color .2s var(--bezier-curve)}:host([highlight]){background-color:var(--lighter)}:host(:first-child){margin-top:0}:host(:last-child){margin-bottom:0}@media screen and (min-width: 1225px){:host(:hover){background-color:var(--lighter)}}`;\n    __getStatic() {\n        return TwoColumnsOption;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TwoColumnsOption.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"TwoColumnsOption\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('highlight')) { this.attributeChangedCallback('highlight', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('highlight');\r }\n    __listBoolProps() { return [\"highlight\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    init(select) {\n        this.select = select;\n    }\n    filter(text) {\n        if (this.innerText.toLowerCase().includes(text)) {\n            this.style.display = \"\";\n        }\n        else {\n            this.style.display = \"none\";\n        }\n    }\n    postCreation() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                this.highlight = !this.highlight;\n            }\n        });\n    }\n}\nComponents.TwoColumnsOption.Namespace=`Core.Components`;\nComponents.TwoColumnsOption.Tag=`rk-two-columns-option`;\n_.Components.TwoColumnsOption=Components.TwoColumnsOption;\nif(!window.customElements.get('rk-two-columns-option')){window.customElements.define('rk-two-columns-option', Components.TwoColumnsOption);Aventus.WebComponentInstance.registerDefinition(Components.TwoColumnsOption);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.Components.TwoColumnsSelect","isStrong":false},{"fullName":"Core.Components.TwoColumnsOption","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Core.Components.TwoColumnsOption","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-two-columns-option"},{"code":"Components.TwoColumnsOptionData = class TwoColumnsOptionData extends Components.TwoColumnsOption {\n    static __style = `:host{display:block}`;\n    __getStatic() {\n        return TwoColumnsOptionData;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TwoColumnsOptionData.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"TwoColumnsOptionData\";\n    }\n}\nComponents.TwoColumnsOptionData.Namespace=`Core.Components`;\nComponents.TwoColumnsOptionData.Tag=`rk-two-columns-option-data`;\n_.Components.TwoColumnsOptionData=Components.TwoColumnsOptionData;\nif(!window.customElements.get('rk-two-columns-option-data')){window.customElements.define('rk-two-columns-option-data', Components.TwoColumnsOptionData);Aventus.WebComponentInstance.registerDefinition(Components.TwoColumnsOptionData);}\n","dependances":[{"fullName":"Core.Components.TwoColumnsOption","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.IData","isStrong":false}],"fullName":"Core.Components.TwoColumnsOptionData","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-two-columns-option-data"},{"code":"Components.TwoColumnsSelectData = class TwoColumnsSelectData extends Components.TwoColumnsSelect {\n    get 'loading'() { return this.getBoolAttr('loading') }\n    set 'loading'(val) { this.setBoolAttr('loading', val) }\r    data = [];\n    isInit = false;\n    static __style = ``;\n    constructor() {\n            super();\n            this.createOptions();\nif (this.constructor == TwoColumnsSelectData) { throw \"can't instanciate an abstract class\"; } \rthis.subscribe=this.subscribe.bind(this)\rthis.unsubscribe=this.unsubscribe.bind(this)\rthis.onCreated=this.onCreated.bind(this)\rthis.onDeleted=this.onDeleted.bind(this)\rthis.onUpdated=this.onUpdated.bind(this) }\n    __getStatic() {\n        return TwoColumnsSelectData;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TwoColumnsSelectData.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"TwoColumnsSelectData\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('loading')) { this.attributeChangedCallback('loading', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('loading');\r }\n    __listBoolProps() { return [\"loading\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    itemToText(option) {\n        return option.innerHTML;\n    }\n    include(array, value) {\n        if (typeof value == 'number') {\n            return array.includes(value);\n        }\n        let arrayEl = array;\n        let valueEl = value;\n        let ram = this.defineRam();\n        return arrayEl.findIndex(p => ram.getId(p) == ram.getId(valueEl)) != -1;\n    }\n    async createOptions() {\n        this.loading = true;\n        this.data = await this.loadData();\n        for (let item of this.data) {\n            let option = new Components.TwoColumnsOptionData();\n            option.value = await this.optionValue(item);\n            option.innerHTML = await this.optionText(item);\n            this.appendChild(option);\n        }\n        this.loading = false;\n        this.init();\n    }\n    async loadData() {\n        const result = await Lib.Process.execute(this, this.defineRam().getListWithError()) ?? [];\n        return result;\n    }\n    subscribe() {\n        this.defineRam().onCreated(this.onCreated);\n        this.defineRam().onUpdated(this.onUpdated);\n        this.defineRam().onDeleted(this.onDeleted);\n    }\n    unsubscribe() {\n        this.defineRam().offCreated(this.onCreated);\n        this.defineRam().offUpdated(this.onUpdated);\n        this.defineRam().offDeleted(this.onDeleted);\n    }\n    async onCreated(item) {\n        this.data.push(item);\n        let option = new Components.TwoColumnsOptionData();\n        option.value = await this.optionValue(item);\n        option.innerHTML = await this.optionText(item);\n        this.appendChild(option);\n        this.loadElementsFromSlot();\n    }\n    onDeleted(item) {\n        for (let i = 0; i < this.optionsSelected.length; i++) {\n            let option = this.optionsSelected[i];\n            if (option.value == this.optionValue(item)) {\n                this.optionsSelected.splice(i, 1);\n                option.remove();\n            }\n        }\n        for (let i = 0; i < this.optionsUnselected.length; i++) {\n            let option = this.optionsUnselected[i];\n            if (option.value == this.optionValue(item)) {\n                this.optionsUnselected.splice(i, 1);\n                option.remove();\n            }\n        }\n    }\n    async onUpdated(item) {\n        for (let i = 0; i < this.optionsSelected.length; i++) {\n            let option = this.optionsSelected[i];\n            if (option.value == this.optionValue(item)) {\n                option.innerHTML = await this.optionText(item);\n            }\n        }\n        for (let i = 0; i < this.optionsUnselected.length; i++) {\n            let option = this.optionsUnselected[i];\n            if (option.value == this.optionValue(item)) {\n                option.innerHTML = await this.optionText(item);\n            }\n        }\n    }\n    init() {\n        if (!this.isConnected)\n            return;\n        if (this.isInit)\n            return;\n        this.isInit = true;\n        super.postCreation();\n        this.subscribe();\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.unsubscribe();\n    }\n    postCreation() {\n        this.init();\n    }\n}\nComponents.TwoColumnsSelectData.Namespace=`Core.Components`;\n_.Components.TwoColumnsSelectData=Components.TwoColumnsSelectData;\n","dependances":[{"fullName":"Core.Components.TwoColumnsSelect","isStrong":true},{"fullName":"Core.Components.TwoColumnsOptionData","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.IData","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"Aventus.Ram","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Lib.Process","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"BindThis","isStrong":false}],"fullName":"Core.Components.TwoColumnsSelectData","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.Menu = class Menu extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"position\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'edge_gap'() { return this.getNumberAttr('edge_gap') }\n    set 'edge_gap'(val) { this.setNumberAttr('edge_gap', val) }\rget 'position_gap'() { return this.getNumberAttr('position_gap') }\n    set 'position_gap'(val) { this.setNumberAttr('position_gap', val) }\r    get 'position'() { return this.getStringProp('position') }\n    set 'position'(val) { this.setStringAttr('position', val) }\r    state = Components.MenuState.Close;\n    stateChange = new Aventus.Callback();\n    static __style = `:host{--scrollbar-container-display: flex;background-color:#fff;border-radius:var(--border-radius-sm);box-shadow:var(--elevation-3);cursor:pointer;display:flex;flex-direction:column;outline:none;overflow:hidden;position:absolute;-webkit-tap-highlight-color:rgba(0,0,0,0);z-index:502}:host .container{display:flex;flex-direction:column;padding:5px 0}`;\n    __getStatic() {\n        return Menu;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Menu.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<rk-scrollable floating_scroll>\r    <rk-collapse _id=\"menu_0\">\r        <div class=\"container\" _id=\"menu_1\">\r            <slot></slot>\r        </div>\r    </rk-collapse>\r</rk-scrollable>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"collapseEl\",\n      \"ids\": [\n        \"menu_0\"\n      ]\n    },\n    {\n      \"name\": \"containerEl\",\n      \"ids\": [\n        \"menu_1\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"Menu\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('edge_gap')){ this['edge_gap'] = 20; }\rif(!this.hasAttribute('position_gap')){ this['position_gap'] = 5; }\rif(!this.hasAttribute('position')){ this['position'] = 'left bottom'; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('edge_gap');\rthis.__upgradeProperty('position_gap');\rthis.__upgradeProperty('position');\r }\n    show(rect) {\n        this.calculatePosition(rect);\n        document.body.appendChild(this);\n        this.state = Components.MenuState.Opening;\n        this.stateChange.trigger([this.state]);\n        setTimeout(() => {\n            this.collapseEl.open = true;\n        }, 100);\n    }\n    calculatePosition(rect) {\n        this.style.left = -10000 + 'px';\n        this.style.top = '0';\n        this.style.bottom = '';\n        this.style.right = '';\n        this.collapseEl.no_animation = true;\n        this.collapseEl.open = true;\n        document.body.appendChild(this);\n        let height = this.offsetHeight;\n        let width = this.offsetWidth;\n        this.collapseEl.open = false;\n        this.collapseEl.no_animation = false;\n        document.body.removeChild(this);\n        const getDefaultResult = () => {\n            return {\n                top: null,\n                left: null,\n                bottom: null,\n                right: null,\n                maxHeight: document.body.offsetHeight - 2 * this.edge_gap,\n                maxWidth: document.body.offsetWidth - 2 * this.edge_gap,\n                found: false\n            };\n        };\n        let info = {\n            maxHeight: document.body.offsetHeight,\n            maxWidth: document.body.offsetWidth,\n            menuHeight: height,\n            rect: rect,\n            menuWidth: width,\n        };\n        let result = getDefaultResult();\n        if (this.position == 'bottom right') {\n            this\n                .getPositionBottomRight(info, result)\n                .getPositionBottomLeft(info, result)\n                .getPositionTopRight(info, result)\n                .getPositionTopLeft(info, result);\n        }\n        else if (this.position == 'bottom left') {\n            this\n                .getPositionBottomLeft(info, result)\n                .getPositionBottomRight(info, result)\n                .getPositionTopLeft(info, result)\n                .getPositionTopRight(info, result);\n        }\n        else if (this.position == 'top left') {\n            this\n                .getPositionTopLeft(info, result)\n                .getPositionTopRight(info, result)\n                .getPositionBottomLeft(info, result)\n                .getPositionBottomRight(info, result);\n        }\n        else if (this.position == 'top right') {\n            this\n                .getPositionTopRight(info, result)\n                .getPositionTopLeft(info, result)\n                .getPositionBottomRight(info, result)\n                .getPositionBottomLeft(info, result);\n        }\n        else if (this.position == 'left top') {\n            this\n                .getPositionLeftTop(info, result)\n                .getPositionLeftBottom(info, result)\n                .getPositionRightTop(info, result)\n                .getPositionRightBottom(info, result);\n        }\n        else if (this.position == 'left bottom') {\n            this\n                .getPositionLeftBottom(info, result)\n                .getPositionLeftTop(info, result)\n                .getPositionRightBottom(info, result)\n                .getPositionRightTop(info, result);\n        }\n        else if (this.position == 'right top') {\n            this\n                .getPositionRightTop(info, result)\n                .getPositionRightBottom(info, result)\n                .getPositionLeftTop(info, result)\n                .getPositionLeftBottom(info, result);\n        }\n        else if (this.position == 'right bottom') {\n            this\n                .getPositionRightBottom(info, result)\n                .getPositionRightTop(info, result)\n                .getPositionLeftBottom(info, result)\n                .getPositionLeftTop(info, result);\n        }\n        // if(height > element.offsetHeight) {\n        //     if(pageY > element.offsetHeight / 2) {\n        //         let bottomNb = element.offsetHeight - pageY;\n        //         bottom = bottomNb + 'px';\n        //         maxHeight = element.offsetHeight - bottomNb;\n        //     }\n        //     else {\n        //         top = pageY + 'px';\n        //         maxHeight = element.offsetHeight - pageY;\n        //     }\n        // }\n        // else {\n        //     if(pageY + height > element.offsetHeight) {\n        //         let bottomNb = element.offsetHeight - pageY;\n        //         bottom = bottomNb + 'px';\n        //         maxHeight = element.offsetHeight - bottomNb;\n        //     }\n        //     else {\n        //         top = pageY + 'px';\n        //         // maxHeight = element.offsetHeight - pageY;\n        //     }\n        // }\n        // if(pageX + width > element.offsetWidth) {\n        //     right = element.offsetWidth - pageX - rect.width + 'px';\n        // }\n        // else {\n        //     left = pageX + 'px';\n        // }\n        if (!result.found) {\n            alert(\"Error\");\n            return;\n        }\n        this.style.top = result.top !== null ? result.top + 'px' : '';\n        this.style.left = result.left !== null ? result.left + 'px' : '';\n        this.style.bottom = result.bottom !== null ? result.bottom + 'px' : '';\n        this.style.right = result.right !== null ? result.right + 'px' : '';\n        this.style.maxHeight = result.maxHeight + 'px';\n        this.style.maxWidth = result.maxWidth + 'px';\n    }\n    resetResult(result) {\n        result.top = null;\n        result.left = null;\n        result.bottom = null;\n        result.right = null;\n        result.maxHeight = document.body.offsetHeight - 2 * this.edge_gap;\n        result.maxWidth = document.body.offsetWidth - 2 * this.edge_gap;\n    }\n    checkValue(name, value, info, result) {\n        const { maxHeight, maxWidth, menuHeight, menuWidth } = info;\n        if (name == \"top\" || name == \"bottom\") {\n            if (menuHeight >= maxHeight - 2 * this.edge_gap) {\n                if (value <= maxHeight / 2) {\n                    // on peut ouvrir vers le bas seulement si la position est plus haute que la moitié\n                    result[name] = value;\n                    result.maxHeight = (maxHeight - 2 * this.edge_gap) - value;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                if (value + menuHeight <= maxHeight - this.edge_gap) {\n                    result[name] = value;\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n        else {\n            if (menuWidth >= maxWidth - 2 * this.edge_gap) {\n                if (value <= maxWidth / 2) {\n                    // on peut ouvrir vers le gauche seulement si la position est plus loin que la moitié\n                    result[name] = value;\n                    result.maxWidth = (maxWidth - 2 * this.edge_gap) - value;\n                }\n                else {\n                    return false;\n                }\n            }\n            else {\n                if (value + menuWidth < maxWidth - this.edge_gap) {\n                    result[name] = value;\n                }\n                else {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    getPositionBottomLeft(info, result) {\n        if (result.found)\n            return this;\n        const { maxWidth, rect } = info;\n        this.resetResult(result);\n        const right = maxWidth - (rect.x + rect.width);\n        const top = rect.y + rect.height + this.position_gap;\n        if (!this.checkValue('right', right, info, result))\n            return this;\n        if (!this.checkValue('top', top, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    getPositionBottomRight(info, result) {\n        if (result.found)\n            return this;\n        const { rect } = info;\n        this.resetResult(result);\n        const left = rect.x;\n        const top = rect.y + rect.height + this.position_gap;\n        if (!this.checkValue('left', left, info, result))\n            return this;\n        if (!this.checkValue('top', top, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    getPositionTopLeft(info, result) {\n        if (result.found)\n            return this;\n        const { maxHeight, maxWidth, rect } = info;\n        this.resetResult(result);\n        const right = maxWidth - (rect.x + rect.width);\n        const bottom = maxHeight - rect.y + this.position_gap;\n        if (!this.checkValue('right', right, info, result))\n            return this;\n        if (!this.checkValue('bottom', bottom, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    getPositionTopRight(info, result) {\n        if (result.found)\n            return this;\n        const { maxHeight, rect } = info;\n        this.resetResult(result);\n        const left = rect.x;\n        const bottom = maxHeight - rect.y + this.position_gap;\n        if (!this.checkValue('left', left, info, result))\n            return this;\n        if (!this.checkValue('bottom', bottom, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    getPositionLeftTop(info, result) {\n        if (result.found)\n            return this;\n        const { maxHeight, maxWidth, rect } = info;\n        this.resetResult(result);\n        const right = maxWidth - rect.x + this.position_gap;\n        const bottom = maxHeight - (rect.y + rect.height);\n        if (!this.checkValue('right', right, info, result))\n            return this;\n        if (!this.checkValue('bottom', bottom, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    getPositionLeftBottom(info, result) {\n        if (result.found)\n            return this;\n        const { maxWidth, rect } = info;\n        this.resetResult(result);\n        const right = maxWidth - rect.x + this.position_gap;\n        const top = rect.y;\n        if (!this.checkValue('right', right, info, result))\n            return this;\n        if (!this.checkValue('top', top, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    getPositionRightTop(info, result) {\n        if (result.found)\n            return this;\n        const { maxHeight, rect } = info;\n        this.resetResult(result);\n        const left = rect.x + rect.width + this.position_gap;\n        const bottom = maxHeight - (rect.y + rect.height);\n        if (!this.checkValue('left', left, info, result))\n            return this;\n        if (!this.checkValue('bottom', bottom, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    getPositionRightBottom(info, result) {\n        if (result.found)\n            return this;\n        const { maxWidth, rect } = info;\n        this.resetResult(result);\n        const left = rect.x + rect.width + this.position_gap;\n        const top = rect.y;\n        if (!this.checkValue('left', left, info, result))\n            return this;\n        if (!this.checkValue('top', top, info, result))\n            return this;\n        result.found = true;\n        return this;\n    }\n    addFocus() {\n        this.setAttribute(\"tabindex\", \"-1\");\n        this.collapseEl.addEventListener(\"transitionend\", (event) => {\n            if (this.collapseEl.open) {\n                this.focus({ preventScroll: true });\n                this.state = Components.MenuState.Open;\n            }\n            else {\n                this.state = Components.MenuState.Close;\n                this.remove(false);\n            }\n            this.stateChange.trigger([this.state]);\n        });\n        this.addEventListener(\"blur\", (e) => {\n            e.stopPropagation();\n            this.collapseEl.open = false;\n            this.state = Components.MenuState.Closing;\n            this.stateChange.trigger([this.state]);\n        });\n    }\n    postCreation() {\n        this.addFocus();\n    }\n}\nComponents.Menu.Namespace=`Core.Components`;\nComponents.Menu.Tag=`rk-menu`;\n_.Components.Menu=Components.Menu;\nif(!window.customElements.get('rk-menu')){window.customElements.define('rk-menu', Components.Menu);Aventus.WebComponentInstance.registerDefinition(Components.Menu);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Collapse","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.MenuState","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"DOMRect","isStrong":false},{"fullName":"Core.Components.MenuPositionResult","isStrong":false},{"fullName":"Core.Components.MenuPositionInfo","isStrong":false},{"fullName":"Core.Components.Menu","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Collapse","isStrong":false}],"fullName":"Core.Components.Menu","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-menu"},{"code":"Components.ButtonIconMenu = class ButtonIconMenu extends Components.ButtonIcon {\n    static get observedAttributes() {return [\"open\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'open'() { return this.getBoolProp('open') }\n    set 'open'(val) { this.setBoolAttr('open', val) }\r    menu;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"open\", ((target) => {\n    target.syncMenu();\n}));\r }\n    static __style = ``;\n    __getStatic() {\n        return ButtonIconMenu;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(ButtonIconMenu.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"hider\"></div><div class=\"content\">\r    <rk-img class=\"icon\" _id=\"buttoniconmenu_0\"></rk-img>\r</div><slot></slot>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"buttoniconmenu_0°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__503a2de938f470c1fb45b45f48d4bb7dmethod0())}`,\n      \"once\": true\n    }\n  }\n});\r }\n    getClassName() {\n        return \"ButtonIconMenu\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('open')) { this.attributeChangedCallback('open', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('open');\r }\n    __listBoolProps() { return [\"open\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    stateMenuToOpen(state) {\n        if (state == Components.MenuState.Open || state == Components.MenuState.Opening) {\n            return true;\n        }\n        return false;\n    }\n    syncMenu() {\n        if (!this.menu)\n            return;\n        if (this.stateMenuToOpen(this.menu.state) != this.open) {\n            if (this.open) {\n                this.menu.show(this.getBoundingClientRect());\n            }\n            else {\n                this.menu.blur();\n            }\n        }\n    }\n    postCreation() {\n        super.postCreation();\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (this.menu && this.menu.state == Components.MenuState.Close) {\n                    this.menu.show(this.getBoundingClientRect());\n                }\n            }\n        });\n        let elements = this.getElementsInSlot();\n        const menuItems = [];\n        for (let element of elements) {\n            if (element instanceof Components.Menu) {\n                this.menu = element;\n                element.parentNode?.removeChild(element);\n            }\n            else if (element instanceof Components.MenuItem) {\n                menuItems.push(element);\n                element.parentNode?.removeChild(element);\n            }\n            else if (element instanceof Components.MenuSeparator) {\n                menuItems.push(element);\n                element.parentNode?.removeChild(element);\n            }\n            else {\n                element.remove();\n            }\n        }\n        if (!this.menu) {\n            let menu = new Components.Menu();\n            this.menu = menu;\n            for (let item of menuItems) {\n                menu.appendChild(item);\n            }\n        }\n        this.menu.stateChange.add((value) => {\n            const boolVal = this.stateMenuToOpen(value);\n            if (this.open != boolVal) {\n                this.open = boolVal;\n            }\n        });\n    }\n    __503a2de938f470c1fb45b45f48d4bb7dmethod0() {\n        return this.icon;\n    }\n}\nComponents.ButtonIconMenu.Namespace=`Core.Components`;\nComponents.ButtonIconMenu.Tag=`rk-button-icon-menu`;\n_.Components.ButtonIconMenu=Components.ButtonIconMenu;\nif(!window.customElements.get('rk-button-icon-menu')){window.customElements.define('rk-button-icon-menu', Components.ButtonIconMenu);Aventus.WebComponentInstance.registerDefinition(Components.ButtonIconMenu);}\n","dependances":[{"fullName":"Core.Components.ButtonIcon","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"OverrideView","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.ButtonIconMenu","isStrong":false},{"fullName":"Core.Components.Menu","isStrong":false},{"fullName":"Core.Components.MenuState","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Core.Components.MenuItem","isStrong":false},{"fullName":"Core.Components.MenuSeparator","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Img","isStrong":false}],"fullName":"Core.Components.ButtonIconMenu","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-button-icon-menu"},{"code":"Components.Table = class Table extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"auto_hide_scroll\", \"grid\", \"items_per_page\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'col_resize'() { return this.getBoolAttr('col_resize') }\n    set 'col_resize'(val) { this.setBoolAttr('col_resize', val) }\rget 'grid_breakpoint'() { return this.getNumberAttr('grid_breakpoint') }\n    set 'grid_breakpoint'(val) { this.setNumberAttr('grid_breakpoint', val) }\rget 'first_page'() { return this.getBoolAttr('first_page') }\n    set 'first_page'(val) { this.setBoolAttr('first_page', val) }\rget 'last_page'() { return this.getBoolAttr('last_page') }\n    set 'last_page'(val) { this.setBoolAttr('last_page', val) }\rget 'loading'() { return this.getBoolAttr('loading') }\n    set 'loading'(val) { this.setBoolAttr('loading', val) }\rget 'no_data'() { return this.getBoolAttr('no_data') }\n    set 'no_data'(val) { this.setBoolAttr('no_data', val) }\r    get 'auto_hide_scroll'() { return this.getBoolProp('auto_hide_scroll') }\n    set 'auto_hide_scroll'(val) { this.setBoolAttr('auto_hide_scroll', val) }\rget 'grid'() { return this.getBoolProp('grid') }\n    set 'grid'(val) { this.setBoolAttr('grid', val) }\rget 'items_per_page'() { return this.getNumberProp('items_per_page') }\n    set 'items_per_page'(val) { this.setNumberAttr('items_per_page', val) }\r    get 'tableTitle'() {\n\t\t\t\t\t\treturn this.__watch[\"tableTitle\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'tableTitle'(val) {\n\t\t\t\t\t\tthis.__watch[\"tableTitle\"] = val;\n\t\t\t\t\t}\rget 'showSearch'() {\n\t\t\t\t\t\treturn this.__watch[\"showSearch\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'showSearch'(val) {\n\t\t\t\t\t\tthis.__watch[\"showSearch\"] = val;\n\t\t\t\t\t}\rget 'showHeader'() {\n\t\t\t\t\t\treturn this.__watch[\"showHeader\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'showHeader'(val) {\n\t\t\t\t\t\tthis.__watch[\"showHeader\"] = val;\n\t\t\t\t\t}\rget 'showFooter'() {\n\t\t\t\t\t\treturn this.__watch[\"showFooter\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'showFooter'(val) {\n\t\t\t\t\t\tthis.__watch[\"showFooter\"] = val;\n\t\t\t\t\t}\rget 'displayedData'() {\n\t\t\t\t\t\treturn this.__watch[\"displayedData\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'displayedData'(val) {\n\t\t\t\t\t\tthis.__watch[\"displayedData\"] = val;\n\t\t\t\t\t}\rget 'data'() {\n\t\t\t\t\t\treturn this.__watch[\"data\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'data'(val) {\n\t\t\t\t\t\tthis.__watch[\"data\"] = val;\n\t\t\t\t\t}\rget 'currentPage'() {\n\t\t\t\t\t\treturn this.__watch[\"currentPage\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'currentPage'(val) {\n\t\t\t\t\t\tthis.__watch[\"currentPage\"] = val;\n\t\t\t\t\t}\rget 'nbItems'() {\n\t\t\t\t\t\treturn this.__watch[\"nbItems\"];\n\t\t\t\t\t}\n\t\t\t\t\tset 'nbItems'(val) {\n\t\t\t\t\t\tthis.__watch[\"nbItems\"] = val;\n\t\t\t\t\t}\r    options;\n    filters = {};\n    dataFilters = [];\n    sortColumns = {};\n    globalSearchTxt;\n    rows = new Map();\n    hadGlobalSearch = false;\n    isFirstRender = true;\n    header;\n    rowsSelected = [];\n    rowsFiltered = [];\n    rowsDisplayed = [];\n    resizeObserver;\n    mustForceRender = false;\n    errorsTxtItemPerPage = {\n        notNumber: '',\n        lowerThanMin: '',\n        biggerThanMax: '',\n    };\n    showLoadingStart;\n    showLoadingTimeout = 0;\n    timeoutBeforeLoading = 200;\n    minTimeoutLoading = 1000;\n    select = new Aventus.Callback();\n    __registerWatchesActions() {\n    this.__addWatchesActions(\"tableTitle\");\rthis.__addWatchesActions(\"showSearch\");\rthis.__addWatchesActions(\"showHeader\");\rthis.__addWatchesActions(\"showFooter\");\rthis.__addWatchesActions(\"displayedData\", ((target, action, path, value) => {\n    target.render();\n}));\rthis.__addWatchesActions(\"data\", ((target, action, path, value) => {\n    target.filterData();\n}));\rthis.__addWatchesActions(\"currentPage\", ((target) => {\n    target.correctPage();\n}));\rthis.__addWatchesActions(\"nbItems\");\r    super.__registerWatchesActions();\n}\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"grid\", ((target) => {\n    target.updateGrid();\n}));\rthis.__addPropertyActions(\"items_per_page\", ((target) => {\n    target.renderPage();\n    if (target.items_per_page > 0 && target.options.showFooter === undefined) {\n        target.showFooter = true;\n    }\n}));\r }\n    static __style = `:host{--_table-background-color: var(--table-background-color, var(--secondary-color));--_table-elevation: var(--table-elevation, var(--elevation-2));--_table-row-header-height: var(--table-row-header-height, 50px);--_table-header-backgroud-color: var(--table-header-backgroud-color, var(--primary-color));--_table-header-color: var(--table-header-color, var(--text-color-reverse));--_table-footer-backgroud-color: var(--table-footer-backgroud-color, var(--primary-color));--_table-footer-color: var(--table-footer-color, var(--text-color-reverse));--_table-row-header-backgroud-color: var(--table-row-header-backgroud-color, var(--primary-color));--_table-row-header-color: var(--table-row-header-color, var(--text-color-reverse));--_table-border-color: var(--table-border-color, var(--secondary-color));--_table-row-header-vertical-border: var(--table-row-header-vertical-border, 1px solid var(--_table-border-color));--_table-row-header-horizontal-border: var(--table-row-header-horizontal-border, 1px solid var(--_table-border-color));--_table-cell-vertical-border: var(--table-cell-vertical-border, 1px solid var(--_table-border-color));--_table-cell-horizontal-border: var(--table-cell-vertical-border, 1px solid var(--_table-border-color));--_table-cell-padding: var(--table-cell-padding, 10px);--local-table-cell-resize-display: none}:host{background-color:var(--_table-background-color);border-radius:var(--border-radius-sm);box-shadow:var(--_table-elevation);display:flex;flex-direction:column;height:100%;overflow:hidden;width:100%}:host .style-wrapper{display:flex;flex-direction:column;height:100%;min-height:100%;width:100%}:host .style-wrapper .header{align-items:center;background-color:var(--_table-header-backgroud-color);color:var(--_table-header-color);display:flex;justify-content:space-between;min-height:0;padding:10px}:host .style-wrapper .header .title{align-items:center;display:flex;font-size:var(--font-size-md);height:30px;margin-left:5px}:host .style-wrapper .row-header{--scrollbar-color: transparent;--scrollbar-active-color: transparent;--scroller-width: 0;min-height:0;width:100%}:host .style-wrapper .body{display:flex;flex:1;flex-direction:column;min-height:0;position:relative;width:100%}:host .style-wrapper .body .loading{display:none}:host .style-wrapper .body .no-data{display:none;margin:15px}:host .style-wrapper .footer{align-items:center;background-color:var(--_table-footer-backgroud-color);color:var(--_table-footer-color);display:flex;gap:30px;justify-content:end;min-height:0;padding:10px}:host .style-wrapper .footer .items-per-page{align-items:center;display:flex}:host .style-wrapper .footer .items-per-page rk-input-number{margin-left:10px;min-width:auto;width:50px}:host .style-wrapper .footer .location{align-items:center;display:flex}:host .style-wrapper .footer .pagination{align-items:center;display:flex}:host .style-wrapper .footer .pagination .btn-previous,:host .style-wrapper .footer .pagination .btn-next{transition:background-color .2s var(--bezier-curve)}:host .style-wrapper rk-scrollable::part(content-wrapper){min-width:100%}:host([first_page]) .style-wrapper .footer .pagination .btn-previous{opacity:.5;pointer-events:none}:host([last_page]) .style-wrapper .footer .pagination .btn-next{opacity:.5;pointer-events:none}:host([col_resize]){--local-table-cell-resize-display: block}:host([grid]) .style-wrapper .row-header{display:none}:host([grid]) .style-wrapper .body{flex-direction:row}:host([grid]) .style-wrapper .body rk-scrollable::part(content-wrapper){display:flex;flex-wrap:wrap;gap:15px;justify-content:center;padding:15px}:host([loading]) .style-wrapper .body{min-height:200px}:host([loading]) .style-wrapper .body .loading{display:flex}:host([no_data]:not([loading])) .style-wrapper .body .no-data{display:flex}:host([no_data]:not([loading])) .style-wrapper .body .rows{display:none}@media screen and (min-width: 1225px){:host .style-wrapper .footer .pagination .touch:hover{background-color:var(--lighter);border-radius:var(--border-radius-sm)}}`;\n    constructor() {\n            super();\n            this.options = this.configure(this.defaultOptions());\n            this.normalizeSchema();\n            this.auto_hide_scroll = this.autoHideScroll();\n            this.style.display = 'none';\nif (this.constructor == Table) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return Table;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(Table.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'before':`<slot name=\"before\"></slot>`,'header':`<slot name=\"header\">\r        <template _id=\"table_1\"></template>\r    </slot>`,'no-data':`<slot name=\"no-data\">\r            <div class=\"no-data\">Aucune donnée trouvée</div>\r        </slot>`,'loader':`<slot name=\"loader\">\r            <rk-loading class=\"loading\"></rk-loading>\r        </slot>`,'footer':`<slot name=\"footer\">\r        <template _id=\"table_7\"></template>\r    </slot>`,'after':`<slot name=\"after\"></slot>`,'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot name=\"before\"></slot><div class=\"style-wrapper\" _id=\"table_0\">\r    <slot name=\"header\">\r        <template _id=\"table_1\"></template>\r    </slot>\r    <div class=\"row-header\">\r        <rk-scrollable y_scroll=\"false\" x_scroll floating_scroll _id=\"table_5\">\r        </rk-scrollable>\r    </div>\r    <div class=\"body\">\r        <rk-scrollable class=\"rows\" x_scroll floating_scroll _id=\"table_6\">\r        </rk-scrollable>\r        <slot name=\"no-data\">\r            <div class=\"no-data\">Aucune donnée trouvée</div>\r        </slot>\r        <slot name=\"loader\">\r            <rk-loading class=\"loading\"></rk-loading>\r        </slot>\r    </div>\r    <slot name=\"footer\">\r        <template _id=\"table_7\"></template>\r    </slot>\r</div><slot name=\"after\"></slot><slot></slot>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"styleWrapper\",\n      \"ids\": [\n        \"table_0\"\n      ]\n    },\n    {\n      \"name\": \"headerContainer\",\n      \"ids\": [\n        \"table_5\"\n      ]\n    },\n    {\n      \"name\": \"bodyContainer\",\n      \"ids\": [\n        \"table_6\"\n      ]\n    }\n  ],\n  \"content\": {\n    \"table_6°auto_hide\": {\n      \"fct\": (c) => `${c.print(c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method4())}`,\n      \"once\": true\n    }\n  }\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r            <div class=\"header\">\r                <div class=\"title\" _id=\"table_2\"></div>\r                <template _id=\"table_3\"></template>\r            </div>\r        `);\rtempl0.setActions({\n  \"content\": {\n    \"table_2°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method3())}`,\n      \"once\": true\n    }\n  }\n});\rconst templ1 = new Aventus.Template(this);\rtempl1.setTemplate(`\r                    <div class=\"search\">\r                        <rk-input placeholder=\"Recherche\" _id=\"table_4\"></rk-input>\r                    </div>\r                `);\rtempl1.setActions({\n  \"events\": [\n    {\n      \"eventName\": \"onChange\",\n      \"id\": \"table_4\",\n      \"fct\": (c, ...args) => c.comp.globalFilter.apply(c.comp, ...args),\n      \"isCallback\": true\n    }\n  ]\n});\rtempl0.addIf({\n                    anchorId: 'table_3',\n                    parts: [{once: true,\n                    condition: (c) => c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method1(),\n                    template: templ1\n                }]\n            });\rthis.__getStatic().__template.addIf({\n                    anchorId: 'table_1',\n                    parts: [{once: true,\n                    condition: (c) => c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method0(),\n                    template: templ0\n                }]\n            });\rconst templ2 = new Aventus.Template(this);\rtempl2.setTemplate(`\r            <div class=\"footer\">\r                <div class=\"items-per-page\">\r                    <span>Éléments par page : </span>\r                    <rk-input-number min=\"1\" _id=\"table_8\"></rk-input-number>\r                </div>\r                <div class=\"location\" _id=\"table_9\"></div>\r                <div class=\"pagination\">\r                    <mi-icon icon=\"keyboard_double_arrow_left\" class=\"btn-previous touch\" _id=\"table_10\"></mi-icon>\r                    <mi-icon icon=\"keyboard_arrow_left\" class=\"btn-previous touch\" _id=\"table_11\"></mi-icon>\r                    <mi-icon icon=\"keyboard_arrow_right\" class=\"btn-next touch\" _id=\"table_12\"></mi-icon>\r                    <mi-icon icon=\"keyboard_double_arrow_right\" class=\"btn-next touch\" _id=\"table_13\"></mi-icon>\r                </div>\r            </div>\r        `);\rtempl2.setActions({\n  \"content\": {\n    \"table_9°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method8())}`,\n      \"once\": true\n    }\n  },\n  \"injection\": [\n    {\n      \"id\": \"table_8\",\n      \"injectionName\": \"errorsTxt\",\n      \"inject\": (c) => c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method7(),\n      \"once\": true\n    }\n  ],\n  \"bindings\": [\n    {\n      \"id\": \"table_8\",\n      \"injectionName\": \"value\",\n      \"eventNames\": [\n        \"onChange\"\n      ],\n      \"inject\": (c) => c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method5(),\n      \"extract\": (c, v) => c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method6(v),\n      \"once\": true,\n      \"isCallback\": true\n    }\n  ],\n  \"pressEvents\": [\n    {\n      \"id\": \"table_10\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.firstPage(e, pressInstance); }\n    },\n    {\n      \"id\": \"table_11\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.previousPage(e, pressInstance); }\n    },\n    {\n      \"id\": \"table_12\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.nextPage(e, pressInstance); }\n    },\n    {\n      \"id\": \"table_13\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.lastPage(e, pressInstance); }\n    }\n  ]\n});\rthis.__getStatic().__template.addIf({\n                    anchorId: 'table_7',\n                    parts: [{once: true,\n                    condition: (c) => c.comp.__b5b6f5e196622f4341e5ecfc2e397e35method2(),\n                    template: templ2\n                }]\n            });\r }\n    getClassName() {\n        return \"Table\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('col_resize')) { this.attributeChangedCallback('col_resize', false, false); }\rif(!this.hasAttribute('grid_breakpoint')){ this['grid_breakpoint'] = undefined; }\rif(!this.hasAttribute('first_page')) { this.attributeChangedCallback('first_page', false, false); }\rif(!this.hasAttribute('last_page')) { this.attributeChangedCallback('last_page', false, false); }\rif(!this.hasAttribute('loading')) { this.attributeChangedCallback('loading', false, false); }\rif(!this.hasAttribute('no_data')) { this.attributeChangedCallback('no_data', false, false); }\rif(!this.hasAttribute('auto_hide_scroll')) { this.attributeChangedCallback('auto_hide_scroll', false, false); }\rif(!this.hasAttribute('grid')) { this.attributeChangedCallback('grid', false, false); }\rif(!this.hasAttribute('items_per_page')){ this['items_per_page'] = 0; }\r }\n    __defaultValuesWatch(w) { super.__defaultValuesWatch(w); w[\"tableTitle\"] = \"\";\rw[\"showSearch\"] = false;\rw[\"showHeader\"] = false;\rw[\"showFooter\"] = false;\rw[\"displayedData\"] = undefined;\rw[\"data\"] = undefined;\rw[\"currentPage\"] = 0;\rw[\"nbItems\"] = 0;\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('col_resize');\rthis.__upgradeProperty('grid_breakpoint');\rthis.__upgradeProperty('first_page');\rthis.__upgradeProperty('last_page');\rthis.__upgradeProperty('loading');\rthis.__upgradeProperty('no_data');\rthis.__upgradeProperty('auto_hide_scroll');\rthis.__upgradeProperty('grid');\rthis.__upgradeProperty('items_per_page');\rthis.__correctGetter('tableTitle');\rthis.__correctGetter('showSearch');\rthis.__correctGetter('showHeader');\rthis.__correctGetter('showFooter');\rthis.__correctGetter('displayedData');\rthis.__correctGetter('data');\rthis.__correctGetter('currentPage');\rthis.__correctGetter('nbItems');\r }\n    __listBoolProps() { return [\"col_resize\",\"first_page\",\"last_page\",\"loading\",\"no_data\",\"auto_hide_scroll\",\"grid\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    getSelectedData() {\n        const result = [];\n        for (let row of this.rowsSelected) {\n            result.push(row.data);\n        }\n        return result;\n    }\n    showLoading() {\n        this.showLoadingTimeout = setTimeout(() => {\n            this.showLoadingStart = new Date();\n            this.loading = true;\n        }, this.timeoutBeforeLoading);\n    }\n    async hideLoading() {\n        const minDelay = this.minTimeoutLoading;\n        clearTimeout(this.showLoadingTimeout);\n        if (this.showLoadingStart) {\n            let now = new Date();\n            let diffMs = now.getTime() - this.showLoadingStart.getTime();\n            if (diffMs < minDelay) {\n                await Aventus.sleep(minDelay - diffMs);\n            }\n            this.showLoadingStart = undefined;\n        }\n        this.loading = false;\n    }\n    autoHideScroll() {\n        return true;\n    }\n    selectRow(row) {\n        if (!row)\n            return;\n        if (!this.rowsSelected.includes(row)) {\n            this.rowsSelected.push(row);\n            this.onSelected();\n            this.select.trigger([this.getSelectedData()]);\n        }\n    }\n    unselectRow(row) {\n        if (!row)\n            return;\n        let index = this.rowsSelected.indexOf(row);\n        if (index != -1) {\n            this.rowsSelected.splice(index, 1);\n            this.onSelected();\n            this.select.trigger([this.getSelectedData()]);\n        }\n    }\n    unselectAllRows() {\n        this.rowsSelected = [];\n        this.onSelected();\n        this.select.trigger([[]]);\n    }\n    onSelected() {\n    }\n    syncScroll() {\n        this.headerContainer?.onScrollChange.add((x, y) => {\n            if (this.bodyContainer?.x != x) {\n                this.bodyContainer?.scrollX(x);\n            }\n        });\n        this.bodyContainer?.onScrollChange.add((x, y) => {\n            if (this.headerContainer?.x != x) {\n                this.headerContainer?.scrollX(x);\n            }\n        });\n    }\n    normalizeSchemaCell(cellConfig) {\n        if (!cellConfig.cell) {\n            if (cellConfig.type == \"boolean\")\n                cellConfig.cell = Components.TableCellBoolean;\n            else if (cellConfig.type == \"date\")\n                cellConfig.cell = Components.TableCellDate;\n            else if (cellConfig.type == \"number\")\n                cellConfig.cell = Components.TableCellNumber;\n            else if (cellConfig.type == \"picture\")\n                cellConfig.cell = Components.TableCellPicture;\n            else if (cellConfig.type == \"string\")\n                cellConfig.cell = Components.TableCellString;\n            else if (cellConfig.type == \"custom\")\n                cellConfig.cell = Components.TableCellString;\n        }\n    }\n    normalizeSchema() {\n        for (let cellConfig of this.options.schema) {\n            this.normalizeSchemaCell(cellConfig);\n        }\n        if (this.options.title || this.options.globalSearch) {\n            this.showHeader = true;\n            this.tableTitle = this.options.title;\n            this.showSearch = this.options.globalSearch;\n        }\n        if (this.options.showFooter) {\n            this.showFooter = true;\n        }\n        if (this.options.items_per_page && this.options.items_per_page > 0) {\n            this.items_per_page = this.options.items_per_page;\n        }\n        if (this.options.selectable) {\n            this.options.schema.splice(0, 0, {\n                displayName: \"\",\n                name: \"\",\n                type: \"custom\",\n                cell: Components.TableCellCheckbox,\n                width: 50,\n                sortable: false\n            });\n        }\n        if (this.options.timeoutBeforeLoading !== undefined) {\n            this.timeoutBeforeLoading = this.options.timeoutBeforeLoading;\n        }\n        if (this.options.minTimeoutLoading !== undefined) {\n            this.minTimeoutLoading = this.options.minTimeoutLoading;\n        }\n    }\n    defaultOptions() {\n        return {\n            schema: [],\n            selectable: false,\n            header: Components.TableRowHeader,\n            row: Components.TableRow,\n            sortable: true,\n            title: '',\n            globalSearch: false,\n        };\n    }\n    setColWidth(width, i) {\n        this.styleWrapper?.style.setProperty(\"--_table-cell-width-\" + (i + 1), width + \"px\");\n        this.styleWrapper?.style.setProperty(\"--_table-cell-weight-\" + (i + 1), \"0\");\n    }\n    setColMinWidth(width, i) {\n        this.styleWrapper?.style.setProperty(\"--_table-cell-min-width-\" + (i + 1), width + \"px\");\n    }\n    sortData(data) {\n        return data;\n    }\n    async setSortColumn(column, order) {\n        if (!this.isFirstRender) {\n            let cell = this.header.cells[column];\n            if (!(cell instanceof Components.TableCellHeader))\n                return;\n            cell.sort_direction = order;\n        }\n        if (order === undefined) {\n            delete this.sortColumns[column];\n        }\n        else {\n            this.sortColumns[column] = order;\n        }\n        if (!this.isFirstRender) {\n            await this.render(order !== undefined);\n        }\n    }\n    async filterData(forceRender = false) {\n        let result = [];\n        let oldData = Array.from(this.rows.keys());\n        if (this.data) {\n            let data = Aventus.Watcher.extract(this.data);\n            for (let item of data) {\n                let isOk = true;\n                // remove old data to avoid delete it\n                let index = oldData.indexOf(item);\n                if (index != -1) {\n                    oldData.splice(index, 1);\n                }\n                // apply filters\n                for (let name in this.filters) {\n                    let value = item[name];\n                    let filters = this.filters[name];\n                    for (let filter of filters) {\n                        if (!filter(value)) {\n                            isOk = false;\n                            break;\n                        }\n                    }\n                }\n                for (let dataFilter of this.dataFilters) {\n                    if (!dataFilter(item)) {\n                        isOk = false;\n                        break;\n                    }\n                }\n                if (isOk) {\n                    result.push(item);\n                }\n            }\n        }\n        // delete old rows\n        for (let oldItem of oldData) {\n            this.rows.get(oldItem)?.remove();\n            this.rows.delete(oldItem);\n        }\n        result = this.sortData(result);\n        if (forceRender) {\n            this.mustForceRender = true;\n        }\n        this.displayedData = result;\n        if (this.mustForceRender) {\n            await this.render();\n        }\n    }\n    firstRender() {\n        if (this.isFirstRender) {\n            this.isFirstRender = false;\n            for (let i = 0; i < this.options.schema.length; i++) {\n                const width = this.options.schema[i].width;\n                if (width) {\n                    this.setColWidth(width, i);\n                }\n                const minWidth = this.options.schema[i].minWidth;\n                if (minWidth) {\n                    this.setColMinWidth(minWidth, i);\n                }\n            }\n            let nbCol = this.options.schema.length ? this.options.schema.length : 1;\n            this.styleWrapper?.style.setProperty(\"--_table-nb-column\", nbCol + \"\");\n            this.header = new this.options.header();\n            this.header.table = this;\n            this.header.init(this.options);\n            this.headerContainer.innerHTML = \"\";\n            this.headerContainer.appendChild(this.header);\n            for (let column in this.sortColumns) {\n                let cell = this.header.cells[column];\n                if (!(cell instanceof Components.TableCellHeader))\n                    return;\n                cell.sort_direction = this.sortColumns[column];\n            }\n        }\n    }\n    async render(onlySort = false) {\n        this.mustForceRender = false;\n        if (!this.headerContainer || !this.bodyContainer) {\n            return;\n        }\n        let isFirst = this.isFirstRender;\n        this.firstRender();\n        this.hadGlobalSearch = false;\n        if (!onlySort) {\n            let newRowsFiltered = [];\n            if (this.displayedData) {\n                let displayedData = Aventus.Watcher.extract(this.displayedData);\n                for (let item of displayedData) {\n                    let rowItem = this.rows.get(item);\n                    if (!rowItem) {\n                        let row = new this.options.row();\n                        row.table = this;\n                        row.grid = this.grid;\n                        row.init(this.options, item);\n                        this.rows.set(item, row);\n                        rowItem = row;\n                    }\n                    let search = this.globalSearchTxt?.trim().toLowerCase();\n                    if (search) {\n                        if (!rowItem.globalSearch(search)) {\n                            continue;\n                        }\n                    }\n                    newRowsFiltered.push(rowItem);\n                }\n            }\n            this.rowsFiltered = newRowsFiltered;\n        }\n        for (let column in this.sortColumns) {\n            this.rowsFiltered.sort((a, b) => a.sort(b, column, this.sortColumns[column]));\n        }\n        this.nbItems = this.rowsFiltered.length;\n        this.no_data = this.rowsFiltered.length == 0;\n        this.renderPage();\n        if (isFirst) {\n            this.style.display = '';\n        }\n    }\n    renderPage() {\n        this.correctPage();\n        let oldRowsDisplayed = [...this.rowsDisplayed];\n        let rowsDisplayed = this.items_per_page ? this.rowsFiltered.slice(this.items_per_page * this.currentPage, this.items_per_page * (this.currentPage + 1)) : [...this.rowsFiltered];\n        for (let oldRowDisplayed of oldRowsDisplayed) {\n            // remove from DOM but don't destroy\n            oldRowDisplayed.parentElement?.removeChild(oldRowDisplayed);\n        }\n        for (let row of rowsDisplayed) {\n            this.bodyContainer.appendChild(row);\n        }\n        this.rowsDisplayed = rowsDisplayed;\n        this.hideLoading();\n    }\n    locationInfo() {\n        const nbItems = this.nbItems;\n        const currentPage = this.currentPage;\n        const start = this.items_per_page == 0 ? 0 : Math.min(this.items_per_page * currentPage + 1, nbItems);\n        const end = this.items_per_page == 0 ? nbItems : Math.min(this.items_per_page * (currentPage + 1), nbItems);\n        return `${start}-${end} sur ${nbItems}`;\n    }\n    correctPage() {\n        let maxPage = this.items_per_page == 0 ? 0 : Math.floor(this.nbItems / this.items_per_page);\n        if (this.currentPage < 0) {\n            this.currentPage = 0;\n        }\n        else if (this.currentPage > maxPage) {\n            this.currentPage = maxPage;\n        }\n        this.first_page = this.currentPage == 0;\n        this.last_page = this.currentPage == maxPage;\n    }\n    previousPage() {\n        this.currentPage--;\n        this.renderPage();\n    }\n    firstPage() {\n        this.currentPage = 0;\n        this.renderPage();\n    }\n    nextPage() {\n        this.currentPage++;\n        this.renderPage();\n    }\n    lastPage() {\n        this.currentPage = this.items_per_page == 0 ? 0 : Math.floor(this.nbItems / this.items_per_page);\n        this.renderPage();\n    }\n    async globalFilter(txt) {\n        this.globalSearchTxt = txt;\n        this.currentPage = 0;\n        await this.render();\n    }\n    async addFilter(name, action, reload = true) {\n        let nameTxt = name;\n        if (!this.filters[nameTxt]) {\n            this.filters[nameTxt] = [];\n        }\n        else if (this.filters[nameTxt].includes(action)) {\n            return;\n        }\n        this.filters[nameTxt].push(action);\n        if (reload && this.isReady)\n            await this.filterData();\n    }\n    async removeFilter(name, action, reload = true) {\n        let nameTxt = name;\n        if (this.filters[nameTxt]) {\n            let index = this.filters[nameTxt].indexOf(action);\n            if (index != -1) {\n                this.filters[nameTxt].splice(index, 1);\n            }\n        }\n        if (reload && this.isReady)\n            await this.filterData();\n    }\n    async addCustomFilter(action, reload = true) {\n        if (this.dataFilters.includes(action)) {\n            return;\n        }\n        this.dataFilters.push(action);\n        if (reload && this.isReady)\n            await this.filterData();\n    }\n    async removeCustomFilter(action, reload = true) {\n        let index = this.dataFilters.indexOf(action);\n        if (index != -1) {\n            this.dataFilters.splice(index, 1);\n        }\n        if (reload && this.isReady)\n            await this.filterData();\n    }\n    async applyFilters() {\n        await this.filterData();\n    }\n    registerObserver() {\n        this.resizeObserver = new Aventus.ResizeObserver(() => {\n            this.grid = (this.grid_breakpoint != undefined && this.offsetWidth <= this.grid_breakpoint);\n        });\n        this.resizeObserver.observe(this);\n    }\n    updateGrid() {\n        for (const [item, row] of this.rows) {\n            row.grid = this.grid;\n        }\n    }\n    postCreation() {\n        this.syncScroll();\n        this.registerObserver();\n        this.render();\n    }\n    postDestruction() {\n        super.postDestruction();\n        this.resizeObserver.disconnect();\n        for (let [item, row] of this.rows) {\n            row.remove();\n        }\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method3() {\n        return this.tableTitle;\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method4() {\n        return this.auto_hide_scroll;\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method8() {\n        return this.locationInfo();\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method0() {\n        return this.showHeader;\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method1() {\n        return this.showSearch;\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method2() {\n        return this.showFooter;\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method7() {\n        return this.errorsTxtItemPerPage;\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method5() {\n        return this.items_per_page;\n    }\n    __b5b6f5e196622f4341e5ecfc2e397e35method6(v) {\n        if (this) {\n            this.items_per_page = v;\n        }\n    }\n}\nComponents.Table.Namespace=`Core.Components`;\n_.Components.Table=Components.Table;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.TableOptions","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.Table","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Scrollable","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Watch","isStrong":false},{"fullName":"Aventus.WatchAction","isStrong":false},{"fullName":"Core.Components.FilterAction","isStrong":false},{"fullName":"Core.Components.FilterDataAction","isStrong":false},{"fullName":"Core.Components.SortColumns","isStrong":false},{"fullName":"Map","isStrong":false},{"fullName":"Core.Components.TableRow","isStrong":false},{"fullName":"Core.Components.TableRowHeader","isStrong":false},{"fullName":"Aventus.ResizeObserver","isStrong":false},{"fullName":"Date","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.sleep","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Core.Components.TableSchema","isStrong":false},{"fullName":"Core.Components.TableCellBoolean","isStrong":false},{"fullName":"Core.Components.TableCellDate","isStrong":false},{"fullName":"Core.Components.TableCellNumber","isStrong":false},{"fullName":"Core.Components.TableCellPicture","isStrong":false},{"fullName":"Core.Components.TableCellString","isStrong":false},{"fullName":"Core.Components.TableCellCheckbox","isStrong":false},{"fullName":"Core.Components.TableCellHeader","isStrong":false},{"fullName":"Aventus.Watcher","isStrong":false},{"fullName":"NotVoid","isStrong":false},{"fullName":"Input","isStrong":false},{"fullName":"Scrollable","isStrong":false},{"fullName":"Loading","isStrong":false},{"fullName":"InputNumber","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.Table","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.TableRow = class TableRow extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"grid\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'custom_grid'() { return this.getBoolAttr('custom_grid') }\n    set 'custom_grid'(val) { this.setBoolAttr('custom_grid', val) }\r    get 'grid'() { return this.getBoolProp('grid') }\n    set 'grid'(val) { this.setBoolAttr('grid', val) }\r    table;\n    _data;\n    get data() {\n        return this._data;\n    }\n    cells = [];\n    options;\n    __registerPropertiesActions() { super.__registerPropertiesActions(); this.__addPropertyActions(\"grid\", ((target) => {\n    target.updateGrid();\n}));\r }\n    static __style = `:host{width:100%}:host .row-content{align-items:stretch;border-bottom:var(--_table-cell-horizontal-border);display:flex;flex-direction:row;width:100%}:host .row-content>*:last-child{border-right:none !important}:host .grid-content{display:none}:host([grid]){width:fit-content}:host([grid]) .row-content,:host([grid]) .grid-content{border:var(--_table-cell-vertical-border);border-radius:var(--border-radius-sm);flex-direction:column;padding:10px;width:fit-content}:host([grid][custom_grid]) .row-content{display:none}:host([grid][custom_grid]) .grid-content{display:flex}`;\n    constructor() {\n            super();\n            this.custom_grid = this.customGridTemplate();\n        }\n    __getStatic() {\n        return TableRow;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableRow.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<div class=\"row-content\" _id=\"tablerow_0\"></div><div class=\"grid-content\">\r    <slot></slot>\r</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"rowContentEl\",\n      \"ids\": [\n        \"tablerow_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"TableRow\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('custom_grid')) { this.attributeChangedCallback('custom_grid', false, false); }\rif(!this.hasAttribute('grid')) { this.attributeChangedCallback('grid', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('data');\rthis.__upgradeProperty('custom_grid');\rthis.__upgradeProperty('grid');\r }\n    __listBoolProps() { return [\"custom_grid\",\"grid\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    customGridTemplate() {\n        return false;\n    }\n    getCell(cellConfig) {\n        return cellConfig.cell ?? Components.TableCellString;\n    }\n    async addCellOption(cell, cellConfig, data) {\n    }\n    async init(options, data) {\n        this.options = options;\n        this._data = data;\n        let i = 0;\n        this.cells = [];\n        for (let cellConfig of options.schema) {\n            let cellInfo = this.getCell(cellConfig);\n            let cell;\n            let cst = cellInfo;\n            cell = new cst();\n            cell.index = i;\n            cell.row = this;\n            cell.data = data;\n            cell.label = cellConfig.name;\n            cell.grid = this.grid;\n            cell.cellConfig = cellConfig;\n            await this.addCellOption(cell, cellConfig, data);\n            await this.setCellContent(cell, cellConfig, data);\n            this.rowContentEl.appendChild(cell);\n            this.cells.push(cell);\n            i++;\n        }\n    }\n    async setCellContent(cell, cellConfig, data) {\n        if (cellConfig.cellContent) {\n            const result = await cellConfig.cellContent(data, cell);\n            if (result) {\n                await cell.setContent(result, data);\n            }\n        }\n        else {\n            const v = cellConfig.name ? Aventus.getValueFromObject(cellConfig.name, data) : undefined;\n            await cell.setContent(v, data);\n        }\n    }\n    globalSearch(search) {\n        for (let cell of this.cells) {\n            if (cell.globalSearch(search)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    sort(row, column, order) {\n        let cell = this.cells.find(c => c.cellConfig.displayName == column || c.cellConfig.name == column);\n        let cellRow = row.cells.find(c => c.cellConfig.displayName == column || c.cellConfig.name == column);\n        if (!cell || !cellRow)\n            return 0;\n        let result = cell.sortAsc(cellRow);\n        if (order == 'desc')\n            result *= -1;\n        return result;\n    }\n    updateGrid() {\n        for (let cell of this.cells) {\n            cell.grid = this.grid;\n        }\n    }\n    postDestruction() {\n        super.postDestruction();\n        for (let cell of this.cells) {\n            cell.remove();\n        }\n    }\n}\nComponents.TableRow.Namespace=`Core.Components`;\nComponents.TableRow.Tag=`rk-table-row`;\n_.Components.TableRow=Components.TableRow;\nif(!window.customElements.get('rk-table-row')){window.customElements.define('rk-table-row', Components.TableRow);Aventus.WebComponentInstance.registerDefinition(Components.TableRow);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.TableRow","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.Table","isStrong":false},{"fullName":"Core.Components.TableCell","isStrong":false},{"fullName":"Core.Components.TableOptions","isStrong":false},{"fullName":"Core.Components.TableSchema","isStrong":false},{"fullName":"Core.Components.TableSchemaCell","isStrong":false},{"fullName":"Core.Components.TableCellString","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Components.TableSchemaCellCst","isStrong":false},{"fullName":"Aventus.getValueFromObject","isStrong":false}],"fullName":"Core.Components.TableRow","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-row"},{"code":"Components.TableRowData = class TableRowData extends Components.TableRow {\n    ram;\n    static __style = ``;\n    constructor() { super(); \rthis.onUpdated=this.onUpdated.bind(this) }\n    __getStatic() {\n        return TableRowData;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableRowData.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"TableRowData\";\n    }\n    async init(options, data) {\n        super.init(options, data);\n        if (this.table instanceof Components.TableData) {\n            this.ram = this.table.defineRAM();\n            this.ram.onUpdated(this.onUpdated);\n        }\n    }\n    onUpdated(element) {\n        if (element.Id == this.data.Id) {\n            for (let cellConfig of this.options.schema) {\n                let cell = this.cells.find(c => c.cellConfig == cellConfig);\n                if (cell)\n                    this.setCellContent(cell, cellConfig, element);\n            }\n        }\n    }\n    postDestruction() {\n        if (this.ram) {\n            this.ram.offUpdated(this.onUpdated);\n        }\n    }\n}\nComponents.TableRowData.Namespace=`Core.Components`;\nComponents.TableRowData.Tag=`rk-table-row-data`;\n_.Components.TableRowData=Components.TableRowData;\nif(!window.customElements.get('rk-table-row-data')){window.customElements.define('rk-table-row-data', Components.TableRowData);Aventus.WebComponentInstance.registerDefinition(Components.TableRowData);}\n","dependances":[{"fullName":"Core.Components.TableRow","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Aventus.Ram","isStrong":false},{"fullName":"Core.Components.TableOptions","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Components.TableData","isStrong":false},{"fullName":"BindThis","isStrong":false}],"fullName":"Core.Components.TableRowData","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-row-data"},{"code":"Components.TableCell = class TableCell extends Aventus.WebComponent {\n    static get observedAttributes() {return [\"grid\", \"label\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'grid'() { return this.getBoolProp('grid') }\n    set 'grid'(val) { this.setBoolAttr('grid', val) }\rget 'label'() { return this.getStringProp('label') }\n    set 'label'(val) { this.setStringAttr('label', val) }\r    row;\n    index = 0;\n    get table() {\n        if (this.row && this.row.table) {\n            return this.row.table;\n        }\n        throw 'Table can\\'t be found for the cell';\n    }\n    content = \"\";\n    data;\n    cellConfig;\n    static __style = `:host{align-items:center;border-right:var(--_table-cell-vertical-border);display:flex;flex-shrink:0;justify-content:center;padding:var(--_table-cell-padding);position:relative;text-align:center}:host .resize{background-color:rgba(0,0,0,0);bottom:0;cursor:col-resize;display:var(--local-table-cell-resize-display);position:absolute;right:0;top:0;width:5px}:host(:nth-child(1)){flex-grow:var(--_table-cell-weight-1, 1);min-width:var(--_table-cell-min-width-1, auto);width:var(--_table-cell-width-1, calc(100% / var(--_table-nb-column)))}:host(:nth-child(2)){flex-grow:var(--_table-cell-weight-2, 1);min-width:var(--_table-cell-min-width-2, auto);width:var(--_table-cell-width-2, calc(100% / var(--_table-nb-column)))}:host(:nth-child(3)){flex-grow:var(--_table-cell-weight-3, 1);min-width:var(--_table-cell-min-width-3, auto);width:var(--_table-cell-width-3, calc(100% / var(--_table-nb-column)))}:host(:nth-child(4)){flex-grow:var(--_table-cell-weight-4, 1);min-width:var(--_table-cell-min-width-4, auto);width:var(--_table-cell-width-4, calc(100% / var(--_table-nb-column)))}:host(:nth-child(5)){flex-grow:var(--_table-cell-weight-5, 1);min-width:var(--_table-cell-min-width-5, auto);width:var(--_table-cell-width-5, calc(100% / var(--_table-nb-column)))}:host(:nth-child(6)){flex-grow:var(--_table-cell-weight-6, 1);min-width:var(--_table-cell-min-width-6, auto);width:var(--_table-cell-width-6, calc(100% / var(--_table-nb-column)))}:host(:nth-child(7)){flex-grow:var(--_table-cell-weight-7, 1);min-width:var(--_table-cell-min-width-7, auto);width:var(--_table-cell-width-7, calc(100% / var(--_table-nb-column)))}:host(:nth-child(8)){flex-grow:var(--_table-cell-weight-8, 1);min-width:var(--_table-cell-min-width-8, auto);width:var(--_table-cell-width-8, calc(100% / var(--_table-nb-column)))}:host(:nth-child(9)){flex-grow:var(--_table-cell-weight-9, 1);min-width:var(--_table-cell-min-width-9, auto);width:var(--_table-cell-width-9, calc(100% / var(--_table-nb-column)))}:host(:nth-child(10)){flex-grow:var(--_table-cell-weight-10, 1);min-width:var(--_table-cell-min-width-10, auto);width:var(--_table-cell-width-10, calc(100% / var(--_table-nb-column)))}:host(:nth-child(11)){flex-grow:var(--_table-cell-weight-11, 1);min-width:var(--_table-cell-min-width-11, auto);width:var(--_table-cell-width-11, calc(100% / var(--_table-nb-column)))}:host(:nth-child(12)){flex-grow:var(--_table-cell-weight-12, 1);min-width:var(--_table-cell-min-width-12, auto);width:var(--_table-cell-width-12, calc(100% / var(--_table-nb-column)))}:host(:nth-child(13)){flex-grow:var(--_table-cell-weight-13, 1);min-width:var(--_table-cell-min-width-13, auto);width:var(--_table-cell-width-13, calc(100% / var(--_table-nb-column)))}:host(:nth-child(14)){flex-grow:var(--_table-cell-weight-14, 1);min-width:var(--_table-cell-min-width-14, auto);width:var(--_table-cell-width-14, calc(100% / var(--_table-nb-column)))}:host(:nth-child(15)){flex-grow:var(--_table-cell-weight-15, 1);min-width:var(--_table-cell-min-width-15, auto);width:var(--_table-cell-width-15, calc(100% / var(--_table-nb-column)))}:host(:nth-child(16)){flex-grow:var(--_table-cell-weight-16, 1);min-width:var(--_table-cell-min-width-16, auto);width:var(--_table-cell-width-16, calc(100% / var(--_table-nb-column)))}:host(:nth-child(17)){flex-grow:var(--_table-cell-weight-17, 1);min-width:var(--_table-cell-min-width-17, auto);width:var(--_table-cell-width-17, calc(100% / var(--_table-nb-column)))}:host(:nth-child(18)){flex-grow:var(--_table-cell-weight-18, 1);min-width:var(--_table-cell-min-width-18, auto);width:var(--_table-cell-width-18, calc(100% / var(--_table-nb-column)))}:host(:nth-child(19)){flex-grow:var(--_table-cell-weight-19, 1);min-width:var(--_table-cell-min-width-19, auto);width:var(--_table-cell-width-19, calc(100% / var(--_table-nb-column)))}:host(:nth-child(20)){flex-grow:var(--_table-cell-weight-20, 1);min-width:var(--_table-cell-min-width-20, auto);width:var(--_table-cell-width-20, calc(100% / var(--_table-nb-column)))}:host([grid]){align-items:flex-start;border-right:none;flex-direction:column;justify-content:flex-start;margin-top:10px;padding:0}:host([grid]) .label{color:var(--text-color-light);font-size:var(--font-size-sm);margin-bottom:4px}:host([grid]) .content{margin-left:5px}:host([grid]) .resize{display:none}:host([grid]:first-child){margin-top:0}`;\n    constructor() { super(); if (this.constructor == TableCell) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return TableCell;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCell.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<template _id=\"tablecell_0\"></template><span class=\"content\" _id=\"tablecell_2\">\r    <slot></slot>\r</span><div class=\"resize\" _id=\"tablecell_3\"></div>` }\n    });\n}\n    get labelEl () { return this.shadowRoot.querySelector('[_id=\"tablecell_1\"]'); }\r    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"contentEl\",\n      \"ids\": [\n        \"tablecell_2\"\n      ]\n    },\n    {\n      \"name\": \"resizeEl\",\n      \"ids\": [\n        \"tablecell_3\"\n      ]\n    }\n  ]\n});\rconst templ0 = new Aventus.Template(this);\rtempl0.setTemplate(`\r    <div class=\"label\" _id=\"tablecell_1\"></div>\r`);\rtempl0.setActions({\n  \"content\": {\n    \"tablecell_1°@HTML\": {\n      \"fct\": (c) => `${c.print(c.comp.__ac8f24890b42a6032ac364c65280b7a3method1())}`,\n      \"once\": true\n    }\n  }\n});\rthis.__getStatic().__template.addIf({\n                    anchorId: 'tablecell_0',\n                    parts: [{once: true,\n                    condition: (c) => c.comp.__ac8f24890b42a6032ac364c65280b7a3method0(),\n                    template: templ0\n                }]\n            });\r }\n    getClassName() {\n        return \"TableCell\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('grid')) { this.attributeChangedCallback('grid', false, false); }\rif(!this.hasAttribute('label')){ this['label'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('table');\rthis.__upgradeProperty('grid');\rthis.__upgradeProperty('label');\r }\n    __listBoolProps() { return [\"grid\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    addResize() {\n        if (!this.resizeEl) {\n            return;\n        }\n        let resizeEl = this.resizeEl;\n        new Aventus.DragAndDrop({\n            element: this.resizeEl,\n            applyDrag: false,\n            isDragEnable: () => this.table.col_resize ?? false,\n            offsetDrag: 0,\n            onMove: (e, position) => {\n                let newSize = position.x + resizeEl.offsetWidth;\n                this.table.setColWidth(newSize, this.index);\n            }\n        });\n    }\n    globalSearch(search) {\n        return this.content.toLowerCase().includes(search);\n    }\n    postCreation() {\n        this.addResize();\n    }\n    __ac8f24890b42a6032ac364c65280b7a3method1() {\n        return this.label;\n    }\n    __ac8f24890b42a6032ac364c65280b7a3method0() {\n        return this.grid;\n    }\n}\nComponents.TableCell.Namespace=`Core.Components`;\n_.Components.TableCell=Components.TableCell;\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLSpanElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.TableRow","isStrong":false},{"fullName":"Core.Components.Table","isStrong":false},{"fullName":"Core.Components.TableSchema","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Aventus.DragAndDrop","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Core.Components.TableCell","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.TableCellString = class TableCellString extends Components.TableCell {\n    static __style = ``;\n    __getStatic() {\n        return TableCellString;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellString.__style);\n        return arrStyle;\n    }\n    getClassName() {\n        return \"TableCellString\";\n    }\n    sortAsc(cell) {\n        let value = this.content;\n        let valueCell = cell.content;\n        return value.localeCompare(valueCell);\n    }\n    setContent(data, rowData) {\n        this.content = data != undefined ? data + \"\" : \"\";\n        this.contentEl.innerHTML = this.content;\n    }\n}\nComponents.TableCellString.Namespace=`Core.Components`;\nComponents.TableCellString.Tag=`rk-table-cell-string`;\n_.Components.TableCellString=Components.TableCellString;\nif(!window.customElements.get('rk-table-cell-string')){window.customElements.define('rk-table-cell-string', Components.TableCellString);Aventus.WebComponentInstance.registerDefinition(Components.TableCellString);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.TableCellString","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-string"},{"code":"Components.TableCellPicture = class TableCellPicture extends Components.TableCell {\n    static get observedAttributes() {return [\"src\", \"full\"].concat(super.observedAttributes).filter((v, i, a) => a.indexOf(v) === i);}\n    get 'src'() { return this.getStringProp('src') }\n    set 'src'(val) { this.setStringAttr('src', val) }\rget 'full'() { return this.getBoolProp('full') }\n    set 'full'(val) { this.setBoolAttr('full', val) }\r    clone;\n    static __style = `:host av-button{display:none}:host .img{border-radius:25px;height:50px;margin:auto;width:50px}:host .img img{object-fit:cover;width:100%;height:100%}:host([full]){position:absolute;inset:0;z-index:200}:host([full]) span{width:100%;height:100%;display:flex;flex-direction:column;align-items:center;padding:40px}:host([full]) span av-button{display:inline-block;width:100px;margin-bottom:20px}:host([full]) span .img{flex-grow:1;width:100%}:host([full]) span .img img{object-fit:contain}`;\n    __getStatic() {\n        return TableCellPicture;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellPicture.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<av-button color=\"danger\" _id=\"tablecellpicture_0\">Fermer</av-button><div class=\"img\" _id=\"tablecellpicture_1\">\n\t\t<img loading=\"lazy\" _id=\"tablecellpicture_2\" />\n\t</div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"content\": {\n    \"tablecellpicture_2°src\": {\n      \"fct\": (c) => `${c.print(c.comp.__5c25ad747ea3a14316fd5b29073319bemethod0())}`,\n      \"once\": true\n    }\n  },\n  \"pressEvents\": [\n    {\n      \"id\": \"tablecellpicture_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.setSmaller(e, pressInstance); }\n    },\n    {\n      \"id\": \"tablecellpicture_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.setBigger(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"TableCellPicture\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('src')){ this['src'] = undefined; }\rif(!this.hasAttribute('full')) { this.attributeChangedCallback('full', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('src');\rthis.__upgradeProperty('full');\r }\n    __listBoolProps() { return [\"full\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    sortAsc(cell) {\n        return 0;\n    }\n    setContent(data, rowData) {\n        this.src = data + \"\";\n    }\n    globalSearch(search) {\n        return false;\n    }\n    setBigger() {\n        if (this.clone)\n            return;\n        this.clone = this.cloneNode(true);\n        this.clone.full = true;\n        this.clone.clone = this;\n        document.body.appendChild(this.clone);\n    }\n    setSmaller() {\n        if (this.clone) {\n            this.remove();\n            this.clone.clone = undefined;\n        }\n    }\n    __5c25ad747ea3a14316fd5b29073319bemethod0() {\n        return this.src;\n    }\n}\nComponents.TableCellPicture.Namespace=`Core.Components`;\nComponents.TableCellPicture.Tag=`rk-table-cell-picture`;\n_.Components.TableCellPicture=Components.TableCellPicture;\nif(!window.customElements.get('rk-table-cell-picture')){window.customElements.define('rk-table-cell-picture', Components.TableCellPicture);Aventus.WebComponentInstance.registerDefinition(Components.TableCellPicture);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Property","isStrong":false},{"fullName":"Core.Components.TableCellPicture","isStrong":false},{"fullName":"NotVoid","isStrong":false}],"fullName":"Core.Components.TableCellPicture","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-picture"},{"code":"Components.TableCellNumber = class TableCellNumber extends Components.TableCell {\n    static __style = ``;\n    __getStatic() {\n        return TableCellNumber;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellNumber.__style);\n        return arrStyle;\n    }\n    getClassName() {\n        return \"TableCellNumber\";\n    }\n    sortAsc(cell) {\n        if (this.content == '' && cell.content == '')\n            return 0;\n        if (this.content == '')\n            return 1;\n        if (cell.content == '')\n            return -1;\n        let x = Number(this.content);\n        let y = Number(cell.content);\n        return x - y;\n    }\n    setContent(data, rowData) {\n        if (!this.contentEl)\n            return;\n        this.content = Number(data) + \"\";\n        this.contentEl.innerHTML = this.content;\n    }\n}\nComponents.TableCellNumber.Namespace=`Core.Components`;\nComponents.TableCellNumber.Tag=`rk-table-cell-number`;\n_.Components.TableCellNumber=Components.TableCellNumber;\nif(!window.customElements.get('rk-table-cell-number')){window.customElements.define('rk-table-cell-number', Components.TableCellNumber);Aventus.WebComponentInstance.registerDefinition(Components.TableCellNumber);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.TableCellNumber","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-number"},{"code":"Components.TableCellHeader = class TableCellHeader extends Components.TableCell {\n    get 'sort_direction'() { return this.getStringAttr('sort_direction') }\n    set 'sort_direction'(val) { this.setStringAttr('sort_direction', val) }\r    sortable;\n    static __style = `:host .content{display:flex;align-items:center}:host .content .header-name{margin-left:21px}:host .content .sort-direction{margin-left:5px;font-size:var(--font-size);width:16px;height:16px;opacity:0;visibility:none;transform:rotate(180deg);transition:opacity .2s var(--bezier-curve),visibility .2s var(--bezier-curve),transform .4s var(--bezier-curve)}:host([sort_direction=asc]) .content .sort-direction{opacity:1;visibility:visible;transform:rotate(0deg)}:host([sort_direction=desc]) .content .sort-direction{opacity:1;visibility:visible;transform:rotate(180deg)}`;\n    __getStatic() {\n        return TableCellHeader;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellHeader.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot>\r    <div class=\"header-name\" _id=\"tablecellheader_0\"></div>\r    <mi-icon icon=\"expand_less\" class=\"sort-direction\"></mi-icon>\r</slot>` }, \n        blocks: { 'default':`<slot>\r    <div class=\"header-name\" _id=\"tablecellheader_0\"></div>\r    <mi-icon icon=\"expand_less\" class=\"sort-direction\"></mi-icon>\r</slot>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"headerName\",\n      \"ids\": [\n        \"tablecellheader_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"TableCellHeader\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('sort_direction')){ this['sort_direction'] = undefined; }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('sort_direction');\r }\n    sortAsc(cell) {\n        return 0;\n    }\n    setContent(data, rowData) {\n        this.content = data != undefined ? data + \"\" : \"\";\n        this.headerName.innerHTML = this.content;\n    }\n    postCreation() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (this.sortable && this.row?.table) {\n                    let current = this.sort_direction;\n                    if (!current)\n                        current = 'desc';\n                    else if (current == 'desc')\n                        current = 'asc';\n                    else if (current == 'asc')\n                        current = undefined;\n                    this.row.table.setSortColumn(this.content, current);\n                }\n            }\n        });\n    }\n}\nComponents.TableCellHeader.Namespace=`Core.Components`;\nComponents.TableCellHeader.Tag=`rk-table-cell-header`;\n_.Components.TableCellHeader=Components.TableCellHeader;\nif(!window.customElements.get('rk-table-cell-header')){window.customElements.define('rk-table-cell-header', Components.TableCellHeader);Aventus.WebComponentInstance.registerDefinition(Components.TableCellHeader);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.TableCellHeader","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-header"},{"code":"Components.TableDataCellHeaderAction = class TableDataCellHeaderAction extends Components.TableCellHeader {\n    static __style = `:host{align-items:center;display:flex;justify-content:end}:host span{align-items:center;display:flex;height:100%}:host mi-icon{border-radius:var(--border-radius-sm);color:var(--green);cursor:pointer}:host mi-icon:hover{background-color:var(--lighter)}`;\n    __getStatic() {\n        return TableDataCellHeaderAction;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableDataCellHeaderAction.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<mi-icon icon=\"add\"></mi-icon>` }\n    });\n}\n    getClassName() {\n        return \"TableDataCellHeaderAction\";\n    }\n    postCreation() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (this.table instanceof Components.TableData) {\n                    this.table.newData();\n                }\n            }\n        });\n    }\n    setContent(data, rowData) {\n    }\n}\nComponents.TableDataCellHeaderAction.Namespace=`Core.Components`;\nComponents.TableDataCellHeaderAction.Tag=`rk-table-data-cell-header-action`;\n_.Components.TableDataCellHeaderAction=Components.TableDataCellHeaderAction;\nif(!window.customElements.get('rk-table-data-cell-header-action')){window.customElements.define('rk-table-data-cell-header-action', Components.TableDataCellHeaderAction);Aventus.WebComponentInstance.registerDefinition(Components.TableDataCellHeaderAction);}\n","dependances":[{"fullName":"Core.Components.TableCellHeader","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.PressManager","isStrong":false},{"fullName":"Core.Components.TableData","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.TableDataCellHeaderAction","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-data-cell-header-action"},{"code":"Components.TableRowHeader = class TableRowHeader extends Components.TableRow {\n    cells = [];\n    static __style = `:host{--_table-cell-vertical-border: var(--_table-row-header-vertical-border);width:100%}:host .row-content{background-color:var(--_table-row-header-backgroud-color);border-bottom:var(--_table-row-header-horizontal-border);color:var(--_table-row-header-color);display:flex;flex-direction:row;height:var(--_table-row-header-height);width:100%}`;\n    __getStatic() {\n        return TableRowHeader;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableRowHeader.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`` }\n    });\n}\n    getClassName() {\n        return \"TableRowHeader\";\n    }\n    async setCellContent(cell, cellConfig, data) {\n        await cell.setContent(cellConfig.displayName, data);\n    }\n    async addCellOption(cell, cellConfig, data) {\n        if (cell instanceof Components.TableCellHeader) {\n            if (cellConfig.sortable !== undefined) {\n                cell.sortable = cellConfig.sortable;\n            }\n            else {\n                cell.sortable = this.options.sortable;\n            }\n        }\n    }\n    getCell(cellConfig) {\n        return cellConfig.cellHeader ?? Components.TableCellHeader;\n    }\n    async init(options, data) {\n        await super.init(options, data);\n    }\n}\nComponents.TableRowHeader.Namespace=`Core.Components`;\nComponents.TableRowHeader.Tag=`rk-table-row-header`;\n_.Components.TableRowHeader=Components.TableRowHeader;\nif(!window.customElements.get('rk-table-row-header')){window.customElements.define('rk-table-row-header', Components.TableRowHeader);Aventus.WebComponentInstance.registerDefinition(Components.TableRowHeader);}\n","dependances":[{"fullName":"Core.Components.TableRow","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.TableCell","isStrong":false},{"fullName":"Core.Components.TableSchema","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Components.TableCellHeader","isStrong":false},{"fullName":"Core.Components.TableOptions","isStrong":false}],"fullName":"Core.Components.TableRowHeader","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-row-header"},{"code":"Components.TableCellEnum = class TableCellEnum extends Components.TableCell {\n    enumEl;\n    static __style = ``;\n    constructor() {\n            super();\n            this.enumEl = this.defineEnum();\nif (this.constructor == TableCellEnum) { throw \"can't instanciate an abstract class\"; } }\n    __getStatic() {\n        return TableCellEnum;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellEnum.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"TableCellEnum\";\n    }\n    sortAsc(cell) {\n        let value = this.content;\n        let valueCell = cell.content;\n        return value.localeCompare(valueCell);\n    }\n    getEnumName(value) {\n        return this.enumEl[value];\n    }\n    setContent(data, rowData) {\n        if (!this.contentEl)\n            return;\n        this.content = data != undefined ? this.getEnumName(data) : \"\";\n        this.contentEl.innerHTML = this.content;\n    }\n}\nComponents.TableCellEnum.Namespace=`Core.Components`;\n_.Components.TableCellEnum=Components.TableCellEnum;\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Extract","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Aventus.Enum","isStrong":false}],"fullName":"Core.Components.TableCellEnum","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.TableCellDate = class TableCellDate extends Components.TableCell {\n    static __style = ``;\n    __getStatic() {\n        return TableCellDate;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellDate.__style);\n        return arrStyle;\n    }\n    getClassName() {\n        return \"TableCellDate\";\n    }\n    sortAsc(cell) {\n        if (cell.date?.toISOString() == this.date?.toISOString())\n            return 0;\n        if (this.date && !cell.date)\n            return -1;\n        if (!this.date && cell.date)\n            return 1;\n        if (this.date && cell.date)\n            return this.date.getTime() - cell.date.getTime();\n        return 0;\n    }\n    setContent(data, rowData) {\n        if (!this.contentEl)\n            return;\n        if (data instanceof Date) {\n            this.date = data;\n            this.content = data.toLocaleDateString(undefined, {\n                year: 'numeric',\n                month: '2-digit',\n                day: '2-digit',\n            });\n        }\n        else {\n            this.content = '';\n        }\n        this.contentEl.innerHTML = this.content;\n    }\n}\nComponents.TableCellDate.Namespace=`Core.Components`;\nComponents.TableCellDate.Tag=`rk-table-cell-date`;\n_.Components.TableCellDate=Components.TableCellDate;\nif(!window.customElements.get('rk-table-cell-date')){window.customElements.define('rk-table-cell-date', Components.TableCellDate);Aventus.WebComponentInstance.registerDefinition(Components.TableCellDate);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Date","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.TableCellDate","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-date"},{"code":"Components.TableCellCustom = class TableCellCustom extends Components.TableCell {\n    static __style = ``;\n    __getStatic() {\n        return TableCellCustom;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellCustom.__style);\n        return arrStyle;\n    }\n    getClassName() {\n        return \"TableCellCustom\";\n    }\n    sortAsc(cell) {\n        let value = this.content;\n        let valueCell = cell.content;\n        return value.localeCompare(valueCell);\n    }\n    setContent(data, rowData) {\n        this.content = data != undefined ? data + \"\" : \"\";\n        this.contentEl.innerHTML = this.content;\n    }\n}\nComponents.TableCellCustom.Namespace=`Core.Components`;\nComponents.TableCellCustom.Tag=`rk-table-cell-custom`;\n_.Components.TableCellCustom=Components.TableCellCustom;\nif(!window.customElements.get('rk-table-cell-custom')){window.customElements.define('rk-table-cell-custom', Components.TableCellCustom);Aventus.WebComponentInstance.registerDefinition(Components.TableCellCustom);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.TableCellCustom","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-custom"},{"code":"Components.TableCellCheckbox = class TableCellCheckbox extends Components.TableCell {\n    static __style = `:host span{cursor:pointer}`;\n    __getStatic() {\n        return TableCellCheckbox;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellCheckbox.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<rk-checkbox _id=\"tablecellcheckbox_0\"></rk-checkbox>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"checkboxEl\",\n      \"ids\": [\n        \"tablecellcheckbox_0\"\n      ]\n    }\n  ],\n  \"events\": [\n    {\n      \"eventName\": \"onChange\",\n      \"id\": \"tablecellcheckbox_0\",\n      \"fct\": (c, ...args) => c.comp.changed.apply(c.comp, ...args),\n      \"isCallback\": true\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"TableCellCheckbox\";\n    }\n    sortAsc(cell) {\n        return 0;\n    }\n    setContent(data, rowData) {\n    }\n    changed() {\n        if (this.checkboxEl.value) {\n            this.table.selectRow(this.row);\n        }\n        else {\n            this.table.unselectRow(this.row);\n        }\n    }\n}\nComponents.TableCellCheckbox.Namespace=`Core.Components`;\nComponents.TableCellCheckbox.Tag=`rk-table-cell-checkbox`;\n_.Components.TableCellCheckbox=Components.TableCellCheckbox;\nif(!window.customElements.get('rk-table-cell-checkbox')){window.customElements.define('rk-table-cell-checkbox', Components.TableCellCheckbox);Aventus.WebComponentInstance.registerDefinition(Components.TableCellCheckbox);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Core.Components.TableCellCheckbox","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"ViewElement","isStrong":false},{"fullName":"Core.Components.Checkbox","isStrong":false},{"fullName":"Checkbox","isStrong":false}],"fullName":"Core.Components.TableCellCheckbox","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-checkbox"},{"code":"Components.TableCellBoolean = class TableCellBoolean extends Components.TableCell {\n    static __style = ``;\n    __getStatic() {\n        return TableCellBoolean;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellBoolean.__style);\n        return arrStyle;\n    }\n    getClassName() {\n        return \"TableCellBoolean\";\n    }\n    sortAsc(cell) {\n        let x = this.content == 'Oui';\n        let y = cell.content == 'Oui';\n        return (x === y) ? 0 : x ? -1 : 1;\n    }\n    setContent(data, rowData) {\n        if (!this.contentEl)\n            return;\n        if (data === true || data === 1 || data === 'true') {\n            this.content = 'Oui';\n        }\n        else {\n            this.content = 'Non';\n        }\n        this.contentEl.innerHTML = this.content;\n    }\n}\nComponents.TableCellBoolean.Namespace=`Core.Components`;\nComponents.TableCellBoolean.Tag=`rk-table-cell-boolean`;\n_.Components.TableCellBoolean=Components.TableCellBoolean;\nif(!window.customElements.get('rk-table-cell-boolean')){window.customElements.define('rk-table-cell-boolean', Components.TableCellBoolean);Aventus.WebComponentInstance.registerDefinition(Components.TableCellBoolean);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Core.Components.TableCellBooleanType","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.TableCellBoolean","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-boolean"},{"code":"Components.TableCellAction = class TableCellAction extends Components.TableCell {\n    static __style = ``;\n    __getStatic() {\n        return TableCellAction;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableCellAction.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot>` }\n    });\n}\n    getClassName() {\n        return \"TableCellAction\";\n    }\n    sortAsc(cell) {\n        return 0;\n    }\n    setContent(data, rowData) {\n    }\n}\nComponents.TableCellAction.Namespace=`Core.Components`;\nComponents.TableCellAction.Tag=`rk-table-cell-action`;\n_.Components.TableCellAction=Components.TableCellAction;\nif(!window.customElements.get('rk-table-cell-action')){window.customElements.define('rk-table-cell-action', Components.TableCellAction);Aventus.WebComponentInstance.registerDefinition(Components.TableCellAction);}\n","dependances":[{"fullName":"Core.Components.TableCell","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true}],"fullName":"Core.Components.TableCellAction","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-cell-action"},{"code":"Components.TableData = class TableData extends Components.Table {\n    get 'add_btn'() { return this.getBoolAttr('add_btn') }\n    set 'add_btn'(val) { this.setBoolAttr('add_btn', val) }\r    application;\n    ram;\n    static __style = `:host{position:relative}:host .add-btn{bottom:10px;display:none;position:absolute;right:10px;z-index:10;box-shadow:var(--elevation-4)}:host([grid][add_btn]) .add-btn{display:block}`;\n    constructor() { super(); if (this.constructor == TableData) { throw \"can't instanciate an abstract class\"; } \rthis.onCreatedData=this.onCreatedData.bind(this)\rthis.onUpdatedData=this.onUpdatedData.bind(this)\rthis.onDeletedData=this.onDeletedData.bind(this) }\n    __getStatic() {\n        return TableData;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableData.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        slots: { 'default':`<slot></slot>` }, \n        blocks: { 'default':`<slot></slot><rk-button-icon-mi icon=\"add\" class=\"add-btn touch\" _id=\"tabledata_0\"></rk-button-icon-mi>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"pressEvents\": [\n    {\n      \"id\": \"tabledata_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.newData(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"TableData\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('add_btn')) { this.attributeChangedCallback('add_btn', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__upgradeProperty('add_btn');\r }\n    __listBoolProps() { return [\"add_btn\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    async loadData() {\n        if (this.options.showLoading)\n            this.showLoading();\n        setTimeout(async () => {\n            this.ram = this.defineRAM();\n            this.data = await this.application?.executeWithLoading(this.ram.getListWithError());\n            this.ram.onCreated(this.onCreatedData);\n            this.ram.onUpdated(this.onUpdatedData);\n            this.ram.onDeleted(this.onDeletedData);\n        }, this.options.delayLoading);\n    }\n    onCreatedData(data) {\n        if (!this.data) {\n            this.data = [data];\n        }\n        else {\n            this.data.push(data);\n        }\n    }\n    onUpdatedData(data) {\n        if (!this.data) {\n            this.data = [data];\n        }\n        else {\n            const index = this.data.findIndex(p => p.Id == data.Id);\n            if (index != -1) {\n                this.filterData(true);\n            }\n        }\n    }\n    onDeletedData(data) {\n        if (!this.data)\n            return;\n        const index = this.data.findIndex(p => p.Id == data.Id);\n        if (index != -1) {\n            this.data.splice(index, 1);\n        }\n    }\n    async newData() {\n        let state = this.defineNewState();\n        await this.application?.navigate(state);\n    }\n    async editData(data) {\n        let cloneData = data.clone();\n        let state = this.defineEditState(cloneData);\n        await this.application?.navigate(state);\n    }\n    async deleteData(data) {\n        const message = this.defineDeleteMessage(data);\n        let confirm = await this.application?.confirm({\n            title: \"Confirmation de suppression\",\n            description: message\n        });\n        if (confirm) {\n            let ram = this.defineRAM();\n            await this.application?.executeWithLoading(ram.deleteWithError(data));\n            this.data = await this.application?.executeWithLoading(ram.getListWithError());\n        }\n    }\n    normalizeSchemaCell(cellConfig) {\n        super.normalizeSchemaCell(cellConfig);\n        if (cellConfig.cellHeader == Components.TableDataCellHeaderAction) {\n            this.add_btn = true;\n        }\n    }\n    defaultOptions() {\n        let result = {\n            ...super.defaultOptions(),\n            showLoading: true,\n            delayLoading: 0\n        };\n        result.row = Components.TableRowData;\n        return result;\n    }\n    postCreation() {\n        super.postCreation();\n        this.application = this.findParentByType(System.Application) ?? undefined;\n        this.loadData();\n    }\n    postDestruction() {\n        this.ram?.offCreated(this.onCreatedData);\n        this.ram?.offUpdated(this.onUpdatedData);\n        this.ram?.offDeleted(this.onDeletedData);\n    }\n}\nComponents.TableData.Namespace=`Core.Components`;\n_.Components.TableData=Components.TableData;\n","dependances":[{"fullName":"Core.Components.Table","isStrong":true},{"fullName":"Core.Components.TableDataOptions","isStrong":false},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"Core.System.Application","isStrong":false},{"fullName":"Aventus.Ram","isStrong":false},{"fullName":"Aventus.State","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Components.TableSchema","isStrong":false},{"fullName":"Core.Components.TableDataCellHeaderAction","isStrong":false},{"fullName":"Core.Components.TableRowData","isStrong":false},{"fullName":"ButtonIconMi","isStrong":false}],"fullName":"Core.Components.TableData","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":""},{"code":"Components.TableDataCellAction = class TableDataCellAction extends Components.TableCellAction {\n    static __style = `:host{justify-content:flex-end;padding:0 7px}:host mi-icon{border-radius:var(--border-radius-sm);color:var(--blue);cursor:pointer;font-size:var(--font-size-md);margin:0 2px;padding:3px;transition:background-color .2s linear}:host mi-icon.delete{color:var(--red)}:host mi-icon:hover{background-color:var(--lighter)}:host([grid]){align-items:center;margin-top:0;width:100%}`;\n    __getStatic() {\n        return TableDataCellAction;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TableDataCellAction.__style);\n        return arrStyle;\n    }\n    __getHtml() {\rsuper.__getHtml();\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<mi-icon icon=\"edit\" _id=\"tabledatacellaction_0\"></mi-icon><mi-icon class=\"delete\" icon=\"delete\" _id=\"tabledatacellaction_1\"></mi-icon>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"pressEvents\": [\n    {\n      \"id\": \"tabledatacellaction_0\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.editData(e, pressInstance); }\n    },\n    {\n      \"id\": \"tabledatacellaction_1\",\n      \"onPress\": (e, pressInstance, c) => { c.comp.deleteData(e, pressInstance); }\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"TableDataCellAction\";\n    }\n    editData() {\n        if (this.table instanceof Components.TableData) {\n            this.table.editData(this.data);\n        }\n    }\n    deleteData() {\n        if (this.table instanceof Components.TableData) {\n            this.table.deleteData(this.data);\n        }\n    }\n}\nComponents.TableDataCellAction.Namespace=`Core.Components`;\nComponents.TableDataCellAction.Tag=`rk-table-data-cell-action`;\n_.Components.TableDataCellAction=Components.TableDataCellAction;\nif(!window.customElements.get('rk-table-data-cell-action')){window.customElements.define('rk-table-data-cell-action', Components.TableDataCellAction);Aventus.WebComponentInstance.registerDefinition(Components.TableDataCellAction);}\n","dependances":[{"fullName":"Core.Components.TableCellAction","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.TableData","isStrong":false},{"fullName":"MaterialIcon.Icon","isStrong":false}],"fullName":"Core.Components.TableDataCellAction","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-table-data-cell-action"},{"code":"Components.TabHeader = class TabHeader extends Aventus.WebComponent {\n    get 'active'() { return this.getBoolAttr('active') }\n    set 'active'(val) { this.setBoolAttr('active', val) }\r    _tab;\n    get tab() {\n        return this._tab;\n    }\n    tabs;\n    static __style = `:host{align-items:center;background-color:var(--_tabs-header-background-color);border-radius:var(--_tabs-border-radius);cursor:pointer;display:flex;font-size:var(--_tabs-header-font-size);height:100%;justify-content:center;padding:var(--_tabs-header-padding);position:relative;transition:var(--_tabs-transition)}:host .sep{background-color:rgba(0,0,0,0);bottom:calc(var(--_tabs-spacing)*-1);height:var(--_tabs-spacing);left:0;position:absolute;transition:var(--_tabs-transition);width:100%}:host([active]){background-color:var(--_tabs-header-background-color-active);border-bottom-left-radius:0;border-bottom-right-radius:0}:host([active]) .sep{background-color:var(--_tabs-header-background-color-active)}`;\n    __getStatic() {\n        return TabHeader;\n    }\n    __getStyle() {\n        let arrStyle = super.__getStyle();\n        arrStyle.push(TabHeader.__style);\n        return arrStyle;\n    }\n    __getHtml() {\n    this.__getStatic().__template.setHTML({\n        blocks: { 'default':`<div class=\"header-content\" _id=\"tabheader_0\"></div><div class=\"sep\"></div>` }\n    });\n}\n    __registerTemplateAction() { super.__registerTemplateAction();\rthis.__getStatic().__template.setActions({\n  \"elements\": [\n    {\n      \"name\": \"contentEl\",\n      \"ids\": [\n        \"tabheader_0\"\n      ]\n    }\n  ]\n});\r }\n    getClassName() {\n        return \"TabHeader\";\n    }\n    __defaultValues() { super.__defaultValues(); if(!this.hasAttribute('active')) { this.attributeChangedCallback('active', false, false); }\r }\n    __upgradeAttributes() { super.__upgradeAttributes(); this.__correctGetter('tab');\rthis.__upgradeProperty('active');\r }\n    __listBoolProps() { return [\"active\"].concat(super.__listBoolProps()).filter((v, i, a) => a.indexOf(v) === i); }\n    init(tab, tabs) {\n        this.tabs = tabs;\n        let elements = tab.headerContent;\n        if (elements.length == 0) {\n            let lab = document.createElement(\"DIV\");\n            lab.classList.add(\"label\");\n            lab.innerHTML = tab.label;\n            this.contentEl.appendChild(lab);\n        }\n        else {\n            for (let el of elements) {\n                this.contentEl.appendChild(el);\n            }\n        }\n        this._tab = tab;\n    }\n    addPress() {\n        new Aventus.PressManager({\n            element: this,\n            onPress: () => {\n                if (!this.active) {\n                    this.tabs.displayActive(this);\n                }\n            }\n        });\n    }\n    postCreation() {\n        super.postCreation();\n        this.addPress();\n    }\n}\nComponents.TabHeader.Namespace=`Core.Components`;\nComponents.TabHeader.Tag=`rk-tab-header`;\n_.Components.TabHeader=Components.TabHeader;\nif(!window.customElements.get('rk-tab-header')){window.customElements.define('rk-tab-header', Components.TabHeader);Aventus.WebComponentInstance.registerDefinition(Components.TabHeader);}\n","dependances":[{"fullName":"Aventus.WebComponent","isStrong":true},{"fullName":"Aventus.DefaultComponent","isStrong":true},{"fullName":"Core.Components.Tab","isStrong":false},{"fullName":"Attribute","isStrong":false},{"fullName":"ViewElement","isStrong":false},{"fullName":"HTMLDivElement","isStrong":false},{"fullName":"Core.Components.Tabs","isStrong":false},{"fullName":"Aventus.PressManager","isStrong":false}],"fullName":"Core.Components.TabHeader","required":false,"type":1,"isExported":true,"convertibleName":"","tagName":"rk-tab-header"},{"code":"App.AppError=class AppError extends Aventus.GenericError {\n    static get Fullname() { return \"Core.App.AppError, Core\"; }\n}\nApp.AppError.Namespace=`Core.App`;\r\nApp.AppError.$schema={...(Aventus.GenericError?.$schema ?? {}), };\r\nAventus.Converter.register(App.AppError.Fullname, App.AppError);\r\n_.App.AppError=App.AppError;\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Core.App.AppErrorCode","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.App.AppError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Data.Manifest=class Manifest extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Data.Manifest, Core\"; }\n    name;\n    short_name;\n    icons = [];\n    theme_color;\n    background_color;\n    display;\n    orientation;\n    scope;\n    start_url;\n}\nData.Manifest.Namespace=`Core.Data`;\r\nData.Manifest.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"name\":\"string\",\"short_name\":\"string\",\"icons\":\"ManifestIcon\",\"theme_color\":\"string\",\"background_color\":\"string\",\"display\":\"string\",\"orientation\":\"string\",\"scope\":\"string\",\"start_url\":\"string\"};\r\nAventus.Converter.register(Data.Manifest.Fullname, Data.Manifest);\r\n_.Data.Manifest=Data.Manifest;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false},{"fullName":"Core.Data.ManifestIcon","isStrong":false}],"fullName":"Core.Data.Manifest","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Routes.CompanyRouter=class CompanyRouter extends Aventus.HttpRoute {\n    constructor(router) {\n        super(router ?? new Routes.CoreRouter());\n        this.GetMain = this.GetMain.bind(this);\n        this.Update = this.Update.bind(this);\n        this.ReadManifest = this.ReadManifest.bind(this);\n        this.SaveManifest = this.SaveManifest.bind(this);\n    }\n    async GetMain() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/getmain`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n    async Update(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/update`, Aventus.HttpMethod.PUT);\n        request.setBody(body);\n        return await request.queryJSON(this.router);\n    }\n    async ReadManifest() {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/readmanifest`, Aventus.HttpMethod.GET);\n        return await request.queryJSON(this.router);\n    }\n    async SaveManifest(body) {\n        const request = new Aventus.HttpRequest(`${this.getPrefix()}/savemanifest`, Aventus.HttpMethod.POST);\n        request.setBody(body);\n        return await request.queryVoid(this.router);\n    }\n}\nRoutes.CompanyRouter.Namespace=`Core.Routes`;\r\n_.Routes.CompanyRouter=Routes.CompanyRouter;\r\n","dependances":[{"fullName":"Aventus.HttpRoute","isStrong":true},{"fullName":"Aventus.HttpRouter","isStrong":false},{"fullName":"Core.Routes.CoreRouter","isStrong":false},{"fullName":"BindThis","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":false},{"fullName":"Core.Data.Company","isStrong":false},{"fullName":"Aventus.HttpRequest","isStrong":false},{"fullName":"Aventus.HttpMethod","isStrong":false},{"fullName":"TypeResult","isStrong":false},{"fullName":"FormData","isStrong":false},{"fullName":"Core.Data.Manifest","isStrong":false},{"fullName":"AventusSharp.Tools.VoidWithError","isStrong":false}],"fullName":"Core.Routes.CompanyRouter","required":false,"type":1,"isExported":true,"convertibleName":""},{"code":"Errors.DesktopError=class DesktopError extends Aventus.GenericError {\n    static get Fullname() { return \"Core.Logic.DesktopError, Core\"; }\n}\nErrors.DesktopError.Namespace=`Core.Errors`;\r\nErrors.DesktopError.$schema={...(Aventus.GenericError?.$schema ?? {}), };\r\nAventus.Converter.register(Errors.DesktopError.Fullname, Errors.DesktopError);\r\n_.Errors.DesktopError=Errors.DesktopError;\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Core.Errors.DesktopErrorCode","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Errors.DesktopError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Errors.StorageError=class StorageError extends Aventus.GenericError {\n    static get Fullname() { return \"Core.Logic.FileSystem.StorageError, Core\"; }\n}\nErrors.StorageError.Namespace=`Core.Errors`;\r\nErrors.StorageError.$schema={...(Aventus.GenericError?.$schema ?? {}), };\r\nAventus.Converter.register(Errors.StorageError.Fullname, Errors.StorageError);\r\n_.Errors.StorageError=Errors.StorageError;\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Core.Errors.StorageErrorCode","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Errors.StorageError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Errors.ImageFileError=class ImageFileError extends Aventus.GenericError {\n    static get Fullname() { return \"Core.Tools.ImageFileError, Core\"; }\n}\nErrors.ImageFileError.Namespace=`Core.Errors`;\r\nErrors.ImageFileError.$schema={...(Aventus.GenericError?.$schema ?? {}), };\r\nAventus.Converter.register(Errors.ImageFileError.Fullname, Errors.ImageFileError);\r\n_.Errors.ImageFileError=Errors.ImageFileError;\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Core.Errors.ImageFileErrorCode","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Errors.ImageFileError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Tools.ResultWithImageFileError=class ResultWithImageFileError extends AventusSharp.Tools.ResultWithError {\n    static get Fullname() { return \"Core.Tools.ResultWithImageFileError, Core\"; }\n}\nTools.ResultWithImageFileError.Namespace=`Core.Tools`;\r\nTools.ResultWithImageFileError.$schema={...(AventusSharp.Tools.ResultWithError?.$schema ?? {}), };\r\nAventus.Converter.register(Tools.ResultWithImageFileError.Fullname, Tools.ResultWithImageFileError);\r\n_.Tools.ResultWithImageFileError=Tools.ResultWithImageFileError;\r\n","dependances":[{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":true},{"fullName":"Core.Errors.ImageFileError","isStrong":false},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Tools.ResultWithImageFileError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Tools.VoidWithImageFileError=class VoidWithImageFileError extends AventusSharp.Tools.VoidWithError {\n    static get Fullname() { return \"Core.Tools.VoidWithImageFileError, Core\"; }\n}\nTools.VoidWithImageFileError.Namespace=`Core.Tools`;\r\nTools.VoidWithImageFileError.$schema={...(AventusSharp.Tools.VoidWithError?.$schema ?? {}), };\r\nAventus.Converter.register(Tools.VoidWithImageFileError.Fullname, Tools.VoidWithImageFileError);\r\n_.Tools.VoidWithImageFileError=Tools.VoidWithImageFileError;\r\n","dependances":[{"fullName":"AventusSharp.Tools.VoidWithError","isStrong":true},{"fullName":"Core.Errors.ImageFileError","isStrong":false},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Tools.VoidWithImageFileError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Errors.PdfError=class PdfError extends Aventus.GenericError {\n    static get Fullname() { return \"Core.Tools.PdfError, Core\"; }\n}\nErrors.PdfError.Namespace=`Core.Errors`;\r\nErrors.PdfError.$schema={...(Aventus.GenericError?.$schema ?? {}), };\r\nAventus.Converter.register(Errors.PdfError.Fullname, Errors.PdfError);\r\n_.Errors.PdfError=Errors.PdfError;\r\n","dependances":[{"fullName":"Aventus.GenericError","isStrong":true},{"fullName":"Core.Errors.PdfErrorCode","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Errors.PdfError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Tools.ResultWithPdfError=class ResultWithPdfError extends AventusSharp.Tools.ResultWithError {\n    static get Fullname() { return \"Core.Tools.ResultWithPdfError, Core\"; }\n}\nTools.ResultWithPdfError.Namespace=`Core.Tools`;\r\nTools.ResultWithPdfError.$schema={...(AventusSharp.Tools.ResultWithError?.$schema ?? {}), };\r\nAventus.Converter.register(Tools.ResultWithPdfError.Fullname, Tools.ResultWithPdfError);\r\n_.Tools.ResultWithPdfError=Tools.ResultWithPdfError;\r\n","dependances":[{"fullName":"AventusSharp.Tools.ResultWithError","isStrong":true},{"fullName":"Core.Errors.PdfError","isStrong":false},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Tools.ResultWithPdfError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Tools.VoidWithPdfError=class VoidWithPdfError extends AventusSharp.Tools.VoidWithError {\n    static get Fullname() { return \"Core.Tools.VoidWithPdfError, Core\"; }\n}\nTools.VoidWithPdfError.Namespace=`Core.Tools`;\r\nTools.VoidWithPdfError.$schema={...(AventusSharp.Tools.VoidWithError?.$schema ?? {}), };\r\nAventus.Converter.register(Tools.VoidWithPdfError.Fullname, Tools.VoidWithPdfError);\r\n_.Tools.VoidWithPdfError=Tools.VoidWithPdfError;\r\n","dependances":[{"fullName":"AventusSharp.Tools.VoidWithError","isStrong":true},{"fullName":"Core.Errors.PdfError","isStrong":false},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Tools.VoidWithPdfError","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"Websocket.Events.ApplicationTestEvent.Body=class Body extends AventusSharp.Data.SharpClass {\n    static get Fullname() { return \"Core.Websocket.Events.ApplicationTestEvent+Body, Core\"; }\n    id;\n    name;\n}\nWebsocket.Events.ApplicationTestEvent.Body.Namespace=`Core.Websocket.Events.ApplicationTestEvent`;\r\nWebsocket.Events.ApplicationTestEvent.Body.$schema={...(AventusSharp.Data.SharpClass?.$schema ?? {}), \"id\":\"number\",\"name\":\"string\"};\r\nAventus.Converter.register(Websocket.Events.ApplicationTestEvent.Body.Fullname, Websocket.Events.ApplicationTestEvent.Body);\r\n_.Websocket.Events.ApplicationTestEvent.Body=Websocket.Events.ApplicationTestEvent.Body;\r\n","dependances":[{"fullName":"AventusSharp.Data.SharpClass","isStrong":true},{"fullName":"Convertible","isStrong":false}],"fullName":"Core.Websocket.Events.ApplicationTestEvent.Body","required":false,"type":1,"isExported":true,"convertibleName":"Fullname"},{"code":"RAM.GroupRAM=class GroupRAM extends RAM.RamHttp {\n    /**\n     * Create a singleton to store data\n     */\n    static getInstance() {\n        return Aventus.Instance.get(RAM.GroupRAM);\n    }\n    /**\n     * @inheritdoc\n     */\n    defineIndexKey() {\n        return 'Id';\n    }\n    /**\n     * @inheritdoc\n     */\n    getTypeForData(objJson) {\n        return this.addUserMethod(Data.Group);\n    }\n    /**\n     * @inheritdoc\n     */\n    defineRoutes() {\n        return new Routes.GroupRouter(new Lib.HttpRouter());\n    }\n    /**\n     * Mixin pattern to add methods\n     */\n    addUserMethod(Base) {\n        return class Extension extends Base {\n            static get className() {\n                return Base.className || Base.name;\n            }\n            get className() {\n                return Base.className || Base.name;\n            }\n        };\n    }\n}\nRAM.GroupRAM.Namespace=`Core.RAM`;\r\n_.RAM.GroupRAM=RAM.GroupRAM;\r\n","dependances":[{"fullName":"Core.RAM.RamHttp","isStrong":true},{"fullName":"Core.RAM.GroupExtended","isStrong":false},{"fullName":"Aventus.IRam","isStrong":true},{"fullName":"Core.RAM.GroupRAM","isStrong":false},{"fullName":"Aventus.Instance","isStrong":false},{"fullName":"Aventus.KeysObject","isStrong":false},{"fullName":"Core.Data.Group","isStrong":false},{"fullName":"Core.Routes.GroupRouter","isStrong":false},{"fullName":"Core.Lib.HttpRouter","isStrong":false},{"fullName":"B","isStrong":false},{"fullName":"Base","isStrong":false}],"fullName":"Core.RAM.GroupRAM","required":false,"type":1,"isExported":true,"convertibleName":""}],"existing":[{"fullName":"Core.State.Fields","dependances":[{"fullName":"T","isStrong":false}]},{"fullName":"Core.RAM.GroupMethod","dependances":[]},{"fullName":"Core.Components.TableCellBooleanType","dependances":[]},{"fullName":"Core.Components.SortColumns","dependances":[]},{"fullName":"Core.Components.FilterDataAction","dependances":[{"fullName":"T","isStrong":false}]},{"fullName":"Core.Components.Key","dependances":[{"fullName":"T","isStrong":false}]},{"fullName":"Core.Components.TableSchemaCellContent","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Core.Components.TableCell","isStrong":false},{"fullName":"Promise","isStrong":false}]},{"fullName":"Core.Components.TableSchemaCellCst","dependances":[{"fullName":"Core.Components.TableCell","isStrong":false},{"fullName":"T","isStrong":false}]},{"fullName":"Core.Components.TableCellType","dependances":[]},{"fullName":"Core.Components.MenuPositionInfo","dependances":[{"fullName":"DOMRect","isStrong":false}]},{"fullName":"Core.Components.MenuPositionResult","dependances":[]},{"fullName":"Core.Components.ExtractTypeTwoColumnsOptions","dependances":[{"fullName":"Core.Components.TwoColumnsOption","isStrong":false},{"fullName":"U","isStrong":false},{"fullName":"X","isStrong":false}]},{"fullName":"Core.Components.ExtractTypeOption","dependances":[{"fullName":"Core.Components.GenericOption","isStrong":false},{"fullName":"U","isStrong":false},{"fullName":"X","isStrong":false}]},{"fullName":"Core.Lib.HSVAColor","dependances":[]},{"fullName":"Core.Lib.HSVColor","dependances":[]},{"fullName":"Core.Lib.HSLAColor","dependances":[]},{"fullName":"Core.Lib.HSLColor","dependances":[]},{"fullName":"Core.Lib.RGBColor","dependances":[]},{"fullName":"Core.Lib.RGBAColor","dependances":[]},{"fullName":"Core.Components.IconType","dependances":[{"fullName":"MaterialIcon.IconType","isStrong":false}]},{"fullName":"Core.Components.FormValidateResult","dependances":[{"fullName":"Aventus.Asyncable","isStrong":false}]},{"fullName":"Core.Components.FormValidate","dependances":[{"fullName":"Core.Components.FormValidateResult","isStrong":false}]},{"fullName":"Core.Components.VirtualFormConfig","dependances":[{"fullName":"Core.Components.FormValidate","isStrong":false},{"fullName":"Aventus.GenericError","isStrong":false}]},{"fullName":"Core.Lib.FileSaverOption","dependances":[]},{"fullName":"Core.Components.ISheetElement","dependances":[]},{"fullName":"Core.Components.SheetOrientation","dependances":[]},{"fullName":"Core.Components.SheetFormat","dependances":[]},{"fullName":"Core.Components.SheetSettings","dependances":[{"fullName":"Core.Components.SheetFormat","isStrong":false},{"fullName":"Core.Components.SheetOrientation","isStrong":false}]},{"fullName":"Core.System.SizeList","dependances":[]},{"fullName":"Core.System.GetArgs","dependances":[{"fullName":"X","isStrong":false},{"fullName":"P","isStrong":false}]},{"fullName":"Core.System.GetPromiseResult","dependances":[{"fullName":"ReturnType","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Y","isStrong":false}]},{"fullName":"Core.System.GetErrorValue","dependances":[{"fullName":"X","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false},{"fullName":"B","isStrong":false}]},{"fullName":"Core.System.ApplicationQueryResult","dependances":[{"fullName":"Core.System.GetErrorValue","isStrong":false},{"fullName":"Core.System.GetPromiseResult","isStrong":false},{"fullName":"X","isStrong":false}]},{"fullName":"Core.Lib.BeforeInstallPromptEvent","dependances":[{"fullName":"Promise","isStrong":false}]},{"fullName":"Core.Lib.AppIconCst","dependances":[{"fullName":"Core.System.AppIcon","isStrong":false}]},{"fullName":"Core.Components.PopupInfo","dependances":[]},{"fullName":"Core.Components.ConfirmInfo","dependances":[{"fullName":"Core.Components.PopupInfo","isStrong":true}]},{"fullName":"Core.Components.AlertInfo","dependances":[{"fullName":"Core.Components.PopupInfo","isStrong":true}]},{"fullName":"Core.Lib.Rectangle","dependances":[]},{"fullName":"Core.System.ApplicationPositionSize","dependances":[]},{"fullName":"Core.System.History","dependances":[{"fullName":"Aventus.State","isStrong":false}]},{"fullName":"Core.System.ApplicationInitOptions","dependances":[{"fullName":"Core.System.Desktop","isStrong":false}]},{"fullName":"Core.System.ApplicationQueryFctResult","dependances":[{"fullName":"Aventus.ResultWithError","isStrong":false},{"fullName":"X","isStrong":false},{"fullName":"Aventus.VoidWithError","isStrong":false}]},{"fullName":"Core.System.ApplicationQueryFct","dependances":[{"fullName":"Promise","isStrong":false},{"fullName":"Core.System.ApplicationQueryFctResult","isStrong":false},{"fullName":"X","isStrong":false}]},{"fullName":"Core.System.ExecType","dependances":[{"fullName":"Promise","isStrong":false},{"fullName":"Core.System.ApplicationQueryFctResult","isStrong":false},{"fullName":"X","isStrong":false}]},{"fullName":"Core.State.Field","dependances":[{"fullName":"T","isStrong":false}]},{"fullName":"Core.ColorsType","dependances":[]},{"fullName":"Core.Components.NotificationPosition","dependances":[]},{"fullName":"Core.Components.ResizeConfig","dependances":[]},{"fullName":"Core.Lib.DeviceType","dependances":[]},{"fullName":"Core.RAM.RamWithTransactionInjector","dependances":[{"fullName":"AventusSharp.Data.Storable","isStrong":false},{"fullName":"Map","isStrong":false},{"fullName":"Aventus.RamItem","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Aventus.KeysObject","isStrong":false},{"fullName":"Aventus.ResultWithError","isStrong":false}]},{"fullName":"Core.RAM.UserMethod","dependances":[]},{"fullName":"Core.Permissions.IPermissionQuery","dependances":[]},{"fullName":"Core.System.IDesktopActivable","dependances":[{"fullName":"HTMLElement","isStrong":true}]},{"fullName":"Core.RAM.GroupExtended","dependances":[{"fullName":"Core.Data.Group","isStrong":false},{"fullName":"Core.RAM.GroupMethod","isStrong":false}]},{"fullName":"Core.AddonsName","dependances":[]},{"fullName":"Core.State.MoveApplicationProvider","dependances":[{"fullName":"Core.State.MoveApplication","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.System.AppIcon","isStrong":false}]},{"fullName":"Core.Components.IPositionable","dependances":[]},{"fullName":"Core.Components.ContextMenuSeparatorOption","dependances":[{"fullName":"Core.Components.ContextMenuItem","isStrong":false},{"fullName":"Core.Components.ContextMenuSeparator","isStrong":false}]},{"fullName":"Core.Components.ContextMenuItemOption","dependances":[{"fullName":"MaterialIcon.IconType","isStrong":false},{"fullName":"Core.Components.ContextMenuItem","isStrong":false},{"fullName":"Core.Components.ContextMenuSeparator","isStrong":false}]},{"fullName":"Core.Components.IContextMenu","dependances":[{"fullName":"Core.Components.ContextMenu","isStrong":false}]},{"fullName":"Core.Data.DesktopData","dependances":[{"fullName":"Core.Data.Desktop","isStrong":false}]},{"fullName":"Core.RAM.UserExtended","dependances":[{"fullName":"Core.Data.User","isStrong":false},{"fullName":"Core.RAM.UserMethod","isStrong":false}]},{"fullName":"Core.Components.NotificationOptions","dependances":[{"fullName":"Core.Components.NotificationPosition","isStrong":false},{"fullName":"Core.ColorsType","isStrong":false}]},{"fullName":"Core.System.ApplicationRoute","dependances":[{"fullName":"Core.System.FrameNoScroll","isStrong":false}]},{"fullName":"Core.System.ExtractTypePopup","dependances":[{"fullName":"Core.Components.GenericPopup","isStrong":false},{"fullName":"U","isStrong":false},{"fullName":"Y","isStrong":false},{"fullName":"Core.Components.PopupInfo","isStrong":false},{"fullName":"X","isStrong":false}]},{"fullName":"Core.System.ApplicationSidnavRouteOptions","dependances":[{"fullName":"Core.System.FrameNoScroll","isStrong":false},{"fullName":"MaterialIcon.IconType","isStrong":false},{"fullName":"Core.Components.Link","isStrong":false}]},{"fullName":"Core.Components.FormPartValidate","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Promise","isStrong":false},{"fullName":"Core.Components.FormValidateResult","isStrong":false}]},{"fullName":"Core.Components.FormPart","dependances":[{"fullName":"Core.Components.FormPartValidate","isStrong":false}]},{"fullName":"Core.Components.FormSchema","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Core.Components.FormPart","isStrong":false}]},{"fullName":"Core.Components.InternalFormPart","dependances":[{"fullName":"Core.Components.FormPartValidate","isStrong":false},{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Aventus.Asyncable","isStrong":false},{"fullName":"Core.Components.IFormElement","isStrong":false},{"fullName":"Promise","isStrong":false}]},{"fullName":"Core.Components.InternalForm","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Core.Components.InternalFormPart","isStrong":false}]},{"fullName":"Core.Components.IFormElement","dependances":[{"fullName":"Aventus.Callback","isStrong":false},{"fullName":"Core.Components.InternalFormPart","isStrong":false}]},{"fullName":"Core.Components.TableSchemaCell","dependances":[{"fullName":"Core.Components.TableSchemaCellCst","isStrong":false},{"fullName":"T","isStrong":false}]},{"fullName":"Core.Components.TableSchema","dependances":[{"fullName":"Core.Components.TableCellType","isStrong":false},{"fullName":"Core.Components.TableSchemaCell","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Core.Components.TableSchemaCellContent","isStrong":false},{"fullName":"Core.Components.TableCell","isStrong":false}]},{"fullName":"Core.Components.TableOptions","dependances":[{"fullName":"Core.Components.TableSchema","isStrong":false},{"fullName":"T","isStrong":false},{"fullName":"Core.Components.TableRow","isStrong":false},{"fullName":"Core.Components.TableRowHeader","isStrong":false}]},{"fullName":"Core.Components.TableDataOptions","dependances":[{"fullName":"Core.Components.TableOptions","isStrong":false},{"fullName":"T","isStrong":false}]},{"fullName":"Core.Components.FilterAction","dependances":[{"fullName":"T","isStrong":false},{"fullName":"Core.Components.Key","isStrong":false}]}]}
//#endregion js src //
//#region css def //
{"rk-table-cell-action":[],"rk-table-cell-boolean":[],"rk-table-cell-custom":[],"rk-table-cell-date":[],"rk-table-cell-number":[],"rk-table-cell-picture":[],"rk-table-cell-string":[],"rk-app-icon":[],"rk-app-icon-inline":[],"rk-core-app-icon":[],"rk-app-install-panel":[],"rk-application":[{"name":"--application-box-shadow"},{"name":"--application-header-background-color","chainValues":["--darker-active"]},{"name":"--application-background-color","chainValues":["--primary-color-opacity"]},{"name":"--application-border-radius","chainValues":["10px"]}],"rk-application-sidnav":[{"name":"--application-sidnav-sidenav-width","chainValues":["200px"]}],"rk-app-list":[{"name":"--app-list-case-border-radius","chainValues":["--app-icon-border-radius","10px"]},{"name":"--app-list-case-border","chainValues":["none"]},{"name":"--app-list-case-background-color","chainValues":["transparent"]},{"name":"--app-list-case-border-selected","chainValues":["red"]},{"name":"--app-list-case-background-color-selected","chainValues":["transparent"]}],"rk-add-on-time":[],"rk-bottom-bar":[],"rk-desktop":[{"name":"--desktop-background-color","chainValues":["--primary-color"]}],"rk-frame":[],"rk-frame-404":[],"rk-frame-no-scroll":[],"rk-frame-not-allowed":[],"rk-frame-state":[],"rk-frame-state-no-scroll":[],"rk-home-btn":[],"rk-home-panel":[],"rk-loading":[{"name":"--dot-size","chainValues":["12px"]},{"name":"--radius","chainValues":["50px"]},{"name":"--loading-color","chainValues":["--primary-color","white"]},{"name":"--loading-background-color","chainValues":["--emphasize","0.5"]}],"rk-os":[],"rk-panel":[],"rk-pwa-button":[],"rk-pwa-prompt-ios":[],"rk-calendar":[{"name":"--calendar-background-color","chainValues":["white"]},{"name":"--calendar-background-color-case-hover","chainValues":["--lighter"]},{"name":"--calendar-background-color-case-active","chainValues":["--lighter"]},{"name":"--calendar-background-color-selector","chainValues":["white"]},{"name":"--calendar-text-color-case","chainValues":["--text-color"]},{"name":"--calendar-text-color-case-others","chainValues":["--secondary-color"]},{"name":"--calendar-text-color-case-header","chainValues":["--text-color-light"]},{"name":"--calendar-text-color-case-today","chainValues":["--orange"]},{"name":"--calendar-case-size","chainValues":["30px"]},{"name":"--calendar-case-font-size","chainValues":["--font-size","16px"]},{"name":"--calendar-chevron-size","chainValues":["1.5"]},{"name":"--calendar-month-font-size","chainValues":["1.25"]},{"name":"--calendar-month-selector-height","chainValues":["--_calendar-case-size"]},{"name":"--calendar-year-selector-height","chainValues":["--_calendar-case-size"]},{"name":"--calendar-case-gap","chainValues":["10px"]},{"name":"--calendar-row-gap","chainValues":["5px"]}],"rk-calendar-day":[],"rk-calendar-day-default":[],"rk-context-menu":[],"rk-context-menu-element":[],"rk-context-menu-item":[],"rk-context-menu-separator":[],"rk-sheet":[{"name":"--sheet-padding","chainValues":["0"]}],"rk-sheet-preview":[],"rk-sheet-splitter":[],"rk-button":[{"name":"--button-background-color"},{"name":"--button-background-color-hover","chainValues":["--darker"]},{"name":"--button-color","chainValues":["currentcolor"]},{"name":"--button-box-shadow"},{"name":"--button-box-shadow-hover"},{"name":"--button-border-radius","chainValues":["--border-radius-sm","5px"]},{"name":"--button-padding","chainValues":["16px"]},{"name":"--button-icon-fill-color","chainValues":["--_button-color"]},{"name":"--button-icon-stroke-color","chainValues":["transparent"]},{"name":"--button-icon-margin","chainValues":["10px"]},{"name":"--button-background-color-disable","chainValues":["--disable-color"]},{"name":"--button-color-disable","chainValues":["--text-disable"]}],"rk-button-icon":[{"name":"--button-background-color"},{"name":"--button-background-color-hover","chainValues":["--darker"]},{"name":"--button-color","chainValues":["currentcolor"]},{"name":"--button-box-shadow"},{"name":"--button-box-shadow-hover"},{"name":"--button-border-radius","chainValues":["--border-radius-sm","5px"]},{"name":"--button-padding","chainValues":["0"]},{"name":"--button-icon-fill-color","chainValues":["--_button-color"]},{"name":"--button-icon-stroke-color","chainValues":["transparent"]},{"name":"--button-icon-margin","chainValues":["10px"]},{"name":"--button-background-color-disable","chainValues":["--disable-color"]},{"name":"--button-color-disable","chainValues":["--text-disable"]}],"rk-button-icon-mi":[],"rk-checkbox":[{"name":"--checkbox-size","chainValues":["18px"]},{"name":"--checkbox-height","chainValues":["--_checkbox-size"]},{"name":"--checkbox-width","chainValues":["--_checkbox-size"]},{"name":"--checkbox-border-radius","chainValues":["--form-element-border-radius"]},{"name":"--checkbox-border","chainValues":["--form-element-border"]},{"name":"--checkbox-border-active","chainValues":["--form-element-border-active","--_checkbox-border"]},{"name":"--checkbox-background","chainValues":["--form-element-background","white"]},{"name":"--checkbox-background-active","chainValues":["--form-element-background-active","white"]},{"name":"--checkbox-tick-color","chainValues":["--_checkbox-background"]},{"name":"--checkbox-tick-size","chainValues":["2px"]},{"name":"--checkbox-tick-padding","chainValues":["10%"]},{"name":"--checkbox-font-size-label","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--checkbox-margin-label","chainValues":["5px"]}],"rk-color-picker":[{"name":"--color-picker-height","documentation":"\nHauteur du sélecteur de couleurs.","type":"*","chainValues":["30px"]},{"name":"--color-picker-background-color","documentation":"\nHauteur du sélecteur de couleurs.\n/\n--_color-picker-height: var(--color-picker-height, 30px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["--form-element-background","white"]},{"name":"--color-picker-icon-height","documentation":"\nHauteur du sélecteur de couleurs.\n/\n--_color-picker-height: var(--color-picker-height, 30px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["2"]},{"name":"--color-picker-error-logo-size","documentation":"\nHauteur du sélecteur de couleurs.\n/\n--_color-picker-height: var(--color-picker-height, 30px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["2"]},{"name":"--color-picker-font-size","documentation":"\nHauteur du sélecteur de couleurs.\n/\n--_color-picker-height: var(--color-picker-height, 30px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["--form-element-font-size","16px"]},{"name":"--color-picker-font-size-label","documentation":"\nHauteur du sélecteur de couleurs.\n/\n--_color-picker-height: var(--color-picker-height, 30px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--color-picker-color-picker-border","documentation":"\nHauteur du sélecteur de couleurs.\n/\n--_color-picker-height: var(--color-picker-height, 30px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["--form-element-border","--lighter-active"]},{"name":"--color-picker-border-radius","documentation":"\nHauteur du sélecteur de couleurs.\n/\n--_color-picker-height: var(--color-picker-height, 30px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["--form-element-border-radius","0"]}],"rk-color-picker-selector":[{"name":"--color-picker-selector-area-width","documentation":"\nLargeur de la zone de sélection de couleur.","type":"*","chainValues":["200px"]},{"name":"--color-picker-selector-panel-width","documentation":"\nLargeur de la zone de sélection de couleur.\n/\n--_color-picker-selector-area-width: var(--color-picker-selector-area-width, 200px);\n\n/*\nLargeur du panneau de sélection de couleur.","type":"*","chainValues":["200px"]},{"name":"--color-picker-selector-background-color","documentation":"\nLargeur de la zone de sélection de couleur.\n/\n--_color-picker-selector-area-width: var(--color-picker-selector-area-width, 200px);\n\n/*\nLargeur du panneau de sélection de couleur.\n/\n--_color-picker-selector-panel-width: var(--color-picker-selector-panel-width, 200px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["white"]},{"name":"--color-picker-selector-border-radius","documentation":"\nLargeur de la zone de sélection de couleur.\n/\n--_color-picker-selector-area-width: var(--color-picker-selector-area-width, 200px);\n\n/*\nLargeur du panneau de sélection de couleur.\n/\n--_color-picker-selector-panel-width: var(--color-picker-selector-panel-width, 200px);\n\n/*\nCouleur de fond du sélecteur de couleurs.","type":"color","chainValues":["--border-radius-sm"]}],"rk-calendar-container":[],"rk-date-picker":[],"rk-date-picker-calendar":[],"rk-date-picker-calendar-day":[],"rk-form":[],"rk-form-element":[],"rk-input":[{"name":"--input-height","chainValues":["30px"]},{"name":"--input-background-color","chainValues":["--form-element-background","white"]},{"name":"--input-icon-height","chainValues":["2"]},{"name":"--input-error-logo-size","chainValues":["2"]},{"name":"--input-font-size","chainValues":["--form-element-font-size","16px"]},{"name":"--input-font-size-label","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--input-input-border","chainValues":["--form-element-border","--lighter-active"]},{"name":"--input-border-radius","chainValues":["--form-element-border-radius","0"]},{"name":"--input-readonly-background-color","chainValues":["--form-element-background-readonly","--_input-background-color"]},{"name":"--input-readonly-border","chainValues":["--form-element-border-readonly","--_input-input-border"]},{"name":"--input-unit-background-color","chainValues":["--secondary-color"]},{"name":"--input-unit-color","chainValues":["--text-color-secondary"]}],"rk-input-date":[{"name":"--input-date-height","documentation":"\nHeight of the date input field.","type":"*","chainValues":["30px"]},{"name":"--input-date-background-color","documentation":"\nHeight of the date input field.\n/\n--_input-date-height: var(--input-date-height, 30px);\n/*\nBackground color of the date input field.","type":"color","chainValues":["--form-element-background","white"]},{"name":"--input-date-icon-height","documentation":"\nHeight of the date input field.\n/\n--_input-date-height: var(--input-date-height, 30px);\n/*\nBackground color of the date input field.","type":"color","chainValues":["2"]},{"name":"--input-date-error-logo-size","documentation":"\nHeight of the date input field.\n/\n--_input-date-height: var(--input-date-height, 30px);\n/*\nBackground color of the date input field.","type":"color","chainValues":["2"]},{"name":"--input-date-font-size","documentation":"\nHeight of the date input field.\n/\n--_input-date-height: var(--input-date-height, 30px);\n/*\nBackground color of the date input field.","type":"color","chainValues":["--form-element-font-size","16px"]},{"name":"--input-date-font-size-label","documentation":"\nHeight of the date input field.\n/\n--_input-date-height: var(--input-date-height, 30px);\n/*\nBackground color of the date input field.","type":"color","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--input-date-input-border","documentation":"\nHeight of the date input field.\n/\n--_input-date-height: var(--input-date-height, 30px);\n/*\nBackground color of the date input field.","type":"color","chainValues":["--form-element-border","--lighter-active"]},{"name":"--input-date-border-radius","documentation":"\nHeight of the date input field.\n/\n--_input-date-height: var(--input-date-height, 30px);\n/*\nBackground color of the date input field.","type":"color","chainValues":["--form-element-border-radius","0"]}],"rk-input-file":[],"rk-input-number":[{"name":"--input-number-height","chainValues":["30px"]},{"name":"--input-number-background-color","chainValues":["--form-element-background","white"]},{"name":"--input-number-icon-height","chainValues":["2"]},{"name":"--input-number-error-logo-size","chainValues":["2"]},{"name":"--input-number-font-size","chainValues":["--form-element-font-size","16px"]},{"name":"--input-number-font-size-label","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--input-number-input-border","chainValues":["--form-element-border","--lighter-active"]},{"name":"--input-number-border-radius","chainValues":["--form-element-border-radius","0"]},{"name":"--input-number-unit-background-color","chainValues":["--secondary-color"]},{"name":"--input-number-unit-color","chainValues":["--text-color-secondary"]},{"name":"--input-number-readonly-background-color","chainValues":["--form-element-background-readonly","--_input-number-background-color"]},{"name":"--input-number-readonly-border","chainValues":["--form-element-border-readonly","--_input-number-input-border"]}],"rk-password":[],"rk-generic-option":[{"name":"--option-font-size","chainValues":["--form-element-font-size","16px"]}],"rk-generic-select":[{"name":"--select-height","chainValues":["30px"]},{"name":"--select-background-color","chainValues":["--form-element-background","white"]},{"name":"--select-icon-height","chainValues":["2"]},{"name":"--select-error-logo-size","chainValues":["2"]},{"name":"--select-font-size","chainValues":["--form-element-font-size","16px"]},{"name":"--select-font-size-label","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--select-select-border","chainValues":["--form-element-border","--lighter-active"]},{"name":"--generic-select-border-radius","chainValues":["--form-element-border-radius","0"]},{"name":"--select-caret-height","chainValues":["2"]},{"name":"--select-caret-color","chainValues":["--form-element-color"]}],"rk-options-container":[{"name":"--options-container-background","chainValues":["--form-element-background","white"]},{"name":"--options-container-border-radius","chainValues":["--form-element-border-radius","0"]},{"name":"--options-container-box-shadow","chainValues":["--elevation-2"]}],"rk-item-box-option":[],"rk-item-box-select":[{"name":"--item-box-box-width","chainValues":["auto"]},{"name":"--item-box-box-height","chainValues":["100%"]},{"name":"--item-box-box-padding","chainValues":["10px"]},{"name":"--item-box-border-radius","chainValues":["4px"]},{"name":"--item-box-border-color","chainValues":["--secondary-color","#afafaf"]},{"name":"--item-box-option-background-color-selected","chainValues":["--form-element-background-active","#afafaf"]},{"name":"--item-box-option-color-selected","chainValues":["--form-element-color-active","#fff"]}],"rk-option":[],"rk-select":[],"rk-option-data":[],"rk-select-data":[],"rk-option-enum":[],"rk-select-enum":[],"rk-two-columns-option":[],"rk-two-columns-select":[],"rk-two-columns-option-data":[],"rk-two-columns-select-data":[],"rk-slider":[{"name":"--slider-background-color","chainValues":["--form-element-background","white"]},{"name":"--slider-background-image","chainValues":["none"]},{"name":"--slider-background-position","chainValues":["0"]},{"name":"--slider-background-size","chainValues":["auto"]},{"name":"--slider-active-background-color","chainValues":["--secondary-color-active"]},{"name":"--slider-dot-color","chainValues":["--secondary-color"]},{"name":"--slider-dot-size","chainValues":["--form-element-font-size","16px"]},{"name":"--slider-popup-font-size","chainValues":["--font-size-sm"]},{"name":"--slider-font-size-label","chainValues":["--form-element-font-size-label"]},{"name":"--slider-border-radius","chainValues":["--form-element-border-radius"]},{"name":"--slider-bar-height","chainValues":["5px"]}],"rk-switch":[{"name":"--switch-background-color","chainValues":["--form-element-background","white"]},{"name":"--switch-dot-size","chainValues":["20px"]},{"name":"--switch-dot-color","chainValues":["--secondary-color"]},{"name":"--switch-active-dot-color","chainValues":["--secondary-color-active"]},{"name":"--switch-active-background-color","chainValues":["--secondary-color"]},{"name":"--switch-font-size","chainValues":["--form-element-font-size","16px"]},{"name":"--switch-font-size-label","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--switch-border-radius","chainValues":["10px"]}],"rk-textarea":[{"name":"--textarea-height","chainValues":["30px"]},{"name":"--textarea-background-color","chainValues":["--form-element-background","white"]},{"name":"--textarea-icon-height","chainValues":["2"]},{"name":"--textarea-error-logo-size","chainValues":["2"]},{"name":"--textarea-font-size","chainValues":["--form-element-font-size","16px"]},{"name":"--textarea-font-size-label","chainValues":["--form-element-font-size-label","0.95"]},{"name":"--textarea-input-border","chainValues":["--form-element-border","--lighter-active"]},{"name":"--textarea-border-radius","chainValues":["--form-element-border-radius","0"]},{"name":"--textarea-autogrow-max-height","chainValues":["none"]}],"rk-img":[{"name":"--img-color","documentation":"\nSet fill color and stroke color for svg img","type":"color"},{"name":"--img-stroke-color","documentation":"\nSet fill color and stroke color for svg img","type":"color","chainValues":["--_img-color"]},{"name":"--img-fill-color","documentation":"\nSet fill color and stroke color for svg img","type":"color","chainValues":["--_img-color"]},{"name":"--img-color-transition","chainValues":["none"]},{"name":"--img-stroke-width","chainValues":["1px"]}],"rk-box-container":[],"rk-item-box":[{"name":"--item-box-margin","chainValues":["0"]}],"rk-card":[{"name":"--card-background-color","chainValues":["white"]}],"rk-card-title":[],"rk-col":[{"name":"--col-padding","chainValues":["8px"]}],"rk-collapse":[{"name":"--collapse-width","chainValues":["100%"]}],"rk-button-icon-menu":[],"rk-menu":[],"rk-menu-item":[],"rk-menu-separator":[],"rk-page-case":[{"name":"--page-case-background","chainValues":["transparent"]},{"name":"--page-case-background-active","chainValues":["transparent"]},{"name":"--page-case-border-active","chainValues":["none"]},{"name":"--page-case-border-radius","chainValues":["0"]}],"rk-page-case-container":[],"rk-page-case-slot":[{"name":"--page-case-background","chainValues":["transparent"]},{"name":"--page-case-background-active","chainValues":["transparent"]},{"name":"--page-case-border-active","chainValues":["none"]},{"name":"--page-case-border-radius","chainValues":["0"]}],"rk-row":[],"rk-scrollable":[{"name":"--scrollbar-container-color","chainValues":["transparent"]},{"name":"--scrollbar-color","chainValues":["#757575"]},{"name":"--scrollbar-active-color","chainValues":["#858585"]},{"name":"--scrollbar-max-height","chainValues":["100%"]},{"name":"--scroller-width","chainValues":["6px"]},{"name":"--scroller-top","chainValues":["3px"]},{"name":"--scroller-bottom","chainValues":["3px"]},{"name":"--scroller-right","chainValues":["3px"]},{"name":"--scroller-left","chainValues":["3px"]},{"name":"--scrollbar-content-padding","chainValues":["0"]},{"name":"--scrollbar-container-display","chainValues":["inline-block"]}],"rk-separator":[{"name":"--separator-color","chainValues":["--text-color"]}],"rk-table-cell":[],"rk-table-cell-checkbox":[],"rk-table-cell-enum":[],"rk-table-cell-header":[],"rk-table-row":[],"rk-table-row-header":[],"rk-table":[{"name":"--table-background-color","chainValues":["--secondary-color"]},{"name":"--table-elevation","chainValues":["--elevation-2"]},{"name":"--table-row-header-height","chainValues":["50px"]},{"name":"--table-header-backgroud-color","chainValues":["--primary-color"]},{"name":"--table-header-color","chainValues":["--text-color-reverse"]},{"name":"--table-footer-backgroud-color","chainValues":["--primary-color"]},{"name":"--table-footer-color","chainValues":["--text-color-reverse"]},{"name":"--table-row-header-backgroud-color","chainValues":["--primary-color"]},{"name":"--table-row-header-color","chainValues":["--text-color-reverse"]},{"name":"--table-border-color","chainValues":["--secondary-color"]},{"name":"--table-row-header-vertical-border","chainValues":["--_table-border-color"]},{"name":"--table-row-header-horizontal-border","chainValues":["--_table-border-color"]},{"name":"--table-cell-vertical-border","chainValues":["--_table-border-color"]},{"name":"--table-cell-padding","chainValues":["10px"]}],"rk-table-data":[],"rk-table-data-cell-action":[],"rk-table-data-cell-header-action":[],"rk-table-row-data":[],"rk-tab":[],"rk-tab-header":[],"rk-tabs":[{"name":"--tabs-background-color","chainValues":["#ffffff"]},{"name":"--tabs-header-background-color","chainValues":["--darker-active","125"]},{"name":"--tabs-header-background-color-active","chainValues":["--_tabs-background-color"]},{"name":"--tabs-header-padding","chainValues":["10px"]},{"name":"--tabs-header-font-size","chainValues":["0.855"]},{"name":"--tabs-body-padding","chainValues":["10px"]},{"name":"--tabs-spacing","chainValues":["5px"]},{"name":"--tabs-transition","chainValues":["0.2s"]},{"name":"--tabs-border-radius","chainValues":["--border-radius-sm","0"]}],"rk-link":[],"rk-alert":[],"rk-confirm":[],"rk-generic-popup":[{"name":"--popup-background-color","chainValues":["--application-background-color","--primary-color-opacity"]},{"name":"--popup-border-radius","chainValues":["--application-border-radius","10px"]},{"name":"--popup-header-background-color","chainValues":["--application-header-background-color","--darker-active"]},{"name":"--popup-content-padding","chainValues":["15px"]}],"rk-notification":[{"name":"--notification-box-shadow"},{"name":"--notification-logo-fill-color","chainValues":["--text-color"]},{"name":"--notification-logo-stroke-color","chainValues":["transparent"]},{"name":"--notification-margin-bottom","chainValues":["20px"]},{"name":"--notification-margin-top","chainValues":["20px"]},{"name":"--notification-margin-right","chainValues":["10px"]},{"name":"--notification-margin-left","chainValues":["10px"]}],"rk-notification-manager":[],"rk-popup":[],"rk-popup-form":[],"rk-popup-form-storable":[],"rk-tooltip":[{"name":"--tooltip-background-color","chainValues":["--primary-color"]},{"name":"--tooltip-elevation","chainValues":["--elevation-4"]},{"name":"--tooltip-color","chainValues":["--text-color"]}],"rk-resize":[{"name":"--resize-z-index","chainValues":["1"]}],"rk-user-profil-picture":[],"rk-inline-text":[]}
//#endregion css def //
//#region css //
{"@default":":host{--img-fill-color: var(--text-color);box-sizing:border-box;display:inline-block;font-family:var(--font-family);-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none}:host .primary{background-color:var(--primary);color:var(--text-color-primary)}:host .text-primary{color:var(--primary)}:host .secondary{background-color:var(--secondary);color:var(--text-color-secondary)}:host .text-secondary{color:var(--secondary)}:host .green{background-color:var(--green);color:var(--text-color-green)}:host .text-green{color:var(--green)}:host .success{background-color:var(--success);color:var(--text-color-success)}:host .text-success{color:var(--success)}:host .red{background-color:var(--red);color:var(--text-color-red)}:host .text-red{color:var(--red)}:host .error{background-color:var(--error);color:var(--text-color-error)}:host .text-error{color:var(--error)}:host .orange{background-color:var(--orange);color:var(--text-color-orange)}:host .text-orange{color:var(--orange)}:host .warning{background-color:var(--warning);color:var(--text-color-warning)}:host .text-warning{color:var(--warning)}:host .blue{background-color:var(--blue);color:var(--text-color-blue)}:host .text-blue{color:var(--blue)}:host .information{background-color:var(--information);color:var(--text-color-information)}:host .text-information{color:var(--information)}:host .touch{cursor:pointer}:host .touch.disable,:host .touch.disabled{cursor:default}:host input::placeholder{overflow:visible}:host input,:host textarea,:host .text-select{-webkit-user-select:text;-khtml-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}:host *{box-sizing:border-box;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none}"}
//#endregion css //
//#region html //
{"rk-user-profil-picture":{"class":"Core.Components.UserProfilPicture","name":"rk-user-profil-picture","description":"","attributes":{"uri":{"name":"uri","description":"","type":"string","values":[]}}},"rk-tab":{"class":"Core.Components.Tab","name":"rk-tab","description":"","attributes":{"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-table-cell-boolean":{"class":"Core.Components.TableCellBoolean","name":"rk-table-cell-boolean","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-separator":{"class":"Core.Components.Separator","name":"rk-separator","description":"","attributes":{}},"rk-row":{"class":"Core.Components.Row","name":"rk-row","description":"","attributes":{}},"rk-menu-separator":{"class":"Core.Components.MenuSeparator","name":"rk-menu-separator","description":"","attributes":{}},"rk-menu-item":{"class":"Core.Components.MenuItem","name":"rk-menu-item","description":"","attributes":{"icon":{"name":"icon","description":"","type":"string","values":[]}}},"rk-menu":{"class":"Core.Components.Menu","name":"rk-menu","description":"","attributes":{"edge_gap":{"name":"edge_gap","description":"","type":"number","values":[]},"position_gap":{"name":"position_gap","description":"","type":"number","values":[]},"position":{"name":"position","description":"","type":"string","values":[{"name":"bottom left","description":""},{"name":"bottom right","description":""},{"name":"top left","description":""},{"name":"top right","description":""},{"name":"left top","description":""},{"name":"left bottom","description":""},{"name":"right top","description":""},{"name":"right bottom","description":""}]}}},"rk-col":{"class":"Core.Components.Col","name":"rk-col","description":"","attributes":{"size":{"name":"size","description":"","type":"number","values":[]},"size_xs":{"name":"size_xs","description":"","type":"number","values":[]},"size_sm":{"name":"size_sm","description":"","type":"number","values":[]},"size_md":{"name":"size_md","description":"","type":"number","values":[]},"size_lg":{"name":"size_lg","description":"","type":"number","values":[]},"size_xl":{"name":"size_xl","description":"","type":"number","values":[]},"offset":{"name":"offset","description":"","type":"number","values":[]},"offset_xs":{"name":"offset_xs","description":"","type":"number","values":[]},"offset_sm":{"name":"offset_sm","description":"","type":"number","values":[]},"offset_md":{"name":"offset_md","description":"","type":"number","values":[]},"offset_lg":{"name":"offset_lg","description":"","type":"number","values":[]},"offset_xl":{"name":"offset_xl","description":"","type":"number","values":[]},"offset_right":{"name":"offset_right","description":"","type":"number","values":[]},"offset_right_xs":{"name":"offset_right_xs","description":"","type":"number","values":[]},"offset_right_sm":{"name":"offset_right_sm","description":"","type":"number","values":[]},"offset_right_md":{"name":"offset_right_md","description":"","type":"number","values":[]},"offset_right_lg":{"name":"offset_right_lg","description":"","type":"number","values":[]},"offset_right_xl":{"name":"offset_right_xl","description":"","type":"number","values":[]},"center":{"name":"center","description":"","type":"boolean","values":[]}}},"rk-card-title":{"class":"Core.Components.CardTitle","name":"rk-card-title","description":"","attributes":{}},"rk-card":{"class":"Core.Components.Card","name":"rk-card","description":"","attributes":{}},"rk-box-container":{"class":"Core.Components.BoxContainer","name":"rk-box-container","description":"","attributes":{"space":{"name":"space","description":"","type":"number","values":[]}}},"rk-item-box":{"class":"Core.Components.ItemBox","name":"rk-item-box","description":"","attributes":{}},"rk-options-container":{"class":"Core.Components.OptionsContainer","name":"rk-options-container","description":"","attributes":{}},"rk-input-file":{"class":"Core.Components.InputFile","name":"rk-input-file","description":"","attributes":{}},"rk-img":{"class":"Core.Components.Img","name":"rk-img","description":"","attributes":{"cache":{"name":"cache","description":"","type":"boolean","values":[]},"src":{"name":"src","description":"","type":"string","values":[]},"mode":{"name":"mode","description":"","type":"string","values":[{"name":"stretch","description":""},{"name":"contains","description":""},{"name":"cover","description":""}]}}},"rk-button-icon-mi":{"class":"Core.Components.ButtonIconMi","name":"rk-button-icon-mi","description":"","attributes":{"color":{"name":"color","description":"","type":"string","values":[]},"outline":{"name":"outline","description":"","type":"boolean","values":[]},"disabled":{"name":"disabled","description":"","type":"boolean","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[{"name":"10k","description":""},{"name":"10mp","description":""},{"name":"11mp","description":""},{"name":"123","description":""},{"name":"12mp","description":""},{"name":"13mp","description":""},{"name":"14mp","description":""},{"name":"15mp","description":""},{"name":"16mp","description":""},{"name":"17mp","description":""},{"name":"18_up_rating","description":""},{"name":"18mp","description":""},{"name":"19mp","description":""},{"name":"1k","description":""},{"name":"1k_plus","description":""},{"name":"1x_mobiledata","description":""},{"name":"20mp","description":""},{"name":"21mp","description":""},{"name":"22mp","description":""},{"name":"23mp","description":""},{"name":"24mp","description":""},{"name":"2k","description":""},{"name":"2k_plus","description":""},{"name":"2mp","description":""},{"name":"30fps","description":""},{"name":"30fps_select","description":""},{"name":"360","description":""},{"name":"3d_rotation","description":""},{"name":"3g_mobiledata","description":""},{"name":"3k","description":""},{"name":"3k_plus","description":""},{"name":"3mp","description":""},{"name":"3p","description":""},{"name":"4g_mobiledata","description":""},{"name":"4g_plus_mobiledata","description":""},{"name":"4k","description":""},{"name":"4k_plus","description":""},{"name":"4mp","description":""},{"name":"5g","description":""},{"name":"5k","description":""},{"name":"5k_plus","description":""},{"name":"5mp","description":""},{"name":"60fps","description":""},{"name":"60fps_select","description":""},{"name":"6_ft_apart","description":""},{"name":"6k","description":""},{"name":"6k_plus","description":""},{"name":"6mp","description":""},{"name":"7k","description":""},{"name":"7k_plus","description":""},{"name":"7mp","description":""},{"name":"8k","description":""},{"name":"8k_plus","description":""},{"name":"8mp","description":""},{"name":"9k","description":""},{"name":"9k_plus","description":""},{"name":"9mp","description":""},{"name":"abc","description":""},{"name":"ac_unit","description":""},{"name":"access_alarm","description":""},{"name":"access_alarms","description":""},{"name":"access_time","description":""},{"name":"access_time_filled","description":""},{"name":"accessibility","description":""},{"name":"accessibility_new","description":""},{"name":"accessible","description":""},{"name":"accessible_forward","description":""},{"name":"account_balance","description":""},{"name":"account_balance_wallet","description":""},{"name":"account_box","description":""},{"name":"account_circle","description":""},{"name":"account_tree","description":""},{"name":"ad_units","description":""},{"name":"adb","description":""},{"name":"add","description":""},{"name":"add_a_photo","description":""},{"name":"add_alarm","description":""},{"name":"add_alert","description":""},{"name":"add_box","description":""},{"name":"add_business","description":""},{"name":"add_card","description":""},{"name":"add_chart","description":""},{"name":"add_circle","description":""},{"name":"add_circle_outline","description":""},{"name":"add_comment","description":""},{"name":"add_home","description":""},{"name":"add_home_work","description":""},{"name":"add_ic_call","description":""},{"name":"add_link","description":""},{"name":"add_location","description":""},{"name":"add_location_alt","description":""},{"name":"add_moderator","description":""},{"name":"add_photo_alternate","description":""},{"name":"add_reaction","description":""},{"name":"add_road","description":""},{"name":"add_shopping_cart","description":""},{"name":"add_task","description":""},{"name":"add_to_drive","description":""},{"name":"add_to_home_screen","description":""},{"name":"add_to_photos","description":""},{"name":"add_to_queue","description":""},{"name":"addchart","description":""},{"name":"adf_scanner","description":""},{"name":"adjust","description":""},{"name":"admin_panel_settings","description":""},{"name":"ads_click","description":""},{"name":"agriculture","description":""},{"name":"air","description":""},{"name":"airline_seat_flat","description":""},{"name":"airline_seat_flat_angled","description":""},{"name":"airline_seat_individual_suite","description":""},{"name":"airline_seat_legroom_extra","description":""},{"name":"airline_seat_legroom_normal","description":""},{"name":"airline_seat_legroom_reduced","description":""},{"name":"airline_seat_recline_extra","description":""},{"name":"airline_seat_recline_normal","description":""},{"name":"airline_stops","description":""},{"name":"airlines","description":""},{"name":"airplane_ticket","description":""},{"name":"airplanemode_active","description":""},{"name":"airplanemode_inactive","description":""},{"name":"airplay","description":""},{"name":"airport_shuttle","description":""},{"name":"alarm","description":""},{"name":"alarm_add","description":""},{"name":"alarm_off","description":""},{"name":"alarm_on","description":""},{"name":"album","description":""},{"name":"align_horizontal_center","description":""},{"name":"align_horizontal_left","description":""},{"name":"align_horizontal_right","description":""},{"name":"align_vertical_bottom","description":""},{"name":"align_vertical_center","description":""},{"name":"align_vertical_top","description":""},{"name":"all_inbox","description":""},{"name":"all_inclusive","description":""},{"name":"all_out","description":""},{"name":"alt_route","description":""},{"name":"alternate_email","description":""},{"name":"analytics","description":""},{"name":"anchor","description":""},{"name":"android","description":""},{"name":"animation","description":""},{"name":"announcement","description":""},{"name":"aod","description":""},{"name":"apartment","description":""},{"name":"api","description":""},{"name":"app_blocking","description":""},{"name":"app_registration","description":""},{"name":"app_settings_alt","description":""},{"name":"app_shortcut","description":""},{"name":"approval","description":""},{"name":"apps","description":""},{"name":"apps_outage","description":""},{"name":"architecture","description":""},{"name":"archive","description":""},{"name":"area_chart","description":""},{"name":"arrow_back","description":""},{"name":"arrow_back_ios","description":""},{"name":"arrow_back_ios_new","description":""},{"name":"arrow_circle_down","description":""},{"name":"arrow_circle_left","description":""},{"name":"arrow_circle_right","description":""},{"name":"arrow_circle_up","description":""},{"name":"arrow_downward","description":""},{"name":"arrow_drop_down","description":""},{"name":"arrow_drop_down_circle","description":""},{"name":"arrow_drop_up","description":""},{"name":"arrow_forward","description":""},{"name":"arrow_forward_ios","description":""},{"name":"arrow_left","description":""},{"name":"arrow_outward","description":""},{"name":"arrow_right","description":""},{"name":"arrow_right_alt","description":""},{"name":"arrow_upward","description":""},{"name":"art_track","description":""},{"name":"article","description":""},{"name":"aspect_ratio","description":""},{"name":"assessment","description":""},{"name":"assignment","description":""},{"name":"assignment_ind","description":""},{"name":"assignment_late","description":""},{"name":"assignment_return","description":""},{"name":"assignment_returned","description":""},{"name":"assignment_turned_in","description":""},{"name":"assist_walker","description":""},{"name":"assistant","description":""},{"name":"assistant_direction","description":""},{"name":"assistant_photo","description":""},{"name":"assured_workload","description":""},{"name":"atm","description":""},{"name":"attach_email","description":""},{"name":"attach_file","description":""},{"name":"attach_money","description":""},{"name":"attachment","description":""},{"name":"attractions","description":""},{"name":"attribution","description":""},{"name":"audio_file","description":""},{"name":"audiotrack","description":""},{"name":"auto_awesome","description":""},{"name":"auto_awesome_mosaic","description":""},{"name":"auto_awesome_motion","description":""},{"name":"auto_delete","description":""},{"name":"auto_fix_high","description":""},{"name":"auto_fix_normal","description":""},{"name":"auto_fix_off","description":""},{"name":"auto_graph","description":""},{"name":"auto_mode","description":""},{"name":"auto_stories","description":""},{"name":"autofps_select","description":""},{"name":"autorenew","description":""},{"name":"av_timer","description":""},{"name":"baby_changing_station","description":""},{"name":"back_hand","description":""},{"name":"backpack","description":""},{"name":"backspace","description":""},{"name":"backup","description":""},{"name":"backup_table","description":""},{"name":"badge","description":""},{"name":"bakery_dining","description":""},{"name":"balance","description":""},{"name":"balcony","description":""},{"name":"ballot","description":""},{"name":"bar_chart","description":""},{"name":"batch_prediction","description":""},{"name":"bathroom","description":""},{"name":"bathtub","description":""},{"name":"battery_0_bar","description":""},{"name":"battery_1_bar","description":""},{"name":"battery_2_bar","description":""},{"name":"battery_3_bar","description":""},{"name":"battery_4_bar","description":""},{"name":"battery_5_bar","description":""},{"name":"battery_6_bar","description":""},{"name":"battery_alert","description":""},{"name":"battery_charging_full","description":""},{"name":"battery_full","description":""},{"name":"battery_saver","description":""},{"name":"battery_std","description":""},{"name":"battery_unknown","description":""},{"name":"beach_access","description":""},{"name":"bed","description":""},{"name":"bedroom_baby","description":""},{"name":"bedroom_child","description":""},{"name":"bedroom_parent","description":""},{"name":"bedtime","description":""},{"name":"bedtime_off","description":""},{"name":"beenhere","description":""},{"name":"bento","description":""},{"name":"bike_scooter","description":""},{"name":"biotech","description":""},{"name":"blender","description":""},{"name":"blind","description":""},{"name":"blinds","description":""},{"name":"blinds_closed","description":""},{"name":"block","description":""},{"name":"bloodtype","description":""},{"name":"bluetooth","description":""},{"name":"bluetooth_audio","description":""},{"name":"bluetooth_connected","description":""},{"name":"bluetooth_disabled","description":""},{"name":"bluetooth_drive","description":""},{"name":"bluetooth_searching","description":""},{"name":"blur_circular","description":""},{"name":"blur_linear","description":""},{"name":"blur_off","description":""},{"name":"blur_on","description":""},{"name":"bolt","description":""},{"name":"book","description":""},{"name":"book_online","description":""},{"name":"bookmark","description":""},{"name":"bookmark_add","description":""},{"name":"bookmark_added","description":""},{"name":"bookmark_border","description":""},{"name":"bookmark_remove","description":""},{"name":"bookmarks","description":""},{"name":"border_all","description":""},{"name":"border_bottom","description":""},{"name":"border_clear","description":""},{"name":"border_color","description":""},{"name":"border_horizontal","description":""},{"name":"border_inner","description":""},{"name":"border_left","description":""},{"name":"border_outer","description":""},{"name":"border_right","description":""},{"name":"border_style","description":""},{"name":"border_top","description":""},{"name":"border_vertical","description":""},{"name":"boy","description":""},{"name":"branding_watermark","description":""},{"name":"breakfast_dining","description":""},{"name":"brightness_1","description":""},{"name":"brightness_2","description":""},{"name":"brightness_3","description":""},{"name":"brightness_4","description":""},{"name":"brightness_5","description":""},{"name":"brightness_6","description":""},{"name":"brightness_7","description":""},{"name":"brightness_auto","description":""},{"name":"brightness_high","description":""},{"name":"brightness_low","description":""},{"name":"brightness_medium","description":""},{"name":"broadcast_on_home","description":""},{"name":"broadcast_on_personal","description":""},{"name":"broken_image","description":""},{"name":"browse_gallery","description":""},{"name":"browser_not_supported","description":""},{"name":"browser_updated","description":""},{"name":"brunch_dining","description":""},{"name":"brush","description":""},{"name":"bubble_chart","description":""},{"name":"bug_report","description":""},{"name":"build","description":""},{"name":"build_circle","description":""},{"name":"bungalow","description":""},{"name":"burst_mode","description":""},{"name":"bus_alert","description":""},{"name":"business","description":""},{"name":"business_center","description":""},{"name":"cabin","description":""},{"name":"cable","description":""},{"name":"cached","description":""},{"name":"cake","description":""},{"name":"calculate","description":""},{"name":"calendar_month","description":""},{"name":"calendar_today","description":""},{"name":"calendar_view_day","description":""},{"name":"calendar_view_month","description":""},{"name":"calendar_view_week","description":""},{"name":"call","description":""},{"name":"call_end","description":""},{"name":"call_made","description":""},{"name":"call_merge","description":""},{"name":"call_missed","description":""},{"name":"call_missed_outgoing","description":""},{"name":"call_received","description":""},{"name":"call_split","description":""},{"name":"call_to_action","description":""},{"name":"camera","description":""},{"name":"camera_alt","description":""},{"name":"camera_enhance","description":""},{"name":"camera_front","description":""},{"name":"camera_indoor","description":""},{"name":"camera_outdoor","description":""},{"name":"camera_rear","description":""},{"name":"camera_roll","description":""},{"name":"cameraswitch","description":""},{"name":"campaign","description":""},{"name":"cancel","description":""},{"name":"cancel_presentation","description":""},{"name":"cancel_schedule_send","description":""},{"name":"candlestick_chart","description":""},{"name":"car_crash","description":""},{"name":"car_rental","description":""},{"name":"car_repair","description":""},{"name":"card_giftcard","description":""},{"name":"card_membership","description":""},{"name":"card_travel","description":""},{"name":"carpenter","description":""},{"name":"cases","description":""},{"name":"casino","description":""},{"name":"cast","description":""},{"name":"cast_connected","description":""},{"name":"cast_for_education","description":""},{"name":"castle","description":""},{"name":"catching_pokemon","description":""},{"name":"category","description":""},{"name":"celebration","description":""},{"name":"cell_tower","description":""},{"name":"cell_wifi","description":""},{"name":"center_focus_strong","description":""},{"name":"center_focus_weak","description":""},{"name":"chair","description":""},{"name":"chair_alt","description":""},{"name":"chalet","description":""},{"name":"change_circle","description":""},{"name":"change_history","description":""},{"name":"charging_station","description":""},{"name":"chat","description":""},{"name":"chat_bubble","description":""},{"name":"chat_bubble_outline","description":""},{"name":"check","description":""},{"name":"check_box","description":""},{"name":"check_box_outline_blank","description":""},{"name":"check_circle","description":""},{"name":"check_circle_outline","description":""},{"name":"checklist","description":""},{"name":"checklist_rtl","description":""},{"name":"checkroom","description":""},{"name":"chevron_left","description":""},{"name":"chevron_right","description":""},{"name":"child_care","description":""},{"name":"child_friendly","description":""},{"name":"chrome_reader_mode","description":""},{"name":"church","description":""},{"name":"circle","description":""},{"name":"circle_notifications","description":""},{"name":"class","description":""},{"name":"clean_hands","description":""},{"name":"cleaning_services","description":""},{"name":"clear","description":""},{"name":"clear_all","description":""},{"name":"close","description":""},{"name":"close_fullscreen","description":""},{"name":"closed_caption","description":""},{"name":"closed_caption_disabled","description":""},{"name":"closed_caption_off","description":""},{"name":"cloud","description":""},{"name":"cloud_circle","description":""},{"name":"cloud_done","description":""},{"name":"cloud_download","description":""},{"name":"cloud_off","description":""},{"name":"cloud_queue","description":""},{"name":"cloud_sync","description":""},{"name":"cloud_upload","description":""},{"name":"co2","description":""},{"name":"co_present","description":""},{"name":"code","description":""},{"name":"code_off","description":""},{"name":"coffee","description":""},{"name":"coffee_maker","description":""},{"name":"collections","description":""},{"name":"collections_bookmark","description":""},{"name":"color_lens","description":""},{"name":"colorize","description":""},{"name":"comment","description":""},{"name":"comment_bank","description":""},{"name":"comments_disabled","description":""},{"name":"commit","description":""},{"name":"commute","description":""},{"name":"compare","description":""},{"name":"compare_arrows","description":""},{"name":"compass_calibration","description":""},{"name":"compost","description":""},{"name":"compress","description":""},{"name":"computer","description":""},{"name":"confirmation_number","description":""},{"name":"connect_without_contact","description":""},{"name":"connected_tv","description":""},{"name":"connecting_airports","description":""},{"name":"construction","description":""},{"name":"contact_emergency","description":""},{"name":"contact_mail","description":""},{"name":"contact_page","description":""},{"name":"contact_phone","description":""},{"name":"contact_support","description":""},{"name":"contactless","description":""},{"name":"contacts","description":""},{"name":"content_copy","description":""},{"name":"content_cut","description":""},{"name":"content_paste","description":""},{"name":"content_paste_go","description":""},{"name":"content_paste_off","description":""},{"name":"content_paste_search","description":""},{"name":"contrast","description":""},{"name":"control_camera","description":""},{"name":"control_point","description":""},{"name":"control_point_duplicate","description":""},{"name":"cookie","description":""},{"name":"copy_all","description":""},{"name":"copyright","description":""},{"name":"coronavirus","description":""},{"name":"corporate_fare","description":""},{"name":"cottage","description":""},{"name":"countertops","description":""},{"name":"create","description":""},{"name":"create_new_folder","description":""},{"name":"credit_card","description":""},{"name":"credit_card_off","description":""},{"name":"credit_score","description":""},{"name":"crib","description":""},{"name":"crisis_alert","description":""},{"name":"crop","description":""},{"name":"crop_16_9","description":""},{"name":"crop_3_2","description":""},{"name":"crop_5_4","description":""},{"name":"crop_7_5","description":""},{"name":"crop_din","description":""},{"name":"crop_free","description":""},{"name":"crop_landscape","description":""},{"name":"crop_original","description":""},{"name":"crop_portrait","description":""},{"name":"crop_rotate","description":""},{"name":"crop_square","description":""},{"name":"cruelty_free","description":""},{"name":"css","description":""},{"name":"currency_bitcoin","description":""},{"name":"currency_exchange","description":""},{"name":"currency_franc","description":""},{"name":"currency_lira","description":""},{"name":"currency_pound","description":""},{"name":"currency_ruble","description":""},{"name":"currency_rupee","description":""},{"name":"currency_yen","description":""},{"name":"currency_yuan","description":""},{"name":"curtains","description":""},{"name":"curtains_closed","description":""},{"name":"cyclone","description":""},{"name":"dangerous","description":""},{"name":"dark_mode","description":""},{"name":"dashboard","description":""},{"name":"dashboard_customize","description":""},{"name":"data_array","description":""},{"name":"data_exploration","description":""},{"name":"data_object","description":""},{"name":"data_saver_off","description":""},{"name":"data_saver_on","description":""},{"name":"data_thresholding","description":""},{"name":"data_usage","description":""},{"name":"dataset","description":""},{"name":"dataset_linked","description":""},{"name":"date_range","description":""},{"name":"deblur","description":""},{"name":"deck","description":""},{"name":"dehaze","description":""},{"name":"delete","description":""},{"name":"delete_forever","description":""},{"name":"delete_outline","description":""},{"name":"delete_sweep","description":""},{"name":"delivery_dining","description":""},{"name":"density_large","description":""},{"name":"density_medium","description":""},{"name":"density_small","description":""},{"name":"departure_board","description":""},{"name":"description","description":""},{"name":"deselect","description":""},{"name":"design_services","description":""},{"name":"desk","description":""},{"name":"desktop_access_disabled","description":""},{"name":"desktop_mac","description":""},{"name":"desktop_windows","description":""},{"name":"details","description":""},{"name":"developer_board","description":""},{"name":"developer_board_off","description":""},{"name":"developer_mode","description":""},{"name":"device_hub","description":""},{"name":"device_thermostat","description":""},{"name":"device_unknown","description":""},{"name":"devices","description":""},{"name":"devices_fold","description":""},{"name":"devices_other","description":""},{"name":"dialer_sip","description":""},{"name":"dialpad","description":""},{"name":"diamond","description":""},{"name":"difference","description":""},{"name":"dining","description":""},{"name":"dinner_dining","description":""},{"name":"directions","description":""},{"name":"directions_bike","description":""},{"name":"directions_boat","description":""},{"name":"directions_boat_filled","description":""},{"name":"directions_bus","description":""},{"name":"directions_bus_filled","description":""},{"name":"directions_car","description":""},{"name":"directions_car_filled","description":""},{"name":"directions_off","description":""},{"name":"directions_railway","description":""},{"name":"directions_railway_filled","description":""},{"name":"directions_run","description":""},{"name":"directions_subway","description":""},{"name":"directions_subway_filled","description":""},{"name":"directions_transit","description":""},{"name":"directions_transit_filled","description":""},{"name":"directions_walk","description":""},{"name":"dirty_lens","description":""},{"name":"disabled_by_default","description":""},{"name":"disabled_visible","description":""},{"name":"disc_full","description":""},{"name":"discount","description":""},{"name":"display_settings","description":""},{"name":"diversity_1","description":""},{"name":"diversity_2","description":""},{"name":"diversity_3","description":""},{"name":"dns","description":""},{"name":"do_disturb","description":""},{"name":"do_disturb_alt","description":""},{"name":"do_disturb_off","description":""},{"name":"do_disturb_on","description":""},{"name":"do_not_disturb","description":""},{"name":"do_not_disturb_alt","description":""},{"name":"do_not_disturb_off","description":""},{"name":"do_not_disturb_on","description":""},{"name":"do_not_disturb_on_total_silence","description":""},{"name":"do_not_step","description":""},{"name":"do_not_touch","description":""},{"name":"dock","description":""},{"name":"document_scanner","description":""},{"name":"domain","description":""},{"name":"domain_add","description":""},{"name":"domain_disabled","description":""},{"name":"domain_verification","description":""},{"name":"done","description":""},{"name":"done_all","description":""},{"name":"done_outline","description":""},{"name":"donut_large","description":""},{"name":"donut_small","description":""},{"name":"door_back","description":""},{"name":"door_front","description":""},{"name":"door_sliding","description":""},{"name":"doorbell","description":""},{"name":"double_arrow","description":""},{"name":"downhill_skiing","description":""},{"name":"download","description":""},{"name":"download_done","description":""},{"name":"download_for_offline","description":""},{"name":"downloading","description":""},{"name":"drafts","description":""},{"name":"drag_handle","description":""},{"name":"drag_indicator","description":""},{"name":"draw","description":""},{"name":"drive_eta","description":""},{"name":"drive_file_move","description":""},{"name":"drive_file_move_rtl","description":""},{"name":"drive_file_rename_outline","description":""},{"name":"drive_folder_upload","description":""},{"name":"dry","description":""},{"name":"dry_cleaning","description":""},{"name":"duo","description":""},{"name":"dvr","description":""},{"name":"dynamic_feed","description":""},{"name":"dynamic_form","description":""},{"name":"e_mobiledata","description":""},{"name":"earbuds","description":""},{"name":"earbuds_battery","description":""},{"name":"east","description":""},{"name":"edgesensor_high","description":""},{"name":"edgesensor_low","description":""},{"name":"edit","description":""},{"name":"edit_attributes","description":""},{"name":"edit_calendar","description":""},{"name":"edit_location","description":""},{"name":"edit_location_alt","description":""},{"name":"edit_note","description":""},{"name":"edit_notifications","description":""},{"name":"edit_off","description":""},{"name":"edit_road","description":""},{"name":"egg","description":""},{"name":"egg_alt","description":""},{"name":"eject","description":""},{"name":"elderly","description":""},{"name":"elderly_woman","description":""},{"name":"electric_bike","description":""},{"name":"electric_bolt","description":""},{"name":"electric_car","description":""},{"name":"electric_meter","description":""},{"name":"electric_moped","description":""},{"name":"electric_rickshaw","description":""},{"name":"electric_scooter","description":""},{"name":"electrical_services","description":""},{"name":"elevator","description":""},{"name":"email","description":""},{"name":"emergency","description":""},{"name":"emergency_recording","description":""},{"name":"emergency_share","description":""},{"name":"emoji_emotions","description":""},{"name":"emoji_events","description":""},{"name":"emoji_food_beverage","description":""},{"name":"emoji_nature","description":""},{"name":"emoji_objects","description":""},{"name":"emoji_people","description":""},{"name":"emoji_symbols","description":""},{"name":"emoji_transportation","description":""},{"name":"energy_savings_leaf","description":""},{"name":"engineering","description":""},{"name":"enhanced_encryption","description":""},{"name":"equalizer","description":""},{"name":"error","description":""},{"name":"error_outline","description":""},{"name":"escalator","description":""},{"name":"escalator_warning","description":""},{"name":"euro","description":""},{"name":"euro_symbol","description":""},{"name":"ev_station","description":""},{"name":"event","description":""},{"name":"event_available","description":""},{"name":"event_busy","description":""},{"name":"event_note","description":""},{"name":"event_repeat","description":""},{"name":"event_seat","description":""},{"name":"exit_to_app","description":""},{"name":"expand","description":""},{"name":"expand_circle_down","description":""},{"name":"expand_less","description":""},{"name":"expand_more","description":""},{"name":"explicit","description":""},{"name":"explore","description":""},{"name":"explore_off","description":""},{"name":"exposure","description":""},{"name":"exposure_neg_1","description":""},{"name":"exposure_neg_2","description":""},{"name":"exposure_plus_1","description":""},{"name":"exposure_plus_2","description":""},{"name":"exposure_zero","description":""},{"name":"extension","description":""},{"name":"extension_off","description":""},{"name":"face","description":""},{"name":"face_2","description":""},{"name":"face_3","description":""},{"name":"face_4","description":""},{"name":"face_5","description":""},{"name":"face_6","description":""},{"name":"face_retouching_natural","description":""},{"name":"face_retouching_off","description":""},{"name":"fact_check","description":""},{"name":"factory","description":""},{"name":"family_restroom","description":""},{"name":"fast_forward","description":""},{"name":"fast_rewind","description":""},{"name":"fastfood","description":""},{"name":"favorite","description":""},{"name":"favorite_border","description":""},{"name":"fax","description":""},{"name":"featured_play_list","description":""},{"name":"featured_video","description":""},{"name":"feed","description":""},{"name":"feedback","description":""},{"name":"female","description":""},{"name":"fence","description":""},{"name":"festival","description":""},{"name":"fiber_dvr","description":""},{"name":"fiber_manual_record","description":""},{"name":"fiber_new","description":""},{"name":"fiber_pin","description":""},{"name":"fiber_smart_record","description":""},{"name":"file_copy","description":""},{"name":"file_download","description":""},{"name":"file_download_done","description":""},{"name":"file_download_off","description":""},{"name":"file_open","description":""},{"name":"file_present","description":""},{"name":"file_upload","description":""},{"name":"filter","description":""},{"name":"filter_1","description":""},{"name":"filter_2","description":""},{"name":"filter_3","description":""},{"name":"filter_4","description":""},{"name":"filter_5","description":""},{"name":"filter_6","description":""},{"name":"filter_7","description":""},{"name":"filter_8","description":""},{"name":"filter_9","description":""},{"name":"filter_9_plus","description":""},{"name":"filter_alt","description":""},{"name":"filter_alt_off","description":""},{"name":"filter_b_and_w","description":""},{"name":"filter_center_focus","description":""},{"name":"filter_drama","description":""},{"name":"filter_frames","description":""},{"name":"filter_hdr","description":""},{"name":"filter_list","description":""},{"name":"filter_list_off","description":""},{"name":"filter_none","description":""},{"name":"filter_tilt_shift","description":""},{"name":"filter_vintage","description":""},{"name":"find_in_page","description":""},{"name":"find_replace","description":""},{"name":"fingerprint","description":""},{"name":"fire_extinguisher","description":""},{"name":"fire_hydrant_alt","description":""},{"name":"fire_truck","description":""},{"name":"fireplace","description":""},{"name":"first_page","description":""},{"name":"fit_screen","description":""},{"name":"fitbit","description":""},{"name":"fitness_center","description":""},{"name":"flag","description":""},{"name":"flag_circle","description":""},{"name":"flaky","description":""},{"name":"flare","description":""},{"name":"flash_auto","description":""},{"name":"flash_off","description":""},{"name":"flash_on","description":""},{"name":"flashlight_off","description":""},{"name":"flashlight_on","description":""},{"name":"flatware","description":""},{"name":"flight","description":""},{"name":"flight_class","description":""},{"name":"flight_land","description":""},{"name":"flight_takeoff","description":""},{"name":"flip","description":""},{"name":"flip_camera_android","description":""},{"name":"flip_camera_ios","description":""},{"name":"flip_to_back","description":""},{"name":"flip_to_front","description":""},{"name":"flood","description":""},{"name":"fluorescent","description":""},{"name":"flutter_dash","description":""},{"name":"fmd_bad","description":""},{"name":"fmd_good","description":""},{"name":"folder","description":""},{"name":"folder_copy","description":""},{"name":"folder_delete","description":""},{"name":"folder_off","description":""},{"name":"folder_open","description":""},{"name":"folder_shared","description":""},{"name":"folder_special","description":""},{"name":"folder_zip","description":""},{"name":"follow_the_signs","description":""},{"name":"font_download","description":""},{"name":"font_download_off","description":""},{"name":"food_bank","description":""},{"name":"forest","description":""},{"name":"fork_left","description":""},{"name":"fork_right","description":""},{"name":"format_align_center","description":""},{"name":"format_align_justify","description":""},{"name":"format_align_left","description":""},{"name":"format_align_right","description":""},{"name":"format_bold","description":""},{"name":"format_clear","description":""},{"name":"format_color_fill","description":""},{"name":"format_color_reset","description":""},{"name":"format_color_text","description":""},{"name":"format_indent_decrease","description":""},{"name":"format_indent_increase","description":""},{"name":"format_italic","description":""},{"name":"format_line_spacing","description":""},{"name":"format_list_bulleted","description":""},{"name":"format_list_numbered","description":""},{"name":"format_list_numbered_rtl","description":""},{"name":"format_overline","description":""},{"name":"format_paint","description":""},{"name":"format_quote","description":""},{"name":"format_shapes","description":""},{"name":"format_size","description":""},{"name":"format_strikethrough","description":""},{"name":"format_textdirection_l_to_r","description":""},{"name":"format_textdirection_r_to_l","description":""},{"name":"format_underlined","description":""},{"name":"fort","description":""},{"name":"forum","description":""},{"name":"forward","description":""},{"name":"forward_10","description":""},{"name":"forward_30","description":""},{"name":"forward_5","description":""},{"name":"forward_to_inbox","description":""},{"name":"foundation","description":""},{"name":"free_breakfast","description":""},{"name":"free_cancellation","description":""},{"name":"front_hand","description":""},{"name":"fullscreen","description":""},{"name":"fullscreen_exit","description":""},{"name":"functions","description":""},{"name":"g_mobiledata","description":""},{"name":"g_translate","description":""},{"name":"gamepad","description":""},{"name":"games","description":""},{"name":"garage","description":""},{"name":"gas_meter","description":""},{"name":"gavel","description":""},{"name":"generating_tokens","description":""},{"name":"gesture","description":""},{"name":"get_app","description":""},{"name":"gif","description":""},{"name":"gif_box","description":""},{"name":"girl","description":""},{"name":"gite","description":""},{"name":"golf_course","description":""},{"name":"gpp_bad","description":""},{"name":"gpp_good","description":""},{"name":"gpp_maybe","description":""},{"name":"gps_fixed","description":""},{"name":"gps_not_fixed","description":""},{"name":"gps_off","description":""},{"name":"grade","description":""},{"name":"gradient","description":""},{"name":"grading","description":""},{"name":"grain","description":""},{"name":"graphic_eq","description":""},{"name":"grass","description":""},{"name":"grid_3x3","description":""},{"name":"grid_4x4","description":""},{"name":"grid_goldenratio","description":""},{"name":"grid_off","description":""},{"name":"grid_on","description":""},{"name":"grid_view","description":""},{"name":"group","description":""},{"name":"group_add","description":""},{"name":"group_off","description":""},{"name":"group_remove","description":""},{"name":"group_work","description":""},{"name":"groups","description":""},{"name":"groups_2","description":""},{"name":"groups_3","description":""},{"name":"h_mobiledata","description":""},{"name":"h_plus_mobiledata","description":""},{"name":"hail","description":""},{"name":"handshake","description":""},{"name":"handyman","description":""},{"name":"hardware","description":""},{"name":"hd","description":""},{"name":"hdr_auto","description":""},{"name":"hdr_auto_select","description":""},{"name":"hdr_enhanced_select","description":""},{"name":"hdr_off","description":""},{"name":"hdr_off_select","description":""},{"name":"hdr_on","description":""},{"name":"hdr_on_select","description":""},{"name":"hdr_plus","description":""},{"name":"hdr_strong","description":""},{"name":"hdr_weak","description":""},{"name":"headphones","description":""},{"name":"headphones_battery","description":""},{"name":"headset","description":""},{"name":"headset_mic","description":""},{"name":"headset_off","description":""},{"name":"healing","description":""},{"name":"health_and_safety","description":""},{"name":"hearing","description":""},{"name":"hearing_disabled","description":""},{"name":"heart_broken","description":""},{"name":"heat_pump","description":""},{"name":"height","description":""},{"name":"help","description":""},{"name":"help_center","description":""},{"name":"help_outline","description":""},{"name":"hevc","description":""},{"name":"hexagon","description":""},{"name":"hide_image","description":""},{"name":"hide_source","description":""},{"name":"high_quality","description":""},{"name":"highlight","description":""},{"name":"highlight_alt","description":""},{"name":"highlight_off","description":""},{"name":"hiking","description":""},{"name":"history","description":""},{"name":"history_edu","description":""},{"name":"history_toggle_off","description":""},{"name":"hive","description":""},{"name":"hls","description":""},{"name":"hls_off","description":""},{"name":"holiday_village","description":""},{"name":"home","description":""},{"name":"home_max","description":""},{"name":"home_mini","description":""},{"name":"home_repair_service","description":""},{"name":"home_work","description":""},{"name":"horizontal_distribute","description":""},{"name":"horizontal_rule","description":""},{"name":"horizontal_split","description":""},{"name":"hot_tub","description":""},{"name":"hotel","description":""},{"name":"hotel_class","description":""},{"name":"hourglass_bottom","description":""},{"name":"hourglass_disabled","description":""},{"name":"hourglass_empty","description":""},{"name":"hourglass_full","description":""},{"name":"hourglass_top","description":""},{"name":"house","description":""},{"name":"house_siding","description":""},{"name":"houseboat","description":""},{"name":"how_to_reg","description":""},{"name":"how_to_vote","description":""},{"name":"html","description":""},{"name":"http","description":""},{"name":"https","description":""},{"name":"hub","description":""},{"name":"hvac","description":""},{"name":"ice_skating","description":""},{"name":"icecream","description":""},{"name":"image","description":""},{"name":"image_aspect_ratio","description":""},{"name":"image_not_supported","description":""},{"name":"image_search","description":""},{"name":"imagesearch_roller","description":""},{"name":"import_contacts","description":""},{"name":"import_export","description":""},{"name":"important_devices","description":""},{"name":"inbox","description":""},{"name":"incomplete_circle","description":""},{"name":"indeterminate_check_box","description":""},{"name":"info","description":""},{"name":"input","description":""},{"name":"insert_chart","description":""},{"name":"insert_chart_outlined","description":""},{"name":"insert_comment","description":""},{"name":"insert_drive_file","description":""},{"name":"insert_emoticon","description":""},{"name":"insert_invitation","description":""},{"name":"insert_link","description":""},{"name":"insert_page_break","description":""},{"name":"insert_photo","description":""},{"name":"insights","description":""},{"name":"install_desktop","description":""},{"name":"install_mobile","description":""},{"name":"integration_instructions","description":""},{"name":"interests","description":""},{"name":"interpreter_mode","description":""},{"name":"inventory","description":""},{"name":"inventory_2","description":""},{"name":"invert_colors","description":""},{"name":"invert_colors_off","description":""},{"name":"ios_share","description":""},{"name":"iron","description":""},{"name":"iso","description":""},{"name":"javascript","description":""},{"name":"join_full","description":""},{"name":"join_inner","description":""},{"name":"join_left","description":""},{"name":"join_right","description":""},{"name":"kayaking","description":""},{"name":"kebab_dining","description":""},{"name":"key","description":""},{"name":"key_off","description":""},{"name":"keyboard","description":""},{"name":"keyboard_alt","description":""},{"name":"keyboard_arrow_down","description":""},{"name":"keyboard_arrow_left","description":""},{"name":"keyboard_arrow_right","description":""},{"name":"keyboard_arrow_up","description":""},{"name":"keyboard_backspace","description":""},{"name":"keyboard_capslock","description":""},{"name":"keyboard_command_key","description":""},{"name":"keyboard_control_key","description":""},{"name":"keyboard_double_arrow_down","description":""},{"name":"keyboard_double_arrow_left","description":""},{"name":"keyboard_double_arrow_right","description":""},{"name":"keyboard_double_arrow_up","description":""},{"name":"keyboard_hide","description":""},{"name":"keyboard_option_key","description":""},{"name":"keyboard_return","description":""},{"name":"keyboard_tab","description":""},{"name":"keyboard_voice","description":""},{"name":"king_bed","description":""},{"name":"kitchen","description":""},{"name":"kitesurfing","description":""},{"name":"label","description":""},{"name":"label_important","description":""},{"name":"label_off","description":""},{"name":"lan","description":""},{"name":"landscape","description":""},{"name":"landslide","description":""},{"name":"language","description":""},{"name":"laptop","description":""},{"name":"laptop_chromebook","description":""},{"name":"laptop_mac","description":""},{"name":"laptop_windows","description":""},{"name":"last_page","description":""},{"name":"launch","description":""},{"name":"layers","description":""},{"name":"layers_clear","description":""},{"name":"leaderboard","description":""},{"name":"leak_add","description":""},{"name":"leak_remove","description":""},{"name":"legend_toggle","description":""},{"name":"lens","description":""},{"name":"lens_blur","description":""},{"name":"library_add","description":""},{"name":"library_add_check","description":""},{"name":"library_books","description":""},{"name":"library_music","description":""},{"name":"light","description":""},{"name":"light_mode","description":""},{"name":"lightbulb","description":""},{"name":"lightbulb_circle","description":""},{"name":"line_axis","description":""},{"name":"line_style","description":""},{"name":"line_weight","description":""},{"name":"linear_scale","description":""},{"name":"link","description":""},{"name":"link_off","description":""},{"name":"linked_camera","description":""},{"name":"liquor","description":""},{"name":"list","description":""},{"name":"list_alt","description":""},{"name":"live_help","description":""},{"name":"live_tv","description":""},{"name":"living","description":""},{"name":"local_activity","description":""},{"name":"local_airport","description":""},{"name":"local_atm","description":""},{"name":"local_bar","description":""},{"name":"local_cafe","description":""},{"name":"local_car_wash","description":""},{"name":"local_convenience_store","description":""},{"name":"local_dining","description":""},{"name":"local_drink","description":""},{"name":"local_fire_department","description":""},{"name":"local_florist","description":""},{"name":"local_gas_station","description":""},{"name":"local_grocery_store","description":""},{"name":"local_hospital","description":""},{"name":"local_hotel","description":""},{"name":"local_laundry_service","description":""},{"name":"local_library","description":""},{"name":"local_mall","description":""},{"name":"local_movies","description":""},{"name":"local_offer","description":""},{"name":"local_parking","description":""},{"name":"local_pharmacy","description":""},{"name":"local_phone","description":""},{"name":"local_pizza","description":""},{"name":"local_play","description":""},{"name":"local_police","description":""},{"name":"local_post_office","description":""},{"name":"local_printshop","description":""},{"name":"local_see","description":""},{"name":"local_shipping","description":""},{"name":"local_taxi","description":""},{"name":"location_city","description":""},{"name":"location_disabled","description":""},{"name":"location_off","description":""},{"name":"location_on","description":""},{"name":"location_searching","description":""},{"name":"lock","description":""},{"name":"lock_clock","description":""},{"name":"lock_open","description":""},{"name":"lock_person","description":""},{"name":"lock_reset","description":""},{"name":"login","description":""},{"name":"logo_dev","description":""},{"name":"logout","description":""},{"name":"looks","description":""},{"name":"looks_3","description":""},{"name":"looks_4","description":""},{"name":"looks_5","description":""},{"name":"looks_6","description":""},{"name":"looks_one","description":""},{"name":"looks_two","description":""},{"name":"loop","description":""},{"name":"loupe","description":""},{"name":"low_priority","description":""},{"name":"loyalty","description":""},{"name":"lte_mobiledata","description":""},{"name":"lte_plus_mobiledata","description":""},{"name":"luggage","description":""},{"name":"lunch_dining","description":""},{"name":"lyrics","description":""},{"name":"macro_off","description":""},{"name":"mail","description":""},{"name":"mail_lock","description":""},{"name":"mail_outline","description":""},{"name":"male","description":""},{"name":"man","description":""},{"name":"man_2","description":""},{"name":"man_3","description":""},{"name":"man_4","description":""},{"name":"manage_accounts","description":""},{"name":"manage_history","description":""},{"name":"manage_search","description":""},{"name":"map","description":""},{"name":"maps_home_work","description":""},{"name":"maps_ugc","description":""},{"name":"margin","description":""},{"name":"mark_as_unread","description":""},{"name":"mark_chat_read","description":""},{"name":"mark_chat_unread","description":""},{"name":"mark_email_read","description":""},{"name":"mark_email_unread","description":""},{"name":"mark_unread_chat_alt","description":""},{"name":"markunread","description":""},{"name":"markunread_mailbox","description":""},{"name":"masks","description":""},{"name":"maximize","description":""},{"name":"media_bluetooth_off","description":""},{"name":"media_bluetooth_on","description":""},{"name":"mediation","description":""},{"name":"medical_information","description":""},{"name":"medical_services","description":""},{"name":"medication","description":""},{"name":"medication_liquid","description":""},{"name":"meeting_room","description":""},{"name":"memory","description":""},{"name":"menu","description":""},{"name":"menu_book","description":""},{"name":"menu_open","description":""},{"name":"merge","description":""},{"name":"merge_type","description":""},{"name":"message","description":""},{"name":"mic","description":""},{"name":"mic_external_off","description":""},{"name":"mic_external_on","description":""},{"name":"mic_none","description":""},{"name":"mic_off","description":""},{"name":"microwave","description":""},{"name":"military_tech","description":""},{"name":"minimize","description":""},{"name":"minor_crash","description":""},{"name":"miscellaneous_services","description":""},{"name":"missed_video_call","description":""},{"name":"mms","description":""},{"name":"mobile_friendly","description":""},{"name":"mobile_off","description":""},{"name":"mobile_screen_share","description":""},{"name":"mobiledata_off","description":""},{"name":"mode","description":""},{"name":"mode_comment","description":""},{"name":"mode_edit","description":""},{"name":"mode_edit_outline","description":""},{"name":"mode_fan_off","description":""},{"name":"mode_night","description":""},{"name":"mode_of_travel","description":""},{"name":"mode_standby","description":""},{"name":"model_training","description":""},{"name":"monetization_on","description":""},{"name":"money","description":""},{"name":"money_off","description":""},{"name":"money_off_csred","description":""},{"name":"monitor","description":""},{"name":"monitor_heart","description":""},{"name":"monitor_weight","description":""},{"name":"monochrome_photos","description":""},{"name":"mood","description":""},{"name":"mood_bad","description":""},{"name":"moped","description":""},{"name":"more","description":""},{"name":"more_horiz","description":""},{"name":"more_time","description":""},{"name":"more_vert","description":""},{"name":"mosque","description":""},{"name":"motion_photos_auto","description":""},{"name":"motion_photos_off","description":""},{"name":"motion_photos_on","description":""},{"name":"motion_photos_pause","description":""},{"name":"motion_photos_paused","description":""},{"name":"mouse","description":""},{"name":"move_down","description":""},{"name":"move_to_inbox","description":""},{"name":"move_up","description":""},{"name":"movie","description":""},{"name":"movie_creation","description":""},{"name":"movie_filter","description":""},{"name":"moving","description":""},{"name":"mp","description":""},{"name":"multiline_chart","description":""},{"name":"multiple_stop","description":""},{"name":"museum","description":""},{"name":"music_note","description":""},{"name":"music_off","description":""},{"name":"music_video","description":""},{"name":"my_location","description":""},{"name":"nat","description":""},{"name":"nature","description":""},{"name":"nature_people","description":""},{"name":"navigate_before","description":""},{"name":"navigate_next","description":""},{"name":"navigation","description":""},{"name":"near_me","description":""},{"name":"near_me_disabled","description":""},{"name":"nearby_error","description":""},{"name":"nearby_off","description":""},{"name":"nest_cam_wired_stand","description":""},{"name":"network_cell","description":""},{"name":"network_check","description":""},{"name":"network_locked","description":""},{"name":"network_ping","description":""},{"name":"network_wifi","description":""},{"name":"network_wifi_1_bar","description":""},{"name":"network_wifi_2_bar","description":""},{"name":"network_wifi_3_bar","description":""},{"name":"new_label","description":""},{"name":"new_releases","description":""},{"name":"newspaper","description":""},{"name":"next_plan","description":""},{"name":"next_week","description":""},{"name":"nfc","description":""},{"name":"night_shelter","description":""},{"name":"nightlife","description":""},{"name":"nightlight","description":""},{"name":"nightlight_round","description":""},{"name":"nights_stay","description":""},{"name":"no_accounts","description":""},{"name":"no_adult_content","description":""},{"name":"no_backpack","description":""},{"name":"no_cell","description":""},{"name":"no_crash","description":""},{"name":"no_drinks","description":""},{"name":"no_encryption","description":""},{"name":"no_encryption_gmailerrorred","description":""},{"name":"no_flash","description":""},{"name":"no_food","description":""},{"name":"no_luggage","description":""},{"name":"no_meals","description":""},{"name":"no_meeting_room","description":""},{"name":"no_photography","description":""},{"name":"no_sim","description":""},{"name":"no_stroller","description":""},{"name":"no_transfer","description":""},{"name":"noise_aware","description":""},{"name":"noise_control_off","description":""},{"name":"nordic_walking","description":""},{"name":"north","description":""},{"name":"north_east","description":""},{"name":"north_west","description":""},{"name":"not_accessible","description":""},{"name":"not_interested","description":""},{"name":"not_listed_location","description":""},{"name":"not_started","description":""},{"name":"note","description":""},{"name":"note_add","description":""},{"name":"note_alt","description":""},{"name":"notes","description":""},{"name":"notification_add","description":""},{"name":"notification_important","description":""},{"name":"notifications","description":""},{"name":"notifications_active","description":""},{"name":"notifications_none","description":""},{"name":"notifications_off","description":""},{"name":"notifications_paused","description":""},{"name":"numbers","description":""},{"name":"offline_bolt","description":""},{"name":"offline_pin","description":""},{"name":"offline_share","description":""},{"name":"oil_barrel","description":""},{"name":"on_device_training","description":""},{"name":"ondemand_video","description":""},{"name":"online_prediction","description":""},{"name":"opacity","description":""},{"name":"open_in_browser","description":""},{"name":"open_in_full","description":""},{"name":"open_in_new","description":""},{"name":"open_in_new_off","description":""},{"name":"open_with","description":""},{"name":"other_houses","description":""},{"name":"outbound","description":""},{"name":"outbox","description":""},{"name":"outdoor_grill","description":""},{"name":"outlet","description":""},{"name":"outlined_flag","description":""},{"name":"output","description":""},{"name":"padding","description":""},{"name":"pages","description":""},{"name":"pageview","description":""},{"name":"paid","description":""},{"name":"palette","description":""},{"name":"pan_tool","description":""},{"name":"pan_tool_alt","description":""},{"name":"panorama","description":""},{"name":"panorama_fish_eye","description":""},{"name":"panorama_horizontal","description":""},{"name":"panorama_horizontal_select","description":""},{"name":"panorama_photosphere","description":""},{"name":"panorama_photosphere_select","description":""},{"name":"panorama_vertical","description":""},{"name":"panorama_vertical_select","description":""},{"name":"panorama_wide_angle","description":""},{"name":"panorama_wide_angle_select","description":""},{"name":"paragliding","description":""},{"name":"park","description":""},{"name":"party_mode","description":""},{"name":"password","description":""},{"name":"pattern","description":""},{"name":"pause","description":""},{"name":"pause_circle","description":""},{"name":"pause_circle_filled","description":""},{"name":"pause_circle_outline","description":""},{"name":"pause_presentation","description":""},{"name":"payment","description":""},{"name":"payments","description":""},{"name":"pedal_bike","description":""},{"name":"pending","description":""},{"name":"pending_actions","description":""},{"name":"pentagon","description":""},{"name":"people","description":""},{"name":"people_alt","description":""},{"name":"people_outline","description":""},{"name":"percent","description":""},{"name":"perm_camera_mic","description":""},{"name":"perm_contact_calendar","description":""},{"name":"perm_data_setting","description":""},{"name":"perm_device_information","description":""},{"name":"perm_identity","description":""},{"name":"perm_media","description":""},{"name":"perm_phone_msg","description":""},{"name":"perm_scan_wifi","description":""},{"name":"person","description":""},{"name":"person_2","description":""},{"name":"person_3","description":""},{"name":"person_4","description":""},{"name":"person_add","description":""},{"name":"person_add_alt","description":""},{"name":"person_add_alt_1","description":""},{"name":"person_add_disabled","description":""},{"name":"person_off","description":""},{"name":"person_outline","description":""},{"name":"person_pin","description":""},{"name":"person_pin_circle","description":""},{"name":"person_remove","description":""},{"name":"person_remove_alt_1","description":""},{"name":"person_search","description":""},{"name":"personal_injury","description":""},{"name":"personal_video","description":""},{"name":"pest_control","description":""},{"name":"pest_control_rodent","description":""},{"name":"pets","description":""},{"name":"phishing","description":""},{"name":"phone","description":""},{"name":"phone_android","description":""},{"name":"phone_bluetooth_speaker","description":""},{"name":"phone_callback","description":""},{"name":"phone_disabled","description":""},{"name":"phone_enabled","description":""},{"name":"phone_forwarded","description":""},{"name":"phone_iphone","description":""},{"name":"phone_locked","description":""},{"name":"phone_missed","description":""},{"name":"phone_paused","description":""},{"name":"phonelink","description":""},{"name":"phonelink_erase","description":""},{"name":"phonelink_lock","description":""},{"name":"phonelink_off","description":""},{"name":"phonelink_ring","description":""},{"name":"phonelink_setup","description":""},{"name":"photo","description":""},{"name":"photo_album","description":""},{"name":"photo_camera","description":""},{"name":"photo_camera_back","description":""},{"name":"photo_camera_front","description":""},{"name":"photo_filter","description":""},{"name":"photo_library","description":""},{"name":"photo_size_select_actual","description":""},{"name":"photo_size_select_large","description":""},{"name":"photo_size_select_small","description":""},{"name":"php","description":""},{"name":"piano","description":""},{"name":"piano_off","description":""},{"name":"picture_as_pdf","description":""},{"name":"picture_in_picture","description":""},{"name":"picture_in_picture_alt","description":""},{"name":"pie_chart","description":""},{"name":"pie_chart_outline","description":""},{"name":"pin","description":""},{"name":"pin_drop","description":""},{"name":"pin_end","description":""},{"name":"pin_invoke","description":""},{"name":"pinch","description":""},{"name":"pivot_table_chart","description":""},{"name":"pix","description":""},{"name":"place","description":""},{"name":"plagiarism","description":""},{"name":"play_arrow","description":""},{"name":"play_circle","description":""},{"name":"play_circle_filled","description":""},{"name":"play_circle_outline","description":""},{"name":"play_disabled","description":""},{"name":"play_for_work","description":""},{"name":"play_lesson","description":""},{"name":"playlist_add","description":""},{"name":"playlist_add_check","description":""},{"name":"playlist_add_check_circle","description":""},{"name":"playlist_add_circle","description":""},{"name":"playlist_play","description":""},{"name":"playlist_remove","description":""},{"name":"plumbing","description":""},{"name":"plus_one","description":""},{"name":"podcasts","description":""},{"name":"point_of_sale","description":""},{"name":"policy","description":""},{"name":"poll","description":""},{"name":"polyline","description":""},{"name":"polymer","description":""},{"name":"pool","description":""},{"name":"portable_wifi_off","description":""},{"name":"portrait","description":""},{"name":"post_add","description":""},{"name":"power","description":""},{"name":"power_input","description":""},{"name":"power_off","description":""},{"name":"power_settings_new","description":""},{"name":"precision_manufacturing","description":""},{"name":"pregnant_woman","description":""},{"name":"present_to_all","description":""},{"name":"preview","description":""},{"name":"price_change","description":""},{"name":"price_check","description":""},{"name":"print","description":""},{"name":"print_disabled","description":""},{"name":"priority_high","description":""},{"name":"privacy_tip","description":""},{"name":"private_connectivity","description":""},{"name":"production_quantity_limits","description":""},{"name":"propane","description":""},{"name":"propane_tank","description":""},{"name":"psychology","description":""},{"name":"psychology_alt","description":""},{"name":"public","description":""},{"name":"public_off","description":""},{"name":"publish","description":""},{"name":"published_with_changes","description":""},{"name":"punch_clock","description":""},{"name":"push_pin","description":""},{"name":"qr_code","description":""},{"name":"qr_code_2","description":""},{"name":"qr_code_scanner","description":""},{"name":"query_builder","description":""},{"name":"query_stats","description":""},{"name":"question_answer","description":""},{"name":"question_mark","description":""},{"name":"queue","description":""},{"name":"queue_music","description":""},{"name":"queue_play_next","description":""},{"name":"quickreply","description":""},{"name":"quiz","description":""},{"name":"r_mobiledata","description":""},{"name":"radar","description":""},{"name":"radio","description":""},{"name":"radio_button_checked","description":""},{"name":"radio_button_unchecked","description":""},{"name":"railway_alert","description":""},{"name":"ramen_dining","description":""},{"name":"ramp_left","description":""},{"name":"ramp_right","description":""},{"name":"rate_review","description":""},{"name":"raw_off","description":""},{"name":"raw_on","description":""},{"name":"read_more","description":""},{"name":"real_estate_agent","description":""},{"name":"receipt","description":""},{"name":"receipt_long","description":""},{"name":"recent_actors","description":""},{"name":"recommend","description":""},{"name":"record_voice_over","description":""},{"name":"rectangle","description":""},{"name":"recycling","description":""},{"name":"redeem","description":""},{"name":"redo","description":""},{"name":"reduce_capacity","description":""},{"name":"refresh","description":""},{"name":"remember_me","description":""},{"name":"remove","description":""},{"name":"remove_circle","description":""},{"name":"remove_circle_outline","description":""},{"name":"remove_done","description":""},{"name":"remove_from_queue","description":""},{"name":"remove_moderator","description":""},{"name":"remove_red_eye","description":""},{"name":"remove_road","description":""},{"name":"remove_shopping_cart","description":""},{"name":"reorder","description":""},{"name":"repartition","description":""},{"name":"repeat","description":""},{"name":"repeat_on","description":""},{"name":"repeat_one","description":""},{"name":"repeat_one_on","description":""},{"name":"replay","description":""},{"name":"replay_10","description":""},{"name":"replay_30","description":""},{"name":"replay_5","description":""},{"name":"replay_circle_filled","description":""},{"name":"reply","description":""},{"name":"reply_all","description":""},{"name":"report","description":""},{"name":"report_gmailerrorred","description":""},{"name":"report_off","description":""},{"name":"report_problem","description":""},{"name":"request_page","description":""},{"name":"request_quote","description":""},{"name":"reset_tv","description":""},{"name":"restart_alt","description":""},{"name":"restaurant","description":""},{"name":"restaurant_menu","description":""},{"name":"restore","description":""},{"name":"restore_from_trash","description":""},{"name":"restore_page","description":""},{"name":"reviews","description":""},{"name":"rice_bowl","description":""},{"name":"ring_volume","description":""},{"name":"rocket","description":""},{"name":"rocket_launch","description":""},{"name":"roller_shades","description":""},{"name":"roller_shades_closed","description":""},{"name":"roller_skating","description":""},{"name":"roofing","description":""},{"name":"room","description":""},{"name":"room_preferences","description":""},{"name":"room_service","description":""},{"name":"rotate_90_degrees_ccw","description":""},{"name":"rotate_90_degrees_cw","description":""},{"name":"rotate_left","description":""},{"name":"rotate_right","description":""},{"name":"roundabout_left","description":""},{"name":"roundabout_right","description":""},{"name":"rounded_corner","description":""},{"name":"route","description":""},{"name":"router","description":""},{"name":"rowing","description":""},{"name":"rss_feed","description":""},{"name":"rsvp","description":""},{"name":"rtt","description":""},{"name":"rule","description":""},{"name":"rule_folder","description":""},{"name":"run_circle","description":""},{"name":"running_with_errors","description":""},{"name":"rv_hookup","description":""},{"name":"safety_check","description":""},{"name":"safety_divider","description":""},{"name":"sailing","description":""},{"name":"sanitizer","description":""},{"name":"satellite","description":""},{"name":"satellite_alt","description":""},{"name":"save","description":""},{"name":"save_alt","description":""},{"name":"save_as","description":""},{"name":"saved_search","description":""},{"name":"savings","description":""},{"name":"scale","description":""},{"name":"scanner","description":""},{"name":"scatter_plot","description":""},{"name":"schedule","description":""},{"name":"schedule_send","description":""},{"name":"schema","description":""},{"name":"school","description":""},{"name":"science","description":""},{"name":"score","description":""},{"name":"scoreboard","description":""},{"name":"screen_lock_landscape","description":""},{"name":"screen_lock_portrait","description":""},{"name":"screen_lock_rotation","description":""},{"name":"screen_rotation","description":""},{"name":"screen_rotation_alt","description":""},{"name":"screen_search_desktop","description":""},{"name":"screen_share","description":""},{"name":"screenshot","description":""},{"name":"screenshot_monitor","description":""},{"name":"scuba_diving","description":""},{"name":"sd","description":""},{"name":"sd_card","description":""},{"name":"sd_card_alert","description":""},{"name":"sd_storage","description":""},{"name":"search","description":""},{"name":"search_off","description":""},{"name":"security","description":""},{"name":"security_update","description":""},{"name":"security_update_good","description":""},{"name":"security_update_warning","description":""},{"name":"segment","description":""},{"name":"select_all","description":""},{"name":"self_improvement","description":""},{"name":"sell","description":""},{"name":"send","description":""},{"name":"send_and_archive","description":""},{"name":"send_time_extension","description":""},{"name":"send_to_mobile","description":""},{"name":"sensor_door","description":""},{"name":"sensor_occupied","description":""},{"name":"sensor_window","description":""},{"name":"sensors","description":""},{"name":"sensors_off","description":""},{"name":"sentiment_dissatisfied","description":""},{"name":"sentiment_neutral","description":""},{"name":"sentiment_satisfied","description":""},{"name":"sentiment_satisfied_alt","description":""},{"name":"sentiment_very_dissatisfied","description":""},{"name":"sentiment_very_satisfied","description":""},{"name":"set_meal","description":""},{"name":"settings","description":""},{"name":"settings_accessibility","description":""},{"name":"settings_applications","description":""},{"name":"settings_backup_restore","description":""},{"name":"settings_bluetooth","description":""},{"name":"settings_brightness","description":""},{"name":"settings_cell","description":""},{"name":"settings_ethernet","description":""},{"name":"settings_input_antenna","description":""},{"name":"settings_input_component","description":""},{"name":"settings_input_composite","description":""},{"name":"settings_input_hdmi","description":""},{"name":"settings_input_svideo","description":""},{"name":"settings_overscan","description":""},{"name":"settings_phone","description":""},{"name":"settings_power","description":""},{"name":"settings_remote","description":""},{"name":"settings_suggest","description":""},{"name":"settings_system_daydream","description":""},{"name":"settings_voice","description":""},{"name":"severe_cold","description":""},{"name":"shape_line","description":""},{"name":"share","description":""},{"name":"share_location","description":""},{"name":"shield","description":""},{"name":"shield_moon","description":""},{"name":"shop","description":""},{"name":"shop_2","description":""},{"name":"shop_two","description":""},{"name":"shopping_bag","description":""},{"name":"shopping_basket","description":""},{"name":"shopping_cart","description":""},{"name":"shopping_cart_checkout","description":""},{"name":"short_text","description":""},{"name":"shortcut","description":""},{"name":"show_chart","description":""},{"name":"shower","description":""},{"name":"shuffle","description":""},{"name":"shuffle_on","description":""},{"name":"shutter_speed","description":""},{"name":"sick","description":""},{"name":"sign_language","description":""},{"name":"signal_cellular_0_bar","description":""},{"name":"signal_cellular_4_bar","description":""},{"name":"signal_cellular_alt","description":""},{"name":"signal_cellular_alt_1_bar","description":""},{"name":"signal_cellular_alt_2_bar","description":""},{"name":"signal_cellular_connected_no_internet_0_bar","description":""},{"name":"signal_cellular_connected_no_internet_4_bar","description":""},{"name":"signal_cellular_no_sim","description":""},{"name":"signal_cellular_nodata","description":""},{"name":"signal_cellular_null","description":""},{"name":"signal_cellular_off","description":""},{"name":"signal_wifi_0_bar","description":""},{"name":"signal_wifi_4_bar","description":""},{"name":"signal_wifi_4_bar_lock","description":""},{"name":"signal_wifi_bad","description":""},{"name":"signal_wifi_connected_no_internet_4","description":""},{"name":"signal_wifi_off","description":""},{"name":"signal_wifi_statusbar_4_bar","description":""},{"name":"signal_wifi_statusbar_connected_no_internet_4","description":""},{"name":"signal_wifi_statusbar_null","description":""},{"name":"signpost","description":""},{"name":"sim_card","description":""},{"name":"sim_card_alert","description":""},{"name":"sim_card_download","description":""},{"name":"single_bed","description":""},{"name":"sip","description":""},{"name":"skateboarding","description":""},{"name":"skip_next","description":""},{"name":"skip_previous","description":""},{"name":"sledding","description":""},{"name":"slideshow","description":""},{"name":"slow_motion_video","description":""},{"name":"smart_button","description":""},{"name":"smart_display","description":""},{"name":"smart_screen","description":""},{"name":"smart_toy","description":""},{"name":"smartphone","description":""},{"name":"smoke_free","description":""},{"name":"smoking_rooms","description":""},{"name":"sms","description":""},{"name":"sms_failed","description":""},{"name":"snippet_folder","description":""},{"name":"snooze","description":""},{"name":"snowboarding","description":""},{"name":"snowmobile","description":""},{"name":"snowshoeing","description":""},{"name":"soap","description":""},{"name":"social_distance","description":""},{"name":"solar_power","description":""},{"name":"sort","description":""},{"name":"sort_by_alpha","description":""},{"name":"sos","description":""},{"name":"soup_kitchen","description":""},{"name":"source","description":""},{"name":"south","description":""},{"name":"south_america","description":""},{"name":"south_east","description":""},{"name":"south_west","description":""},{"name":"spa","description":""},{"name":"space_bar","description":""},{"name":"space_dashboard","description":""},{"name":"spatial_audio","description":""},{"name":"spatial_audio_off","description":""},{"name":"spatial_tracking","description":""},{"name":"speaker","description":""},{"name":"speaker_group","description":""},{"name":"speaker_notes","description":""},{"name":"speaker_notes_off","description":""},{"name":"speaker_phone","description":""},{"name":"speed","description":""},{"name":"spellcheck","description":""},{"name":"splitscreen","description":""},{"name":"spoke","description":""},{"name":"sports","description":""},{"name":"sports_bar","description":""},{"name":"sports_baseball","description":""},{"name":"sports_basketball","description":""},{"name":"sports_cricket","description":""},{"name":"sports_esports","description":""},{"name":"sports_football","description":""},{"name":"sports_golf","description":""},{"name":"sports_gymnastics","description":""},{"name":"sports_handball","description":""},{"name":"sports_hockey","description":""},{"name":"sports_kabaddi","description":""},{"name":"sports_martial_arts","description":""},{"name":"sports_mma","description":""},{"name":"sports_motorsports","description":""},{"name":"sports_rugby","description":""},{"name":"sports_score","description":""},{"name":"sports_soccer","description":""},{"name":"sports_tennis","description":""},{"name":"sports_volleyball","description":""},{"name":"square","description":""},{"name":"square_foot","description":""},{"name":"ssid_chart","description":""},{"name":"stacked_bar_chart","description":""},{"name":"stacked_line_chart","description":""},{"name":"stadium","description":""},{"name":"stairs","description":""},{"name":"star","description":""},{"name":"star_border","description":""},{"name":"star_border_purple500","description":""},{"name":"star_half","description":""},{"name":"star_outline","description":""},{"name":"star_purple500","description":""},{"name":"star_rate","description":""},{"name":"stars","description":""},{"name":"start","description":""},{"name":"stay_current_landscape","description":""},{"name":"stay_current_portrait","description":""},{"name":"stay_primary_landscape","description":""},{"name":"stay_primary_portrait","description":""},{"name":"sticky_note_2","description":""},{"name":"stop","description":""},{"name":"stop_circle","description":""},{"name":"stop_screen_share","description":""},{"name":"storage","description":""},{"name":"store","description":""},{"name":"store_mall_directory","description":""},{"name":"storefront","description":""},{"name":"storm","description":""},{"name":"straight","description":""},{"name":"straighten","description":""},{"name":"stream","description":""},{"name":"streetview","description":""},{"name":"strikethrough_s","description":""},{"name":"stroller","description":""},{"name":"style","description":""},{"name":"subdirectory_arrow_left","description":""},{"name":"subdirectory_arrow_right","description":""},{"name":"subject","description":""},{"name":"subscript","description":""},{"name":"subscriptions","description":""},{"name":"subtitles","description":""},{"name":"subtitles_off","description":""},{"name":"subway","description":""},{"name":"summarize","description":""},{"name":"superscript","description":""},{"name":"supervised_user_circle","description":""},{"name":"supervisor_account","description":""},{"name":"support","description":""},{"name":"support_agent","description":""},{"name":"surfing","description":""},{"name":"surround_sound","description":""},{"name":"swap_calls","description":""},{"name":"swap_horiz","description":""},{"name":"swap_horizontal_circle","description":""},{"name":"swap_vert","description":""},{"name":"swap_vertical_circle","description":""},{"name":"swipe","description":""},{"name":"swipe_down","description":""},{"name":"swipe_down_alt","description":""},{"name":"swipe_left","description":""},{"name":"swipe_left_alt","description":""},{"name":"swipe_right","description":""},{"name":"swipe_right_alt","description":""},{"name":"swipe_up","description":""},{"name":"swipe_up_alt","description":""},{"name":"swipe_vertical","description":""},{"name":"switch_access_shortcut","description":""},{"name":"switch_access_shortcut_add","description":""},{"name":"switch_account","description":""},{"name":"switch_camera","description":""},{"name":"switch_left","description":""},{"name":"switch_right","description":""},{"name":"switch_video","description":""},{"name":"synagogue","description":""},{"name":"sync","description":""},{"name":"sync_alt","description":""},{"name":"sync_disabled","description":""},{"name":"sync_lock","description":""},{"name":"sync_problem","description":""},{"name":"system_security_update","description":""},{"name":"system_security_update_good","description":""},{"name":"system_security_update_warning","description":""},{"name":"system_update","description":""},{"name":"system_update_alt","description":""},{"name":"tab","description":""},{"name":"tab_unselected","description":""},{"name":"table_bar","description":""},{"name":"table_chart","description":""},{"name":"table_restaurant","description":""},{"name":"table_rows","description":""},{"name":"table_view","description":""},{"name":"tablet","description":""},{"name":"tablet_android","description":""},{"name":"tablet_mac","description":""},{"name":"tag","description":""},{"name":"tag_faces","description":""},{"name":"takeout_dining","description":""},{"name":"tap_and_play","description":""},{"name":"tapas","description":""},{"name":"task","description":""},{"name":"task_alt","description":""},{"name":"taxi_alert","description":""},{"name":"temple_buddhist","description":""},{"name":"temple_hindu","description":""},{"name":"terminal","description":""},{"name":"terrain","description":""},{"name":"text_decrease","description":""},{"name":"text_fields","description":""},{"name":"text_format","description":""},{"name":"text_increase","description":""},{"name":"text_rotate_up","description":""},{"name":"text_rotate_vertical","description":""},{"name":"text_rotation_angledown","description":""},{"name":"text_rotation_angleup","description":""},{"name":"text_rotation_down","description":""},{"name":"text_rotation_none","description":""},{"name":"text_snippet","description":""},{"name":"textsms","description":""},{"name":"texture","description":""},{"name":"theater_comedy","description":""},{"name":"theaters","description":""},{"name":"thermostat","description":""},{"name":"thermostat_auto","description":""},{"name":"thumb_down","description":""},{"name":"thumb_down_alt","description":""},{"name":"thumb_down_off_alt","description":""},{"name":"thumb_up","description":""},{"name":"thumb_up_alt","description":""},{"name":"thumb_up_off_alt","description":""},{"name":"thumbs_up_down","description":""},{"name":"thunderstorm","description":""},{"name":"time_to_leave","description":""},{"name":"timelapse","description":""},{"name":"timeline","description":""},{"name":"timer","description":""},{"name":"timer_10","description":""},{"name":"timer_10_select","description":""},{"name":"timer_3","description":""},{"name":"timer_3_select","description":""},{"name":"timer_off","description":""},{"name":"tips_and_updates","description":""},{"name":"tire_repair","description":""},{"name":"title","description":""},{"name":"toc","description":""},{"name":"today","description":""},{"name":"toggle_off","description":""},{"name":"toggle_on","description":""},{"name":"token","description":""},{"name":"toll","description":""},{"name":"tonality","description":""},{"name":"topic","description":""},{"name":"tornado","description":""},{"name":"touch_app","description":""},{"name":"tour","description":""},{"name":"toys","description":""},{"name":"track_changes","description":""},{"name":"traffic","description":""},{"name":"train","description":""},{"name":"tram","description":""},{"name":"transcribe","description":""},{"name":"transfer_within_a_station","description":""},{"name":"transform","description":""},{"name":"transgender","description":""},{"name":"transit_enterexit","description":""},{"name":"translate","description":""},{"name":"travel_explore","description":""},{"name":"trending_down","description":""},{"name":"trending_flat","description":""},{"name":"trending_up","description":""},{"name":"trip_origin","description":""},{"name":"troubleshoot","description":""},{"name":"try","description":""},{"name":"tsunami","description":""},{"name":"tty","description":""},{"name":"tune","description":""},{"name":"tungsten","description":""},{"name":"turn_left","description":""},{"name":"turn_right","description":""},{"name":"turn_sharp_left","description":""},{"name":"turn_sharp_right","description":""},{"name":"turn_slight_left","description":""},{"name":"turn_slight_right","description":""},{"name":"turned_in","description":""},{"name":"turned_in_not","description":""},{"name":"tv","description":""},{"name":"tv_off","description":""},{"name":"two_wheeler","description":""},{"name":"type_specimen","description":""},{"name":"u_turn_left","description":""},{"name":"u_turn_right","description":""},{"name":"umbrella","description":""},{"name":"unarchive","description":""},{"name":"undo","description":""},{"name":"unfold_less","description":""},{"name":"unfold_less_double","description":""},{"name":"unfold_more","description":""},{"name":"unfold_more_double","description":""},{"name":"unpublished","description":""},{"name":"unsubscribe","description":""},{"name":"upcoming","description":""},{"name":"update","description":""},{"name":"update_disabled","description":""},{"name":"upgrade","description":""},{"name":"upload","description":""},{"name":"upload_file","description":""},{"name":"usb","description":""},{"name":"usb_off","description":""},{"name":"vaccines","description":""},{"name":"vape_free","description":""},{"name":"vaping_rooms","description":""},{"name":"verified","description":""},{"name":"verified_user","description":""},{"name":"vertical_align_bottom","description":""},{"name":"vertical_align_center","description":""},{"name":"vertical_align_top","description":""},{"name":"vertical_distribute","description":""},{"name":"vertical_shades","description":""},{"name":"vertical_shades_closed","description":""},{"name":"vertical_split","description":""},{"name":"vibration","description":""},{"name":"video_call","description":""},{"name":"video_camera_back","description":""},{"name":"video_camera_front","description":""},{"name":"video_chat","description":""},{"name":"video_file","description":""},{"name":"video_label","description":""},{"name":"video_library","description":""},{"name":"video_settings","description":""},{"name":"video_stable","description":""},{"name":"videocam","description":""},{"name":"videocam_off","description":""},{"name":"videogame_asset","description":""},{"name":"videogame_asset_off","description":""},{"name":"view_agenda","description":""},{"name":"view_array","description":""},{"name":"view_carousel","description":""},{"name":"view_column","description":""},{"name":"view_comfy","description":""},{"name":"view_comfy_alt","description":""},{"name":"view_compact","description":""},{"name":"view_compact_alt","description":""},{"name":"view_cozy","description":""},{"name":"view_day","description":""},{"name":"view_headline","description":""},{"name":"view_in_ar","description":""},{"name":"view_kanban","description":""},{"name":"view_list","description":""},{"name":"view_module","description":""},{"name":"view_quilt","description":""},{"name":"view_sidebar","description":""},{"name":"view_stream","description":""},{"name":"view_timeline","description":""},{"name":"view_week","description":""},{"name":"vignette","description":""},{"name":"villa","description":""},{"name":"visibility","description":""},{"name":"visibility_off","description":""},{"name":"voice_chat","description":""},{"name":"voice_over_off","description":""},{"name":"voicemail","description":""},{"name":"volcano","description":""},{"name":"volume_down","description":""},{"name":"volume_mute","description":""},{"name":"volume_off","description":""},{"name":"volume_up","description":""},{"name":"volunteer_activism","description":""},{"name":"vpn_key","description":""},{"name":"vpn_key_off","description":""},{"name":"vpn_lock","description":""},{"name":"vrpano","description":""},{"name":"wallet","description":""},{"name":"wallpaper","description":""},{"name":"warehouse","description":""},{"name":"warning","description":""},{"name":"warning_amber","description":""},{"name":"wash","description":""},{"name":"watch","description":""},{"name":"watch_later","description":""},{"name":"watch_off","description":""},{"name":"water","description":""},{"name":"water_damage","description":""},{"name":"water_drop","description":""},{"name":"waterfall_chart","description":""},{"name":"waves","description":""},{"name":"waving_hand","description":""},{"name":"wb_auto","description":""},{"name":"wb_cloudy","description":""},{"name":"wb_incandescent","description":""},{"name":"wb_iridescent","description":""},{"name":"wb_shade","description":""},{"name":"wb_sunny","description":""},{"name":"wb_twilight","description":""},{"name":"wc","description":""},{"name":"web","description":""},{"name":"web_asset","description":""},{"name":"web_asset_off","description":""},{"name":"web_stories","description":""},{"name":"webhook","description":""},{"name":"weekend","description":""},{"name":"west","description":""},{"name":"whatshot","description":""},{"name":"wheelchair_pickup","description":""},{"name":"where_to_vote","description":""},{"name":"widgets","description":""},{"name":"width_full","description":""},{"name":"width_normal","description":""},{"name":"width_wide","description":""},{"name":"wifi","description":""},{"name":"wifi_1_bar","description":""},{"name":"wifi_2_bar","description":""},{"name":"wifi_calling","description":""},{"name":"wifi_calling_3","description":""},{"name":"wifi_channel","description":""},{"name":"wifi_find","description":""},{"name":"wifi_lock","description":""},{"name":"wifi_off","description":""},{"name":"wifi_password","description":""},{"name":"wifi_protected_setup","description":""},{"name":"wifi_tethering","description":""},{"name":"wifi_tethering_error","description":""},{"name":"wifi_tethering_off","description":""},{"name":"wind_power","description":""},{"name":"window","description":""},{"name":"wine_bar","description":""},{"name":"woman","description":""},{"name":"woman_2","description":""},{"name":"work","description":""},{"name":"work_history","description":""},{"name":"work_off","description":""},{"name":"work_outline","description":""},{"name":"workspace_premium","description":""},{"name":"workspaces","description":""},{"name":"wrap_text","description":""},{"name":"wrong_location","description":""},{"name":"wysiwyg","description":""},{"name":"yard","description":""},{"name":"youtube_searched_for","description":""},{"name":"zoom_in","description":""},{"name":"zoom_in_map","description":""},{"name":"zoom_out","description":""},{"name":"zoom_out_map","description":""}]}}},"rk-sheet-splitter":{"class":"Core.Components.SheetSplitter","name":"rk-sheet-splitter","description":"","attributes":{"copy":{"name":"copy","description":"","type":"string","values":[]},"name":{"name":"name","description":"","type":"string","values":[]}}},"rk-pwa-prompt-ios":{"class":"Core.Components.PwaPromptIos","name":"rk-pwa-prompt-ios","description":"","attributes":{"visible":{"name":"visible","description":"","type":"boolean","values":[]}}},"rk-confirm":{"class":"Core.Components.Confirm","name":"rk-confirm","description":"","attributes":{"no_red_btn":{"name":"no_red_btn","description":"","type":"boolean","values":[]},"behind":{"name":"behind","description":"","type":"boolean","values":[]},"close_on_click":{"name":"close_on_click","description":"","type":"boolean","values":[]}}},"rk-alert":{"class":"Core.Components.Alert","name":"rk-alert","description":"","attributes":{"no_red_btn":{"name":"no_red_btn","description":"","type":"boolean","values":[]},"behind":{"name":"behind","description":"","type":"boolean","values":[]},"close_on_click":{"name":"close_on_click","description":"","type":"boolean","values":[]}}},"rk-button-icon":{"class":"Core.Components.ButtonIcon","name":"rk-button-icon","description":"","attributes":{"color":{"name":"color","description":"","type":"string","values":[{"name":"green","description":""},{"name":"success","description":""},{"name":"red","description":""},{"name":"error","description":""},{"name":"orange","description":""},{"name":"warning","description":""},{"name":"blue","description":""},{"name":"information","description":""},{"name":"primary","description":""},{"name":"secondary","description":""}]},"outline":{"name":"outline","description":"","type":"boolean","values":[]},"disabled":{"name":"disabled","description":"","type":"boolean","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]}}},"rk-notification":{"class":"Core.Components.Notification","name":"rk-notification","description":"","attributes":{"position":{"name":"position","description":"","type":"string","values":[{"name":"bottom","description":""},{"name":"top","description":""},{"name":"bottom left","description":""},{"name":"top left","description":""},{"name":"bottom right","description":""},{"name":"top right","description":""}]},"color":{"name":"color","description":"","type":"string","values":[{"name":"green","description":""},{"name":"success","description":""},{"name":"red","description":""},{"name":"error","description":""},{"name":"orange","description":""},{"name":"warning","description":""},{"name":"blue","description":""},{"name":"information","description":""},{"name":"primary","description":""},{"name":"secondary","description":""}]},"delay":{"name":"delay","description":"/**\n         * Use minus -1 to have an infinite timer\n         */","type":"number","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]},"subject":{"name":"subject","description":"","type":"string","values":[]}}},"rk-resize":{"class":"Core.Components.Resize","name":"rk-resize","description":"","attributes":{"min_width":{"name":"min_width","description":"","type":"number","values":[]},"min_height":{"name":"min_height","description":"","type":"number","values":[]},"max_width":{"name":"max_width","description":"","type":"number","values":[]},"max_height":{"name":"max_height","description":"","type":"number","values":[]}}},"rk-panel":{"class":"Core.System.Panel","name":"rk-panel","description":"","attributes":{}},"rk-page-case-container":{"class":"Core.Components.PageCaseContainer","name":"rk-page-case-container","description":"","attributes":{}},"rk-page-case-slot":{"class":"Core.Components.PageCaseSlot","name":"rk-page-case-slot","description":"","attributes":{"no":{"name":"no","description":"","type":"number","values":[]}}},"rk-page-case":{"class":"Core.Components.PageCase","name":"rk-page-case","description":"","attributes":{"min_case_margin_left":{"name":"min_case_margin_left","description":"","type":"number","values":[]},"min_case_margin_top":{"name":"min_case_margin_top","description":"","type":"number","values":[]},"move_content":{"name":"move_content","description":"/**\n         * Move the children from the slot to the case\n         */","type":"boolean","values":[]},"order_position":{"name":"order_position","description":"","type":"boolean","values":[]},"inverse":{"name":"inverse","description":"","type":"boolean","values":[]},"allow_scroll_outside":{"name":"allow_scroll_outside","description":"","type":"boolean","values":[]},"lock":{"name":"lock","description":"","type":"boolean","values":[]},"min_page_number":{"name":"min_page_number","description":"","type":"number","values":[]},"case_width":{"name":"case_width","description":"","type":"number","values":[]},"case_height":{"name":"case_height","description":"","type":"number","values":[]}}},"rk-context-menu-separator":{"class":"Core.Components.ContextMenuSeparator","name":"rk-context-menu-separator","description":"","attributes":{}},"rk-collapse":{"class":"Core.Components.Collapse","name":"rk-collapse","description":"","attributes":{"open":{"name":"open","description":"","type":"boolean","values":[]},"no_animation":{"name":"no_animation","description":"","type":"boolean","values":[]}}},"rk-context-menu-item":{"class":"Core.Components.ContextMenuItem","name":"rk-context-menu-item","description":"","attributes":{"text":{"name":"text","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]}}},"rk-context-menu":{"class":"Core.Components.ContextMenu","name":"rk-context-menu","description":"","attributes":{}},"rk-loading":{"class":"Core.System.Loading","name":"rk-loading","description":"","attributes":{"background":{"name":"background","description":"","type":"boolean","values":[]},"text":{"name":"text","description":"","type":"string","values":[]}}},"rk-context-menu-element":{"class":"Core.Components.ContextMenuElement","name":"rk-context-menu-element","description":"","attributes":{}},"rk-app-list":{"class":"Core.System.AppList","name":"rk-app-list","description":"","attributes":{"show":{"name":"show","description":"","type":"boolean","values":[]}}},"rk-scrollable":{"class":"Core.Components.Scrollable","name":"rk-scrollable","description":"","attributes":{"min_zoom":{"name":"min_zoom","description":"","type":"number","values":[]},"max_zoom":{"name":"max_zoom","description":"","type":"number","values":[]},"floating_scroll":{"name":"floating_scroll","description":"/**\r\n         * Determine if scrollbar will be floating or not\r\n         */","type":"boolean","values":[]},"x_scroll":{"name":"x_scroll","description":"/**\r\n         * Determine if x scroll is allowed\r\n         */","type":"boolean","values":[]},"y_scroll":{"name":"y_scroll","description":"/**\r\n         * Determine if x scroll is allowed\r\n         */","type":"boolean","values":[]},"auto_hide":{"name":"auto_hide","description":"/**\r\n         * If true, the scrollers will hide if they're not in use\r\n         */","type":"boolean","values":[]},"break":{"name":"break","description":"","type":"number","values":[]},"disable":{"name":"disable","description":"/**\r\n         * Disable user action\r\n         */","type":"boolean","values":[]},"mouse_drag":{"name":"mouse_drag","description":"/**\r\n         * Allow scroll by dragging with the mouse\r\n         */","type":"boolean","values":[]},"pinch":{"name":"pinch","description":"","type":"boolean","values":[]},"zoom":{"name":"zoom","description":"/**\r\n         * Set the zoom to apply for the container\r\n         */","type":"number","values":[]}}},"rk-tabs":{"class":"Core.Components.Tabs","name":"rk-tabs","description":"","attributes":{"header_full_width":{"name":"header_full_width","description":"","type":"boolean","values":[]}}},"rk-tooltip":{"class":"Core.Components.Tooltip","name":"rk-tooltip","description":"","attributes":{"visible":{"name":"visible","description":"","type":"boolean","values":[]},"position":{"name":"position","description":"","type":"string","values":[{"name":"top","description":""},{"name":"left","description":""},{"name":"bottom","description":""},{"name":"right","description":""}]},"color":{"name":"color","description":"","type":"string","values":[{"name":"green","description":""},{"name":"success","description":""},{"name":"red","description":""},{"name":"error","description":""},{"name":"orange","description":""},{"name":"warning","description":""},{"name":"blue","description":""},{"name":"information","description":""},{"name":"primary","description":""},{"name":"secondary","description":""}]},"use_absolute":{"name":"use_absolute","description":"","type":"boolean","values":[]},"delay":{"name":"delay","description":"","type":"number","values":[]},"delay_touch":{"name":"delay_touch","description":"","type":"number","values":[]}}},"rk-home-panel":{"class":"Core.System.HomePanel","name":"rk-home-panel","description":"","attributes":{}},"rk-home-btn":{"class":"Core.System.HomeBtn","name":"rk-home-btn","description":"","attributes":{"active":{"name":"active","description":"","type":"boolean","values":[]}}},"rk-bottom-bar":{"class":"Core.System.BottomBar","name":"rk-bottom-bar","description":"","attributes":{}},"rk-app-install-panel":{"class":"Core.System.AppInstallPanel","name":"rk-app-install-panel","description":"","attributes":{}},"rk-notification-manager":{"class":"Core.Components.NotificationManager","name":"rk-notification-manager","description":"","attributes":{"gap":{"name":"gap","description":"","type":"number","values":[]}}},"rk-frame-not-allowed":{"class":"Core.System.FrameNotAllowed","name":"rk-frame-not-allowed","description":"","attributes":{}},"rk-frame-404":{"class":"Core.System.Frame404","name":"rk-frame-404","description":"","attributes":{}},"rk-link":{"class":"Core.Components.Link","name":"rk-link","description":"","attributes":{"to":{"name":"to","description":"","type":"string","values":[]},"active_pattern":{"name":"active_pattern","description":"","type":"string","values":[]},"active":{"name":"active","description":"","type":"boolean","values":[]}}},"rk-desktop":{"class":"Core.System.Desktop","name":"rk-desktop","description":"","attributes":{"show_application_list":{"name":"show_application_list","description":"","type":"boolean","values":[]},"is_active":{"name":"is_active","description":"/**\r\n         * Determine if the desktop is the one visible on screen\r\n         */","type":"boolean","values":[]},"background_size":{"name":"background_size","description":"","type":"string","values":[]},"desktop_id":{"name":"desktop_id","description":"","type":"number","values":[]}}},"rk-pwa-button":{"class":"Core.System.PwaButton","name":"rk-pwa-button","description":"","attributes":{"visible":{"name":"visible","description":"","type":"boolean","values":[]},"downloading":{"name":"downloading","description":"","type":"boolean","values":[]}}},"rk-os":{"class":"Core.System.Os","name":"rk-os","description":"","attributes":{"loading":{"name":"loading","description":"","type":"boolean","values":[]},"ready":{"name":"ready","description":"","type":"boolean","values":[]},"no_connection":{"name":"no_connection","description":"","type":"boolean","values":[]},"desktop_list":{"name":"desktop_list","description":"","type":"boolean","values":[]},"show_application_list":{"name":"show_application_list","description":"","type":"boolean","values":[]},"active_desktop":{"name":"active_desktop","description":"","type":"number","values":[]}}},"rk-core-app-icon":{"class":"Core.System.CoreAppIcon","name":"rk-core-app-icon","description":"","attributes":{"shaking":{"name":"shaking","description":"","type":"boolean","values":[]},"can_remove":{"name":"can_remove","description":"","type":"boolean","values":[]},"is_open":{"name":"is_open","description":"","type":"boolean","values":[]},"position":{"name":"position","description":"","type":"number","values":[]}}},"rk-app-icon-inline":{"class":"Core.System.AppIconInline","name":"rk-app-icon-inline","description":"","attributes":{"text":{"name":"text","description":"","type":"string","values":[]}}},"rk-calendar-day-default":{"class":"Core.Components.CalendarDayDefault","name":"rk-calendar-day-default","description":"","attributes":{"other":{"name":"other","description":"","type":"boolean","values":[]},"today":{"name":"today","description":"","type":"boolean","values":[]}}},"rk-calendar":{"class":"Core.Components.Calendar","name":"rk-calendar","description":"","attributes":{"date":{"name":"date","description":"","type":"Date","values":[]}}},"rk-date-picker-calendar-day":{"class":"Core.Components.DatePickerCalendarDay","name":"rk-date-picker-calendar-day","description":"","attributes":{"other":{"name":"other","description":"","type":"boolean","values":[]},"today":{"name":"today","description":"","type":"boolean","values":[]},"selected":{"name":"selected","description":"","type":"boolean","values":[]}}},"rk-add-on-time":{"class":"Core.System.AddOnTime","name":"rk-add-on-time","description":"","attributes":{"active":{"name":"active","description":"","type":"boolean","values":[]}}},"rk-sheet-preview":{"class":"Core.Components.SheetPreview","name":"rk-sheet-preview","description":"","attributes":{"loading":{"name":"loading","description":"","type":"boolean","values":[]},"filename":{"name":"filename","description":"","type":"string","values":[]}}},"rk-inline-text":{"class":"Core.Components.InlineText","name":"rk-inline-text","description":"","attributes":{"edit":{"name":"edit","description":"","type":"boolean","values":[]}}},"rk-textarea":{"class":"Core.Components.Textarea","name":"rk-textarea","description":"","attributes":{"resize":{"name":"resize","description":"","type":"boolean","values":[]},"autogrow":{"name":"autogrow","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]},"value":{"name":"value","description":"","type":"string","values":[]}}},"rk-switch":{"class":"Core.Components.Switch","name":"rk-switch","description":"","attributes":{"label_end":{"name":"label_end","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"disabled":{"name":"disabled","description":"","type":"boolean","values":[]},"checked":{"name":"checked","description":"","type":"boolean","values":[]}}},"rk-slider":{"class":"Core.Components.Slider","name":"rk-slider","description":"","attributes":{"popup":{"name":"popup","description":"","type":"string","values":[{"name":"never","description":""},{"name":"always","description":""},{"name":"onMove","description":""}]},"label":{"name":"label","description":"","type":"string","values":[]},"min":{"name":"min","description":"","type":"number","values":[]},"max":{"name":"max","description":"","type":"number","values":[]},"value":{"name":"value","description":"","type":"number","values":[]},"step":{"name":"step","description":"","type":"number","values":[]}}},"rk-input-number":{"class":"Core.Components.InputNumber","name":"rk-input-number","description":"","attributes":{"readonly":{"name":"readonly","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]},"value":{"name":"value","description":"","type":"number","values":[]},"min":{"name":"min","description":"","type":"number","values":[]},"max":{"name":"max","description":"","type":"number","values":[]},"unit":{"name":"unit","description":"","type":"string","values":[]}}},"rk-input-date":{"class":"Core.Components.InputDate","name":"rk-input-date","description":"","attributes":{"year_format":{"name":"year_format","description":"/**\n         * Year format.\n         */","type":"string","values":[{"name":"numeric","description":""},{"name":"2-digit","description":""}]},"month_format":{"name":"month_format","description":"/**\n         * Month format.\n         */","type":"string","values":[{"name":"numeric","description":""},{"name":"2-digit","description":""},{"name":"long","description":""},{"name":"short","description":""},{"name":"narrow","description":""}]},"day_format":{"name":"day_format","description":"/**\n         * Day format.\n         */","type":"string","values":[{"name":"numeric","description":""},{"name":"2-digit","description":""}]},"locale":{"name":"locale","description":"/**\n         * Locale for date formatting.\n         */","type":"string","values":[]},"time_zone":{"name":"time_zone","description":"/**\n         * Time zone for date formatting.\n         */","type":"string","values":[]},"clearable":{"name":"clearable","description":"/**\n         * Whether the input is clearable.\n         */","type":"boolean","values":[]},"label":{"name":"label","description":"/**\n         * Label text for the input field.\n         */","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"/**\n         * Placeholder text for the input field.\n         */","type":"string","values":[]},"icon":{"name":"icon","description":"/**\n         * URL or path to an icon.\n         */","type":"string","values":[]},"icon_position":{"name":"icon_position","description":"/**\n         * Position of the icon.\n         */","type":"string","values":[{"name":"left","description":""},{"name":"right","description":""}]},"time":{"name":"time","description":"/**\n         * Whether the time should be displayed.\n         */","type":"boolean","values":[]}}},"rk-form":{"class":"Core.Components.Form","name":"rk-form","description":"","attributes":{}},"rk-button":{"class":"Core.Components.Button","name":"rk-button","description":"","attributes":{"color":{"name":"color","description":"","type":"string","values":[{"name":"green","description":""},{"name":"success","description":""},{"name":"red","description":""},{"name":"error","description":""},{"name":"orange","description":""},{"name":"warning","description":""},{"name":"blue","description":""},{"name":"information","description":""},{"name":"primary","description":""},{"name":"secondary","description":""}]},"outline":{"name":"outline","description":"","type":"boolean","values":[]},"submit":{"name":"submit","description":"","type":"boolean","values":[]},"disabled":{"name":"disabled","description":"","type":"boolean","values":[]},"icon_before":{"name":"icon_before","description":"","type":"string","values":[]},"icon_after":{"name":"icon_after","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]}}},"rk-checkbox":{"class":"Core.Components.Checkbox","name":"rk-checkbox","description":"","attributes":{"left_label":{"name":"left_label","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]},"checked":{"name":"checked","description":"","type":"boolean","values":[]}}},"rk-color-picker-selector":{"class":"Core.Components.ColorPickerSelector","name":"rk-color-picker-selector","description":"/**\r\n     * La classe `ColorPickerSelector` est un composant d'interface utilisateur pour sélectionner une couleur. \r\n     * Elle offre des fonctionnalités avancées de gestion des couleurs, notamment la sélection par glisser-déposer, \r\n     * le réglage de la teinte, de la saturation et de l'opacité, ainsi que l'affichage des valeurs de couleur sous forme de texte.\r\n     */","attributes":{"direction":{"name":"direction","description":"/**\r\n         * Définit la direction d'affichage du sélecteur de couleurs : `horizontal` ou `vertial`.\r\n         */","type":"string","values":[{"name":"horizontal","description":""},{"name":"vertial","description":""}]},"opacity":{"name":"opacity","description":"/**\r\n         * Indique si l'opacité de la couleur doit être affichée ou non.\r\n         */","type":"boolean","values":[]},"show_text_value":{"name":"show_text_value","description":"/**\r\n         * Indique si la valeur textuelle de la couleur sélectionnée doit être affichée.\r\n         */","type":"boolean","values":[]},"color":{"name":"color","description":"/**\r\n         * La couleur actuelle sélectionnée, représentée sous forme de chaîne de caractères (ex: \"#35942a\"). \r\n         * Lorsque cette propriété est modifiée, la teinte (hue) et l'opacité (alpha) sont mises à jour, \r\n         * et la position du sélecteur est ajustée en conséquence.\r\n         */","type":"string","values":[]}}},"rk-color-picker":{"class":"Core.Components.ColorPicker","name":"rk-color-picker","description":"/**\n     * La classe `ColorPicker` est un composant d'interface utilisateur permettant à l'utilisateur de choisir une couleur. \n     */","attributes":{"preview":{"name":"preview","description":"/**\n         * Définit la position de l'aperçu de la couleur sélectionnée par rapport au champ de saisie. \n         */","type":"string","values":[{"name":"before","description":""},{"name":"after","description":""},{"name":"none","description":""}]},"value":{"name":"value","description":"/**\n         * La valeur actuelle du sélecteur de couleurs.\n         */","type":"string","values":[]},"label":{"name":"label","description":"/**\n         * Le libellé du sélecteur de couleurs.\n         */","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"/**\n         * Le texte d'espace réservé (placeholder) du champ de saisie du sélecteur de couleurs.\n         */","type":"string","values":[]},"direction":{"name":"direction","description":"/**\n         * Définit la direction d'affichage du sélecteur de couleurs.\n         */","type":"string","values":[{"name":"horizontal","description":""},{"name":"vertial","description":""}]},"opacity":{"name":"opacity","description":"/**\n         * Indique si l'opacité de la couleur doit être affichée ou non.\n         */","type":"boolean","values":[]},"show_text_value":{"name":"show_text_value","description":"/**\n         * Indique si la valeur textuelle de la couleur sélectionnée doit être affichée.\n         */","type":"boolean","values":[]}}},"rk-date-picker-calendar":{"class":"Core.Components.DatePickerCalendar","name":"rk-date-picker-calendar","description":"","attributes":{"date":{"name":"date","description":"","type":"Date","values":[]}}},"rk-date-picker":{"class":"Core.Components.DatePicker","name":"rk-date-picker","description":"","attributes":{"year_format":{"name":"year_format","description":"","type":"string","values":[{"name":"numeric","description":""},{"name":"2-digit","description":""}]},"month_format":{"name":"month_format","description":"","type":"string","values":[{"name":"numeric","description":""},{"name":"2-digit","description":""},{"name":"long","description":""},{"name":"short","description":""},{"name":"narrow","description":""}]},"day_format":{"name":"day_format","description":"","type":"string","values":[{"name":"numeric","description":""},{"name":"2-digit","description":""}]},"locale":{"name":"locale","description":"","type":"string","values":[]},"time_zone":{"name":"time_zone","description":"","type":"string","values":[]},"hide_on_select":{"name":"hide_on_select","description":"","type":"boolean","values":[]},"no_undefined":{"name":"no_undefined","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]}}},"rk-calendar-container":{"class":"Core.Components.CalendarContainer","name":"rk-calendar-container","description":"","attributes":{"visible":{"name":"visible","description":"","type":"boolean","values":[]}}},"rk-input":{"class":"Core.Components.Input","name":"rk-input","description":"","attributes":{"readonly":{"name":"readonly","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"","type":"string","values":[]},"unit":{"name":"unit","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]},"icon_position":{"name":"icon_position","description":"","type":"string","values":[{"name":"left","description":""},{"name":"right","description":""}]},"value":{"name":"value","description":"","type":"string","values":[]}}},"rk-password":{"class":"Core.Components.Password","name":"rk-password","description":"","attributes":{"label":{"name":"label","description":"","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"","type":"string","values":[]},"unit":{"name":"unit","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]},"value":{"name":"value","description":"","type":"string","values":[]},"readonly":{"name":"readonly","description":"","type":"boolean","values":[]},"icon_position":{"name":"icon_position","description":"","type":"string","values":[{"name":"left","description":""},{"name":"right","description":""}]}}},"rk-generic-option":{"class":"Core.Components.GenericOption","name":"rk-generic-option","description":"","attributes":{}},"rk-option-enum":{"class":"Core.Components.OptionEnum","name":"rk-option-enum","description":"","attributes":{}},"rk-option":{"class":"Core.Components.Option","name":"rk-option","description":"","attributes":{"value":{"name":"value","description":"","type":"string","values":[]}}},"rk-select":{"class":"Core.Components.Select","name":"rk-select","description":"","attributes":{"label":{"name":"label","description":"","type":"string","values":[]},"placeholder":{"name":"placeholder","description":"","type":"string","values":[]},"icon":{"name":"icon","description":"","type":"string","values":[]},"open":{"name":"open","description":"","type":"boolean","values":[]},"searchable":{"name":"searchable","description":"","type":"boolean","values":[]},"value":{"name":"value","description":"","type":"string","values":[]}}},"rk-item-box-select":{"class":"Core.Components.ItemBoxSelect","name":"rk-item-box-select","description":"","attributes":{"space":{"name":"space","description":"","type":"number","values":[]},"value":{"name":"value","description":"@inheritdoc\n         ","type":"string","values":[]}}},"rk-item-box-option":{"class":"Core.Components.ItemBoxOption","name":"rk-item-box-option","description":"","attributes":{"selected":{"name":"selected","description":"","type":"boolean","values":[]},"value":{"name":"value","description":"","type":"string","values":[]}}},"rk-option-data":{"class":"Core.Components.OptionData","name":"rk-option-data","description":"","attributes":{}},"rk-two-columns-option":{"class":"Core.Components.TwoColumnsOption","name":"rk-two-columns-option","description":"","attributes":{"highlight":{"name":"highlight","description":"","type":"boolean","values":[]}}},"rk-two-columns-option-data":{"class":"Core.Components.TwoColumnsOptionData","name":"rk-two-columns-option-data","description":"","attributes":{"highlight":{"name":"highlight","description":"","type":"boolean","values":[]}}},"rk-button-icon-menu":{"class":"Core.Components.ButtonIconMenu","name":"rk-button-icon-menu","description":"","attributes":{"icon":{"name":"icon","description":"","type":"string","values":[]},"color":{"name":"color","description":"","type":"string","values":[]},"outline":{"name":"outline","description":"","type":"boolean","values":[]},"disabled":{"name":"disabled","description":"","type":"boolean","values":[]},"open":{"name":"open","description":"","type":"boolean","values":[]}}},"rk-table-row":{"class":"Core.Components.TableRow","name":"rk-table-row","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]}}},"rk-table-row-data":{"class":"Core.Components.TableRowData","name":"rk-table-row-data","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]}}},"rk-table-cell-string":{"class":"Core.Components.TableCellString","name":"rk-table-cell-string","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-table-cell-picture":{"class":"Core.Components.TableCellPicture","name":"rk-table-cell-picture","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"src":{"name":"src","description":"","type":"string","values":[]},"full":{"name":"full","description":"","type":"boolean","values":[]}}},"rk-table-cell-number":{"class":"Core.Components.TableCellNumber","name":"rk-table-cell-number","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-table-cell-header":{"class":"Core.Components.TableCellHeader","name":"rk-table-cell-header","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"sort_direction":{"name":"sort_direction","description":"","type":"string","values":[{"name":"asc","description":""},{"name":"desc","description":""}]}}},"rk-table-data-cell-header-action":{"class":"Core.Components.TableDataCellHeaderAction","name":"rk-table-data-cell-header-action","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]},"sort_direction":{"name":"sort_direction","description":"","type":"string","values":[{"name":"asc","description":""},{"name":"desc","description":""}]}}},"rk-table-row-header":{"class":"Core.Components.TableRowHeader","name":"rk-table-row-header","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]}}},"rk-table-cell-date":{"class":"Core.Components.TableCellDate","name":"rk-table-cell-date","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-table-cell-custom":{"class":"Core.Components.TableCellCustom","name":"rk-table-cell-custom","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-table-cell-checkbox":{"class":"Core.Components.TableCellCheckbox","name":"rk-table-cell-checkbox","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-table-cell-action":{"class":"Core.Components.TableCellAction","name":"rk-table-cell-action","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-table-data-cell-action":{"class":"Core.Components.TableDataCellAction","name":"rk-table-data-cell-action","description":"","attributes":{"grid":{"name":"grid","description":"","type":"boolean","values":[]},"label":{"name":"label","description":"","type":"string","values":[]}}},"rk-tab-header":{"class":"Core.Components.TabHeader","name":"rk-tab-header","description":"","attributes":{"active":{"name":"active","description":"","type":"boolean","values":[]}}}}
//#endregion html //
//#region dependances //
[{"include":"none","subDependancesInclude":{"*":"none"},"version":"x.x.x","uri":"@Aventus","npm":""},{"include":"none","subDependancesInclude":{"*":"none"},"version":"x.x.x","uri":"@AventusSharp","npm":""},{"include":"none","subDependancesInclude":{"*":"none"},"version":"x.x.x","uri":"@local:MaterialIcon@Main","npm":""},{"include":"none","subDependancesInclude":{"*":"none"},"version":"x.x.x","uri":"@local:Addon@Addon","npm":""}]
//#endregion dependances //
